//
// File generated by rootcint at Mon Feb 25 15:46:44 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TopTreecLcLTRootParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootParticle(void *p = 0);
   static void *newArray_TopTreecLcLTRootParticle(Long_t size, void *p);
   static void delete_TopTreecLcLTRootParticle(void *p);
   static void deleteArray_TopTreecLcLTRootParticle(void *p);
   static void destruct_TopTreecLcLTRootParticle(void *p);
   static void streamer_TopTreecLcLTRootParticle(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootParticle*)
   {
      ::TopTree::TRootParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootParticle", ::TopTree::TRootParticle::Class_Version(), "../TopTreeProducer/interface/../interface/TRootParticle.h", 17,
                  typeid(::TopTree::TRootParticle), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootParticle::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootParticle) );
      instance.SetNew(&new_TopTreecLcLTRootParticle);
      instance.SetNewArray(&newArray_TopTreecLcLTRootParticle);
      instance.SetDelete(&delete_TopTreecLcLTRootParticle);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootParticle);
      instance.SetDestructor(&destruct_TopTreecLcLTRootParticle);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootParticle*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootJet(void *p = 0);
   static void *newArray_TopTreecLcLTRootJet(Long_t size, void *p);
   static void delete_TopTreecLcLTRootJet(void *p);
   static void deleteArray_TopTreecLcLTRootJet(void *p);
   static void destruct_TopTreecLcLTRootJet(void *p);
   static void streamer_TopTreecLcLTRootJet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootJet*)
   {
      ::TopTree::TRootJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootJet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootJet", ::TopTree::TRootJet::Class_Version(), "../TopTreeProducer/interface/TRootJet.h", 21,
                  typeid(::TopTree::TRootJet), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootJet::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootJet) );
      instance.SetNew(&new_TopTreecLcLTRootJet);
      instance.SetNewArray(&newArray_TopTreecLcLTRootJet);
      instance.SetDelete(&delete_TopTreecLcLTRootJet);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootJet);
      instance.SetDestructor(&destruct_TopTreecLcLTRootJet);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootJet*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootMuon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootMuon(void *p = 0);
   static void *newArray_TopTreecLcLTRootMuon(Long_t size, void *p);
   static void delete_TopTreecLcLTRootMuon(void *p);
   static void deleteArray_TopTreecLcLTRootMuon(void *p);
   static void destruct_TopTreecLcLTRootMuon(void *p);
   static void streamer_TopTreecLcLTRootMuon(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootMuon*)
   {
      ::TopTree::TRootMuon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootMuon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootMuon", ::TopTree::TRootMuon::Class_Version(), "../TopTreeProducer/interface/TRootMuon.h", 11,
                  typeid(::TopTree::TRootMuon), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootMuon::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootMuon) );
      instance.SetNew(&new_TopTreecLcLTRootMuon);
      instance.SetNewArray(&newArray_TopTreecLcLTRootMuon);
      instance.SetDelete(&delete_TopTreecLcLTRootMuon);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootMuon);
      instance.SetDestructor(&destruct_TopTreecLcLTRootMuon);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootMuon);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootMuon*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootMuon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootMuon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootGenEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootGenEvent(void *p = 0);
   static void *newArray_TopTreecLcLTRootGenEvent(Long_t size, void *p);
   static void delete_TopTreecLcLTRootGenEvent(void *p);
   static void deleteArray_TopTreecLcLTRootGenEvent(void *p);
   static void destruct_TopTreecLcLTRootGenEvent(void *p);
   static void streamer_TopTreecLcLTRootGenEvent(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootGenEvent*)
   {
      ::TopTree::TRootGenEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootGenEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootGenEvent", ::TopTree::TRootGenEvent::Class_Version(), "../TopTreeProducer/interface/TRootGenEvent.h", 18,
                  typeid(::TopTree::TRootGenEvent), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootGenEvent::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootGenEvent) );
      instance.SetNew(&new_TopTreecLcLTRootGenEvent);
      instance.SetNewArray(&newArray_TopTreecLcLTRootGenEvent);
      instance.SetDelete(&delete_TopTreecLcLTRootGenEvent);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootGenEvent);
      instance.SetDestructor(&destruct_TopTreecLcLTRootGenEvent);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootGenEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootGenEvent*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootGenEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootGenEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootMCParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootMCParticle(void *p = 0);
   static void *newArray_TopTreecLcLTRootMCParticle(Long_t size, void *p);
   static void delete_TopTreecLcLTRootMCParticle(void *p);
   static void deleteArray_TopTreecLcLTRootMCParticle(void *p);
   static void destruct_TopTreecLcLTRootMCParticle(void *p);
   static void streamer_TopTreecLcLTRootMCParticle(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootMCParticle*)
   {
      ::TopTree::TRootMCParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootMCParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootMCParticle", ::TopTree::TRootMCParticle::Class_Version(), "../TopTreeProducer/interface/../interface/TRootMCParticle.h", 14,
                  typeid(::TopTree::TRootMCParticle), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootMCParticle::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootMCParticle) );
      instance.SetNew(&new_TopTreecLcLTRootMCParticle);
      instance.SetNewArray(&newArray_TopTreecLcLTRootMCParticle);
      instance.SetDelete(&delete_TopTreecLcLTRootMCParticle);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootMCParticle);
      instance.SetDestructor(&destruct_TopTreecLcLTRootMCParticle);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootMCParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootMCParticle*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootMCParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootMCParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootGenTop_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootGenTop(void *p = 0);
   static void *newArray_TopTreecLcLTRootGenTop(Long_t size, void *p);
   static void delete_TopTreecLcLTRootGenTop(void *p);
   static void deleteArray_TopTreecLcLTRootGenTop(void *p);
   static void destruct_TopTreecLcLTRootGenTop(void *p);
   static void streamer_TopTreecLcLTRootGenTop(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootGenTop*)
   {
      ::TopTree::TRootGenTop *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootGenTop >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootGenTop", ::TopTree::TRootGenTop::Class_Version(), "../TopTreeProducer/interface/../interface/TRootGenTop.h", 17,
                  typeid(::TopTree::TRootGenTop), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootGenTop::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootGenTop) );
      instance.SetNew(&new_TopTreecLcLTRootGenTop);
      instance.SetNewArray(&newArray_TopTreecLcLTRootGenTop);
      instance.SetDelete(&delete_TopTreecLcLTRootGenTop);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootGenTop);
      instance.SetDestructor(&destruct_TopTreecLcLTRootGenTop);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootGenTop);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootGenTop*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootGenTop*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootGenTop*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootNPGenEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootNPGenEvent(void *p = 0);
   static void *newArray_TopTreecLcLTRootNPGenEvent(Long_t size, void *p);
   static void delete_TopTreecLcLTRootNPGenEvent(void *p);
   static void deleteArray_TopTreecLcLTRootNPGenEvent(void *p);
   static void destruct_TopTreecLcLTRootNPGenEvent(void *p);
   static void streamer_TopTreecLcLTRootNPGenEvent(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootNPGenEvent*)
   {
      ::TopTree::TRootNPGenEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootNPGenEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootNPGenEvent", ::TopTree::TRootNPGenEvent::Class_Version(), "../TopTreeProducer/interface/TRootNPGenEvent.h", 15,
                  typeid(::TopTree::TRootNPGenEvent), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootNPGenEvent::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootNPGenEvent) );
      instance.SetNew(&new_TopTreecLcLTRootNPGenEvent);
      instance.SetNewArray(&newArray_TopTreecLcLTRootNPGenEvent);
      instance.SetDelete(&delete_TopTreecLcLTRootNPGenEvent);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootNPGenEvent);
      instance.SetDestructor(&destruct_TopTreecLcLTRootNPGenEvent);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootNPGenEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootNPGenEvent*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootNPGenEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootNPGenEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootMET_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootMET(void *p = 0);
   static void *newArray_TopTreecLcLTRootMET(Long_t size, void *p);
   static void delete_TopTreecLcLTRootMET(void *p);
   static void deleteArray_TopTreecLcLTRootMET(void *p);
   static void destruct_TopTreecLcLTRootMET(void *p);
   static void streamer_TopTreecLcLTRootMET(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootMET*)
   {
      ::TopTree::TRootMET *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootMET >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootMET", ::TopTree::TRootMET::Class_Version(), "../TopTreeProducer/interface/TRootMET.h", 14,
                  typeid(::TopTree::TRootMET), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootMET::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootMET) );
      instance.SetNew(&new_TopTreecLcLTRootMET);
      instance.SetNewArray(&newArray_TopTreecLcLTRootMET);
      instance.SetDelete(&delete_TopTreecLcLTRootMET);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootMET);
      instance.SetDestructor(&destruct_TopTreecLcLTRootMET);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootMET);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootMET*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootMET*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootMET*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AnalysisEnvironment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AnalysisEnvironment(void *p = 0);
   static void *newArray_AnalysisEnvironment(Long_t size, void *p);
   static void delete_AnalysisEnvironment(void *p);
   static void deleteArray_AnalysisEnvironment(void *p);
   static void destruct_AnalysisEnvironment(void *p);
   static void streamer_AnalysisEnvironment(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::AnalysisEnvironment*)
   {
      ::AnalysisEnvironment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AnalysisEnvironment >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AnalysisEnvironment", ::AnalysisEnvironment::Class_Version(), "./Content/interface/AnalysisEnvironment.h", 16,
                  typeid(::AnalysisEnvironment), DefineBehavior(ptr, ptr),
                  &::AnalysisEnvironment::Dictionary, isa_proxy, 0,
                  sizeof(::AnalysisEnvironment) );
      instance.SetNew(&new_AnalysisEnvironment);
      instance.SetNewArray(&newArray_AnalysisEnvironment);
      instance.SetDelete(&delete_AnalysisEnvironment);
      instance.SetDeleteArray(&deleteArray_AnalysisEnvironment);
      instance.SetDestructor(&destruct_AnalysisEnvironment);
      instance.SetStreamerFunc(&streamer_AnalysisEnvironment);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::AnalysisEnvironment*)
   {
      return GenerateInitInstanceLocal((::AnalysisEnvironment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AnalysisEnvironment*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BinningFirstGuess_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BinningFirstGuess(void *p = 0);
   static void *newArray_BinningFirstGuess(Long_t size, void *p);
   static void delete_BinningFirstGuess(void *p);
   static void deleteArray_BinningFirstGuess(void *p);
   static void destruct_BinningFirstGuess(void *p);
   static void streamer_BinningFirstGuess(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BinningFirstGuess*)
   {
      ::BinningFirstGuess *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BinningFirstGuess >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BinningFirstGuess", ::BinningFirstGuess::Class_Version(), "./Content/interface/BinningFirstGuess.h", 21,
                  typeid(::BinningFirstGuess), DefineBehavior(ptr, ptr),
                  &::BinningFirstGuess::Dictionary, isa_proxy, 0,
                  sizeof(::BinningFirstGuess) );
      instance.SetNew(&new_BinningFirstGuess);
      instance.SetNewArray(&newArray_BinningFirstGuess);
      instance.SetDelete(&delete_BinningFirstGuess);
      instance.SetDeleteArray(&deleteArray_BinningFirstGuess);
      instance.SetDestructor(&destruct_BinningFirstGuess);
      instance.SetStreamerFunc(&streamer_BinningFirstGuess);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BinningFirstGuess*)
   {
      return GenerateInitInstanceLocal((::BinningFirstGuess*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BinningFirstGuess*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Container_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Container(void *p = 0);
   static void *newArray_Container(Long_t size, void *p);
   static void delete_Container(void *p);
   static void deleteArray_Container(void *p);
   static void destruct_Container(void *p);
   static void streamer_Container(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Container*)
   {
      ::Container *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Container >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Container", ::Container::Class_Version(), "./Content/interface/Container.h", 17,
                  typeid(::Container), DefineBehavior(ptr, ptr),
                  &::Container::Dictionary, isa_proxy, 0,
                  sizeof(::Container) );
      instance.SetNew(&new_Container);
      instance.SetNewArray(&newArray_Container);
      instance.SetDelete(&delete_Container);
      instance.SetDeleteArray(&deleteArray_Container);
      instance.SetDestructor(&destruct_Container);
      instance.SetStreamerFunc(&streamer_Container);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Container*)
   {
      return GenerateInitInstanceLocal((::Container*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Container*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Dataset_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Dataset(void *p = 0);
   static void *newArray_Dataset(Long_t size, void *p);
   static void delete_Dataset(void *p);
   static void deleteArray_Dataset(void *p);
   static void destruct_Dataset(void *p);
   static void streamer_Dataset(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Dataset*)
   {
      ::Dataset *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Dataset >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Dataset", ::Dataset::Class_Version(), "./Content/interface/Dataset.h", 14,
                  typeid(::Dataset), DefineBehavior(ptr, ptr),
                  &::Dataset::Dictionary, isa_proxy, 0,
                  sizeof(::Dataset) );
      instance.SetNew(&new_Dataset);
      instance.SetNewArray(&newArray_Dataset);
      instance.SetDelete(&delete_Dataset);
      instance.SetDeleteArray(&deleteArray_Dataset);
      instance.SetDestructor(&destruct_Dataset);
      instance.SetStreamerFunc(&streamer_Dataset);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Dataset*)
   {
      return GenerateInitInstanceLocal((::Dataset*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Dataset*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MCExpectation_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MCExpectation(void *p = 0);
   static void *newArray_MCExpectation(Long_t size, void *p);
   static void delete_MCExpectation(void *p);
   static void deleteArray_MCExpectation(void *p);
   static void destruct_MCExpectation(void *p);
   static void streamer_MCExpectation(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MCExpectation*)
   {
      ::MCExpectation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MCExpectation >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MCExpectation", ::MCExpectation::Class_Version(), "./Content/interface/MCExpectation.h", 11,
                  typeid(::MCExpectation), DefineBehavior(ptr, ptr),
                  &::MCExpectation::Dictionary, isa_proxy, 0,
                  sizeof(::MCExpectation) );
      instance.SetNew(&new_MCExpectation);
      instance.SetNewArray(&newArray_MCExpectation);
      instance.SetDelete(&delete_MCExpectation);
      instance.SetDeleteArray(&deleteArray_MCExpectation);
      instance.SetDestructor(&destruct_MCExpectation);
      instance.SetStreamerFunc(&streamer_MCExpectation);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MCExpectation*)
   {
      return GenerateInitInstanceLocal((::MCExpectation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MCExpectation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MCObsExpectation_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MCObsExpectation(void *p = 0);
   static void *newArray_MCObsExpectation(Long_t size, void *p);
   static void delete_MCObsExpectation(void *p);
   static void deleteArray_MCObsExpectation(void *p);
   static void destruct_MCObsExpectation(void *p);
   static void streamer_MCObsExpectation(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MCObsExpectation*)
   {
      ::MCObsExpectation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MCObsExpectation >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MCObsExpectation", ::MCObsExpectation::Class_Version(), "./Content/interface/MCObsExpectation.h", 11,
                  typeid(::MCObsExpectation), DefineBehavior(ptr, ptr),
                  &::MCObsExpectation::Dictionary, isa_proxy, 0,
                  sizeof(::MCObsExpectation) );
      instance.SetNew(&new_MCObsExpectation);
      instance.SetNewArray(&newArray_MCObsExpectation);
      instance.SetDelete(&delete_MCObsExpectation);
      instance.SetDeleteArray(&deleteArray_MCObsExpectation);
      instance.SetDestructor(&destruct_MCObsExpectation);
      instance.SetStreamerFunc(&streamer_MCObsExpectation);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MCObsExpectation*)
   {
      return GenerateInitInstanceLocal((::MCObsExpectation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MCObsExpectation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootCaloJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootCaloJet(void *p = 0);
   static void *newArray_TopTreecLcLTRootCaloJet(Long_t size, void *p);
   static void delete_TopTreecLcLTRootCaloJet(void *p);
   static void deleteArray_TopTreecLcLTRootCaloJet(void *p);
   static void destruct_TopTreecLcLTRootCaloJet(void *p);
   static void streamer_TopTreecLcLTRootCaloJet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootCaloJet*)
   {
      ::TopTree::TRootCaloJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootCaloJet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootCaloJet", ::TopTree::TRootCaloJet::Class_Version(), "./../TopTreeProducer/interface/TRootCaloJet.h", 18,
                  typeid(::TopTree::TRootCaloJet), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootCaloJet::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootCaloJet) );
      instance.SetNew(&new_TopTreecLcLTRootCaloJet);
      instance.SetNewArray(&newArray_TopTreecLcLTRootCaloJet);
      instance.SetDelete(&delete_TopTreecLcLTRootCaloJet);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootCaloJet);
      instance.SetDestructor(&destruct_TopTreecLcLTRootCaloJet);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootCaloJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootCaloJet*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootCaloJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootCaloJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootCaloMET_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootCaloMET(void *p = 0);
   static void *newArray_TopTreecLcLTRootCaloMET(Long_t size, void *p);
   static void delete_TopTreecLcLTRootCaloMET(void *p);
   static void deleteArray_TopTreecLcLTRootCaloMET(void *p);
   static void destruct_TopTreecLcLTRootCaloMET(void *p);
   static void streamer_TopTreecLcLTRootCaloMET(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootCaloMET*)
   {
      ::TopTree::TRootCaloMET *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootCaloMET >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootCaloMET", ::TopTree::TRootCaloMET::Class_Version(), "./../TopTreeProducer/interface/TRootCaloMET.h", 15,
                  typeid(::TopTree::TRootCaloMET), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootCaloMET::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootCaloMET) );
      instance.SetNew(&new_TopTreecLcLTRootCaloMET);
      instance.SetNewArray(&newArray_TopTreecLcLTRootCaloMET);
      instance.SetDelete(&delete_TopTreecLcLTRootCaloMET);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootCaloMET);
      instance.SetDestructor(&destruct_TopTreecLcLTRootCaloMET);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootCaloMET);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootCaloMET*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootCaloMET*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootCaloMET*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootElectron_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootElectron(void *p = 0);
   static void *newArray_TopTreecLcLTRootElectron(Long_t size, void *p);
   static void delete_TopTreecLcLTRootElectron(void *p);
   static void deleteArray_TopTreecLcLTRootElectron(void *p);
   static void destruct_TopTreecLcLTRootElectron(void *p);
   static void streamer_TopTreecLcLTRootElectron(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootElectron*)
   {
      ::TopTree::TRootElectron *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootElectron >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootElectron", ::TopTree::TRootElectron::Class_Version(), "./../TopTreeProducer/interface/TRootElectron.h", 16,
                  typeid(::TopTree::TRootElectron), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootElectron::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootElectron) );
      instance.SetNew(&new_TopTreecLcLTRootElectron);
      instance.SetNewArray(&newArray_TopTreecLcLTRootElectron);
      instance.SetDelete(&delete_TopTreecLcLTRootElectron);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootElectron);
      instance.SetDestructor(&destruct_TopTreecLcLTRootElectron);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootElectron);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootElectron*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootElectron*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootElectron*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLtriggeredObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLtriggeredObject(void *p = 0);
   static void *newArray_TopTreecLcLtriggeredObject(Long_t size, void *p);
   static void delete_TopTreecLcLtriggeredObject(void *p);
   static void deleteArray_TopTreecLcLtriggeredObject(void *p);
   static void destruct_TopTreecLcLtriggeredObject(void *p);
   static void streamer_TopTreecLcLtriggeredObject(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::triggeredObject*)
   {
      ::TopTree::triggeredObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::triggeredObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::triggeredObject", ::TopTree::triggeredObject::Class_Version(), "./../TopTreeProducer/interface/TRootEvent.h", 19,
                  typeid(::TopTree::triggeredObject), DefineBehavior(ptr, ptr),
                  &::TopTree::triggeredObject::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::triggeredObject) );
      instance.SetNew(&new_TopTreecLcLtriggeredObject);
      instance.SetNewArray(&newArray_TopTreecLcLtriggeredObject);
      instance.SetDelete(&delete_TopTreecLcLtriggeredObject);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLtriggeredObject);
      instance.SetDestructor(&destruct_TopTreecLcLtriggeredObject);
      instance.SetStreamerFunc(&streamer_TopTreecLcLtriggeredObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::triggeredObject*)
   {
      return GenerateInitInstanceLocal((::TopTree::triggeredObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::triggeredObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootEvent(void *p = 0);
   static void *newArray_TopTreecLcLTRootEvent(Long_t size, void *p);
   static void delete_TopTreecLcLTRootEvent(void *p);
   static void deleteArray_TopTreecLcLTRootEvent(void *p);
   static void destruct_TopTreecLcLTRootEvent(void *p);
   static void streamer_TopTreecLcLTRootEvent(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootEvent*)
   {
      ::TopTree::TRootEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootEvent", ::TopTree::TRootEvent::Class_Version(), "./../TopTreeProducer/interface/TRootEvent.h", 32,
                  typeid(::TopTree::TRootEvent), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootEvent::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootEvent) );
      instance.SetNew(&new_TopTreecLcLTRootEvent);
      instance.SetNewArray(&newArray_TopTreecLcLTRootEvent);
      instance.SetDelete(&delete_TopTreecLcLTRootEvent);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootEvent);
      instance.SetDestructor(&destruct_TopTreecLcLTRootEvent);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootEvent*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootGenJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootGenJet(void *p = 0);
   static void *newArray_TopTreecLcLTRootGenJet(Long_t size, void *p);
   static void delete_TopTreecLcLTRootGenJet(void *p);
   static void deleteArray_TopTreecLcLTRootGenJet(void *p);
   static void destruct_TopTreecLcLTRootGenJet(void *p);
   static void streamer_TopTreecLcLTRootGenJet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootGenJet*)
   {
      ::TopTree::TRootGenJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootGenJet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootGenJet", ::TopTree::TRootGenJet::Class_Version(), "./../TopTreeProducer/interface/TRootGenJet.h", 17,
                  typeid(::TopTree::TRootGenJet), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootGenJet::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootGenJet) );
      instance.SetNew(&new_TopTreecLcLTRootGenJet);
      instance.SetNewArray(&newArray_TopTreecLcLTRootGenJet);
      instance.SetDelete(&delete_TopTreecLcLTRootGenJet);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootGenJet);
      instance.SetDestructor(&destruct_TopTreecLcLTRootGenJet);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootGenJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootGenJet*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootGenJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootGenJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootHLTInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootHLTInfo(void *p = 0);
   static void *newArray_TopTreecLcLTRootHLTInfo(Long_t size, void *p);
   static void delete_TopTreecLcLTRootHLTInfo(void *p);
   static void deleteArray_TopTreecLcLTRootHLTInfo(void *p);
   static void destruct_TopTreecLcLTRootHLTInfo(void *p);
   static void streamer_TopTreecLcLTRootHLTInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootHLTInfo*)
   {
      ::TopTree::TRootHLTInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootHLTInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootHLTInfo", ::TopTree::TRootHLTInfo::Class_Version(), "./../TopTreeProducer/interface/TRootHLTInfo.h", 17,
                  typeid(::TopTree::TRootHLTInfo), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootHLTInfo::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootHLTInfo) );
      instance.SetNew(&new_TopTreecLcLTRootHLTInfo);
      instance.SetNewArray(&newArray_TopTreecLcLTRootHLTInfo);
      instance.SetDelete(&delete_TopTreecLcLTRootHLTInfo);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootHLTInfo);
      instance.SetDestructor(&destruct_TopTreecLcLTRootHLTInfo);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootHLTInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootHLTInfo*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootHLTInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootHLTInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootJPTJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootJPTJet(void *p = 0);
   static void *newArray_TopTreecLcLTRootJPTJet(Long_t size, void *p);
   static void delete_TopTreecLcLTRootJPTJet(void *p);
   static void deleteArray_TopTreecLcLTRootJPTJet(void *p);
   static void destruct_TopTreecLcLTRootJPTJet(void *p);
   static void streamer_TopTreecLcLTRootJPTJet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootJPTJet*)
   {
      ::TopTree::TRootJPTJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootJPTJet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootJPTJet", ::TopTree::TRootJPTJet::Class_Version(), "./../TopTreeProducer/interface/TRootJPTJet.h", 18,
                  typeid(::TopTree::TRootJPTJet), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootJPTJet::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootJPTJet) );
      instance.SetNew(&new_TopTreecLcLTRootJPTJet);
      instance.SetNewArray(&newArray_TopTreecLcLTRootJPTJet);
      instance.SetDelete(&delete_TopTreecLcLTRootJPTJet);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootJPTJet);
      instance.SetDestructor(&destruct_TopTreecLcLTRootJPTJet);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootJPTJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootJPTJet*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootJPTJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootJPTJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootPFJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootPFJet(void *p = 0);
   static void *newArray_TopTreecLcLTRootPFJet(Long_t size, void *p);
   static void delete_TopTreecLcLTRootPFJet(void *p);
   static void deleteArray_TopTreecLcLTRootPFJet(void *p);
   static void destruct_TopTreecLcLTRootPFJet(void *p);
   static void streamer_TopTreecLcLTRootPFJet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootPFJet*)
   {
      ::TopTree::TRootPFJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootPFJet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootPFJet", ::TopTree::TRootPFJet::Class_Version(), "./../TopTreeProducer/interface/TRootPFJet.h", 18,
                  typeid(::TopTree::TRootPFJet), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootPFJet::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootPFJet) );
      instance.SetNew(&new_TopTreecLcLTRootPFJet);
      instance.SetNewArray(&newArray_TopTreecLcLTRootPFJet);
      instance.SetDelete(&delete_TopTreecLcLTRootPFJet);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootPFJet);
      instance.SetDestructor(&destruct_TopTreecLcLTRootPFJet);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootPFJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootPFJet*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootPFJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootPFJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootPFMET_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootPFMET(void *p = 0);
   static void *newArray_TopTreecLcLTRootPFMET(Long_t size, void *p);
   static void delete_TopTreecLcLTRootPFMET(void *p);
   static void deleteArray_TopTreecLcLTRootPFMET(void *p);
   static void destruct_TopTreecLcLTRootPFMET(void *p);
   static void streamer_TopTreecLcLTRootPFMET(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootPFMET*)
   {
      ::TopTree::TRootPFMET *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootPFMET >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootPFMET", ::TopTree::TRootPFMET::Class_Version(), "./../TopTreeProducer/interface/TRootPFMET.h", 15,
                  typeid(::TopTree::TRootPFMET), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootPFMET::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootPFMET) );
      instance.SetNew(&new_TopTreecLcLTRootPFMET);
      instance.SetNewArray(&newArray_TopTreecLcLTRootPFMET);
      instance.SetDelete(&delete_TopTreecLcLTRootPFMET);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootPFMET);
      instance.SetDestructor(&destruct_TopTreecLcLTRootPFMET);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootPFMET);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootPFMET*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootPFMET*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootPFMET*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootRun_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootRun(void *p = 0);
   static void *newArray_TopTreecLcLTRootRun(Long_t size, void *p);
   static void delete_TopTreecLcLTRootRun(void *p);
   static void deleteArray_TopTreecLcLTRootRun(void *p);
   static void destruct_TopTreecLcLTRootRun(void *p);
   static void streamer_TopTreecLcLTRootRun(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootRun*)
   {
      ::TopTree::TRootRun *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootRun >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootRun", ::TopTree::TRootRun::Class_Version(), "./../TopTreeProducer/interface/TRootRun.h", 19,
                  typeid(::TopTree::TRootRun), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootRun::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootRun) );
      instance.SetNew(&new_TopTreecLcLTRootRun);
      instance.SetNewArray(&newArray_TopTreecLcLTRootRun);
      instance.SetDelete(&delete_TopTreecLcLTRootRun);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootRun);
      instance.SetDestructor(&destruct_TopTreecLcLTRootRun);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootRun);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootRun*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootRun*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootRun*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootSpinCorrGen_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootSpinCorrGen(void *p = 0);
   static void *newArray_TopTreecLcLTRootSpinCorrGen(Long_t size, void *p);
   static void delete_TopTreecLcLTRootSpinCorrGen(void *p);
   static void deleteArray_TopTreecLcLTRootSpinCorrGen(void *p);
   static void destruct_TopTreecLcLTRootSpinCorrGen(void *p);
   static void streamer_TopTreecLcLTRootSpinCorrGen(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootSpinCorrGen*)
   {
      ::TopTree::TRootSpinCorrGen *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootSpinCorrGen >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootSpinCorrGen", ::TopTree::TRootSpinCorrGen::Class_Version(), "./../TopTreeProducer/interface/TRootSpinCorrGen.h", 19,
                  typeid(::TopTree::TRootSpinCorrGen), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootSpinCorrGen::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootSpinCorrGen) );
      instance.SetNew(&new_TopTreecLcLTRootSpinCorrGen);
      instance.SetNewArray(&newArray_TopTreecLcLTRootSpinCorrGen);
      instance.SetDelete(&delete_TopTreecLcLTRootSpinCorrGen);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootSpinCorrGen);
      instance.SetDestructor(&destruct_TopTreecLcLTRootSpinCorrGen);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootSpinCorrGen);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootSpinCorrGen*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootSpinCorrGen*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootSpinCorrGen*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootTrackMET_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootTrackMET(void *p = 0);
   static void *newArray_TopTreecLcLTRootTrackMET(Long_t size, void *p);
   static void delete_TopTreecLcLTRootTrackMET(void *p);
   static void deleteArray_TopTreecLcLTRootTrackMET(void *p);
   static void destruct_TopTreecLcLTRootTrackMET(void *p);
   static void streamer_TopTreecLcLTRootTrackMET(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootTrackMET*)
   {
      ::TopTree::TRootTrackMET *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootTrackMET >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootTrackMET", ::TopTree::TRootTrackMET::Class_Version(), "./../TopTreeProducer/interface/TRootTrackMET.h", 15,
                  typeid(::TopTree::TRootTrackMET), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootTrackMET::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootTrackMET) );
      instance.SetNew(&new_TopTreecLcLTRootTrackMET);
      instance.SetNewArray(&newArray_TopTreecLcLTRootTrackMET);
      instance.SetDelete(&delete_TopTreecLcLTRootTrackMET);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootTrackMET);
      instance.SetDestructor(&destruct_TopTreecLcLTRootTrackMET);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootTrackMET);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootTrackMET*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootTrackMET*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootTrackMET*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TopTreecLcLTRootVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TopTreecLcLTRootVertex(void *p = 0);
   static void *newArray_TopTreecLcLTRootVertex(Long_t size, void *p);
   static void delete_TopTreecLcLTRootVertex(void *p);
   static void deleteArray_TopTreecLcLTRootVertex(void *p);
   static void destruct_TopTreecLcLTRootVertex(void *p);
   static void streamer_TopTreecLcLTRootVertex(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TopTree::TRootVertex*)
   {
      ::TopTree::TRootVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TopTree::TRootVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TopTree::TRootVertex", ::TopTree::TRootVertex::Class_Version(), "./../TopTreeProducer/interface/TRootVertex.h", 16,
                  typeid(::TopTree::TRootVertex), DefineBehavior(ptr, ptr),
                  &::TopTree::TRootVertex::Dictionary, isa_proxy, 0,
                  sizeof(::TopTree::TRootVertex) );
      instance.SetNew(&new_TopTreecLcLTRootVertex);
      instance.SetNewArray(&newArray_TopTreecLcLTRootVertex);
      instance.SetDelete(&delete_TopTreecLcLTRootVertex);
      instance.SetDeleteArray(&deleteArray_TopTreecLcLTRootVertex);
      instance.SetDestructor(&destruct_TopTreecLcLTRootVertex);
      instance.SetStreamerFunc(&streamer_TopTreecLcLTRootVertex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TopTree::TRootVertex*)
   {
      return GenerateInitInstanceLocal((::TopTree::TRootVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TopTree::TRootVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LightMonster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LightMonster(void *p = 0);
   static void *newArray_LightMonster(Long_t size, void *p);
   static void delete_LightMonster(void *p);
   static void deleteArray_LightMonster(void *p);
   static void destruct_LightMonster(void *p);
   static void streamer_LightMonster(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LightMonster*)
   {
      ::LightMonster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LightMonster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LightMonster", ::LightMonster::Class_Version(), "./JESMeasurement/interface/LightMonster.h", 19,
                  typeid(::LightMonster), DefineBehavior(ptr, ptr),
                  &::LightMonster::Dictionary, isa_proxy, 0,
                  sizeof(::LightMonster) );
      instance.SetNew(&new_LightMonster);
      instance.SetNewArray(&newArray_LightMonster);
      instance.SetDelete(&delete_LightMonster);
      instance.SetDeleteArray(&deleteArray_LightMonster);
      instance.SetDestructor(&destruct_LightMonster);
      instance.SetStreamerFunc(&streamer_LightMonster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LightMonster*)
   {
      return GenerateInitInstanceLocal((::LightMonster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LightMonster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WTree(void *p = 0);
   static void *newArray_WTree(Long_t size, void *p);
   static void delete_WTree(void *p);
   static void deleteArray_WTree(void *p);
   static void destruct_WTree(void *p);
   static void streamer_WTree(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WTree*)
   {
      ::WTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WTree", ::WTree::Class_Version(), "./WHelicities/interface/WTree.h", 19,
                  typeid(::WTree), DefineBehavior(ptr, ptr),
                  &::WTree::Dictionary, isa_proxy, 0,
                  sizeof(::WTree) );
      instance.SetNew(&new_WTree);
      instance.SetNewArray(&newArray_WTree);
      instance.SetDelete(&delete_WTree);
      instance.SetDeleteArray(&deleteArray_WTree);
      instance.SetDestructor(&destruct_WTree);
      instance.SetStreamerFunc(&streamer_WTree);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WTree*)
   {
      return GenerateInitInstanceLocal((::WTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void InclFourthGenTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_InclFourthGenTree(void *p = 0);
   static void *newArray_InclFourthGenTree(Long_t size, void *p);
   static void delete_InclFourthGenTree(void *p);
   static void deleteArray_InclFourthGenTree(void *p);
   static void destruct_InclFourthGenTree(void *p);
   static void streamer_InclFourthGenTree(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::InclFourthGenTree*)
   {
      ::InclFourthGenTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::InclFourthGenTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("InclFourthGenTree", ::InclFourthGenTree::Class_Version(), "./InclFourthGenSearch/interface/InclFourthGenTree.h", 20,
                  typeid(::InclFourthGenTree), DefineBehavior(ptr, ptr),
                  &::InclFourthGenTree::Dictionary, isa_proxy, 0,
                  sizeof(::InclFourthGenTree) );
      instance.SetNew(&new_InclFourthGenTree);
      instance.SetNewArray(&newArray_InclFourthGenTree);
      instance.SetDelete(&delete_InclFourthGenTree);
      instance.SetDeleteArray(&deleteArray_InclFourthGenTree);
      instance.SetDestructor(&destruct_InclFourthGenTree);
      instance.SetStreamerFunc(&streamer_InclFourthGenTree);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::InclFourthGenTree*)
   {
      return GenerateInitInstanceLocal((::InclFourthGenTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::InclFourthGenTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void VJetEstimation_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_VJetEstimation(void *p = 0);
   static void *newArray_VJetEstimation(Long_t size, void *p);
   static void delete_VJetEstimation(void *p);
   static void deleteArray_VJetEstimation(void *p);
   static void destruct_VJetEstimation(void *p);
   static void streamer_VJetEstimation(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::VJetEstimation*)
   {
      ::VJetEstimation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::VJetEstimation >(0);
      static ::ROOT::TGenericClassInfo 
         instance("VJetEstimation", ::VJetEstimation::Class_Version(), "./BkgEstimationMethods/interface/VJetEstimation.h", 75,
                  typeid(::VJetEstimation), DefineBehavior(ptr, ptr),
                  &::VJetEstimation::Dictionary, isa_proxy, 0,
                  sizeof(::VJetEstimation) );
      instance.SetNew(&new_VJetEstimation);
      instance.SetNewArray(&newArray_VJetEstimation);
      instance.SetDelete(&delete_VJetEstimation);
      instance.SetDeleteArray(&deleteArray_VJetEstimation);
      instance.SetDestructor(&destruct_VJetEstimation);
      instance.SetStreamerFunc(&streamer_VJetEstimation);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::VJetEstimation*)
   {
      return GenerateInitInstanceLocal((::VJetEstimation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::VJetEstimation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace TopTree {
//______________________________________________________________________________
TClass *TRootParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootParticle::Class_Name()
{
   return "TopTree::TRootParticle";
}

//______________________________________________________________________________
const char *TRootParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootParticle*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootJet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootJet::Class_Name()
{
   return "TopTree::TRootJet";
}

//______________________________________________________________________________
const char *TRootJet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootJet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootJet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootJet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootJet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootJet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootJet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootJet*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootMuon::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootMuon::Class_Name()
{
   return "TopTree::TRootMuon";
}

//______________________________________________________________________________
const char *TRootMuon::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootMuon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootMuon::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootMuon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootMuon::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootMuon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootMuon::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootMuon*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootGenEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootGenEvent::Class_Name()
{
   return "TopTree::TRootGenEvent";
}

//______________________________________________________________________________
const char *TRootGenEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootGenEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootGenEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootGenEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootGenEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootGenEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootGenEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootGenEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootMCParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootMCParticle::Class_Name()
{
   return "TopTree::TRootMCParticle";
}

//______________________________________________________________________________
const char *TRootMCParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootMCParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootMCParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootMCParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootMCParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootMCParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootMCParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootMCParticle*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootGenTop::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootGenTop::Class_Name()
{
   return "TopTree::TRootGenTop";
}

//______________________________________________________________________________
const char *TRootGenTop::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootGenTop*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootGenTop::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootGenTop*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootGenTop::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootGenTop*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootGenTop::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootGenTop*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootNPGenEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootNPGenEvent::Class_Name()
{
   return "TopTree::TRootNPGenEvent";
}

//______________________________________________________________________________
const char *TRootNPGenEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootNPGenEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootNPGenEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootNPGenEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootNPGenEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootNPGenEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootNPGenEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootNPGenEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootMET::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootMET::Class_Name()
{
   return "TopTree::TRootMET";
}

//______________________________________________________________________________
const char *TRootMET::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootMET*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootMET::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootMET*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootMET::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootMET*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootMET::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootMET*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
//______________________________________________________________________________
TClass *AnalysisEnvironment::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AnalysisEnvironment::Class_Name()
{
   return "AnalysisEnvironment";
}

//______________________________________________________________________________
const char *AnalysisEnvironment::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AnalysisEnvironment*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AnalysisEnvironment::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AnalysisEnvironment*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AnalysisEnvironment::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AnalysisEnvironment*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AnalysisEnvironment::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AnalysisEnvironment*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BinningFirstGuess::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BinningFirstGuess::Class_Name()
{
   return "BinningFirstGuess";
}

//______________________________________________________________________________
const char *BinningFirstGuess::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BinningFirstGuess*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BinningFirstGuess::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BinningFirstGuess*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BinningFirstGuess::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BinningFirstGuess*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BinningFirstGuess::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BinningFirstGuess*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Container::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Container::Class_Name()
{
   return "Container";
}

//______________________________________________________________________________
const char *Container::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Container*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Container::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Container*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Container::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Container*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Container::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Container*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Dataset::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Dataset::Class_Name()
{
   return "Dataset";
}

//______________________________________________________________________________
const char *Dataset::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Dataset*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Dataset::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Dataset*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Dataset::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Dataset*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Dataset::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Dataset*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MCExpectation::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MCExpectation::Class_Name()
{
   return "MCExpectation";
}

//______________________________________________________________________________
const char *MCExpectation::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MCExpectation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCExpectation::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MCExpectation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCExpectation::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MCExpectation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCExpectation::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MCExpectation*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MCObsExpectation::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MCObsExpectation::Class_Name()
{
   return "MCObsExpectation";
}

//______________________________________________________________________________
const char *MCObsExpectation::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MCObsExpectation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCObsExpectation::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MCObsExpectation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCObsExpectation::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MCObsExpectation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCObsExpectation::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MCObsExpectation*)0x0)->GetClass();
   return fgIsA;
}

      namespace TopTree {
//______________________________________________________________________________
TClass *TRootCaloJet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootCaloJet::Class_Name()
{
   return "TopTree::TRootCaloJet";
}

//______________________________________________________________________________
const char *TRootCaloJet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootCaloJet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootCaloJet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootCaloJet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootCaloJet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootCaloJet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootCaloJet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootCaloJet*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootCaloMET::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootCaloMET::Class_Name()
{
   return "TopTree::TRootCaloMET";
}

//______________________________________________________________________________
const char *TRootCaloMET::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootCaloMET*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootCaloMET::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootCaloMET*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootCaloMET::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootCaloMET*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootCaloMET::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootCaloMET*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootElectron::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootElectron::Class_Name()
{
   return "TopTree::TRootElectron";
}

//______________________________________________________________________________
const char *TRootElectron::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootElectron*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootElectron::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootElectron*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootElectron::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootElectron*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootElectron::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootElectron*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *triggeredObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *triggeredObject::Class_Name()
{
   return "TopTree::triggeredObject";
}

//______________________________________________________________________________
const char *triggeredObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::triggeredObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int triggeredObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::triggeredObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void triggeredObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::triggeredObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *triggeredObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::triggeredObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootEvent::Class_Name()
{
   return "TopTree::TRootEvent";
}

//______________________________________________________________________________
const char *TRootEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootGenJet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootGenJet::Class_Name()
{
   return "TopTree::TRootGenJet";
}

//______________________________________________________________________________
const char *TRootGenJet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootGenJet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootGenJet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootGenJet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootGenJet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootGenJet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootGenJet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootGenJet*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootHLTInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootHLTInfo::Class_Name()
{
   return "TopTree::TRootHLTInfo";
}

//______________________________________________________________________________
const char *TRootHLTInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootHLTInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootHLTInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootHLTInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootHLTInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootHLTInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootHLTInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootHLTInfo*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootJPTJet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootJPTJet::Class_Name()
{
   return "TopTree::TRootJPTJet";
}

//______________________________________________________________________________
const char *TRootJPTJet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootJPTJet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootJPTJet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootJPTJet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootJPTJet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootJPTJet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootJPTJet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootJPTJet*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootPFJet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootPFJet::Class_Name()
{
   return "TopTree::TRootPFJet";
}

//______________________________________________________________________________
const char *TRootPFJet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootPFJet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootPFJet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootPFJet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootPFJet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootPFJet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootPFJet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootPFJet*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootPFMET::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootPFMET::Class_Name()
{
   return "TopTree::TRootPFMET";
}

//______________________________________________________________________________
const char *TRootPFMET::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootPFMET*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootPFMET::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootPFMET*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootPFMET::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootPFMET*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootPFMET::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootPFMET*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootRun::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootRun::Class_Name()
{
   return "TopTree::TRootRun";
}

//______________________________________________________________________________
const char *TRootRun::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootRun*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootRun::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootRun*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootRun::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootRun*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootRun::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootRun*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootSpinCorrGen::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootSpinCorrGen::Class_Name()
{
   return "TopTree::TRootSpinCorrGen";
}

//______________________________________________________________________________
const char *TRootSpinCorrGen::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootSpinCorrGen*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootSpinCorrGen::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootSpinCorrGen*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootSpinCorrGen::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootSpinCorrGen*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootSpinCorrGen::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootSpinCorrGen*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootTrackMET::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootTrackMET::Class_Name()
{
   return "TopTree::TRootTrackMET";
}

//______________________________________________________________________________
const char *TRootTrackMET::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootTrackMET*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootTrackMET::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootTrackMET*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootTrackMET::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootTrackMET*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootTrackMET::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootTrackMET*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
      namespace TopTree {
//______________________________________________________________________________
TClass *TRootVertex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootVertex::Class_Name()
{
   return "TopTree::TRootVertex";
}

//______________________________________________________________________________
const char *TRootVertex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootVertex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootVertex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootVertex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TopTree::TRootVertex*)0x0)->GetClass();
   return fgIsA;
}

} // namespace TopTree
//______________________________________________________________________________
TClass *LightMonster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *LightMonster::Class_Name()
{
   return "LightMonster";
}

//______________________________________________________________________________
const char *LightMonster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LightMonster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LightMonster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LightMonster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LightMonster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LightMonster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LightMonster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LightMonster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WTree::Class_Name()
{
   return "WTree";
}

//______________________________________________________________________________
const char *WTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *InclFourthGenTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *InclFourthGenTree::Class_Name()
{
   return "InclFourthGenTree";
}

//______________________________________________________________________________
const char *InclFourthGenTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::InclFourthGenTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int InclFourthGenTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::InclFourthGenTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void InclFourthGenTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::InclFourthGenTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *InclFourthGenTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::InclFourthGenTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *VJetEstimation::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *VJetEstimation::Class_Name()
{
   return "VJetEstimation";
}

//______________________________________________________________________________
const char *VJetEstimation::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::VJetEstimation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int VJetEstimation::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::VJetEstimation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void VJetEstimation::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::VJetEstimation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *VJetEstimation::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::VJetEstimation*)0x0)->GetClass();
   return fgIsA;
}

      namespace TopTree {
//______________________________________________________________________________
void TRootRun::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootRun.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootRun thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      {
         vector<TopTree::TRootHLTInfo> &R__stl =  hltInfos_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TopTree::TRootHLTInfo R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b >> nHLTEvents_;
      R__b >> nHLTWasRun_;
      R__b >> nHLTAccept_;
      R__b >> nHLTErrors_;
      { TString R__str; R__str.Streamer(R__b); hltInputTag_ = R__str.Data(); }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      {
         vector<TopTree::TRootHLTInfo> &R__stl =  hltInfos_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TopTree::TRootHLTInfo>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TopTree::TRootHLTInfo&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b << nHLTEvents_;
      R__b << nHLTWasRun_;
      R__b << nHLTAccept_;
      R__b << nHLTErrors_;
      { TString R__str = hltInputTag_.c_str(); R__str.Streamer(R__b);}
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootRun::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootRun.
      TClass *R__cl = ::TopTree::TRootRun::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hltInfos_", (void*)&hltInfos_);
      R__insp.InspectMember("vector<TopTree::TRootHLTInfo>", (void*)&hltInfos_, "hltInfos_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHLTEvents_", &nHLTEvents_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHLTWasRun_", &nHLTWasRun_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHLTAccept_", &nHLTAccept_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHLTErrors_", &nHLTErrors_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hltInputTag_", (void*)&hltInputTag_);
      R__insp.InspectMember("string", (void*)&hltInputTag_, "hltInputTag_.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootRun(void *p) {
      return  p ? new(p) ::TopTree::TRootRun : new ::TopTree::TRootRun;
   }
   static void *newArray_TopTreecLcLTRootRun(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootRun[nElements] : new ::TopTree::TRootRun[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootRun(void *p) {
      delete ((::TopTree::TRootRun*)p);
   }
   static void deleteArray_TopTreecLcLTRootRun(void *p) {
      delete [] ((::TopTree::TRootRun*)p);
   }
   static void destruct_TopTreecLcLTRootRun(void *p) {
      typedef ::TopTree::TRootRun current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootRun(TBuffer &buf, void *obj) {
      ((::TopTree::TRootRun*)obj)->::TopTree::TRootRun::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootRun

      namespace TopTree {
//______________________________________________________________________________
void TRootHLTInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootHLTInfo.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootHLTInfo thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> RunID_;
      {
         vector<std::string> &R__stl =  hltNames_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UInt_t> &R__stl =  hltWasRun_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UInt_t> &R__stl =  hltErrors_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UInt_t> &R__stl =  hltAccept_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << RunID_;
      {
         vector<std::string> &R__stl =  hltNames_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<std::string>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str((*R__k).c_str());
             R__str.Streamer(R__b);};
            }
         }
      }
      {
         vector<UInt_t> &R__stl =  hltWasRun_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UInt_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UInt_t> &R__stl =  hltErrors_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UInt_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UInt_t> &R__stl =  hltAccept_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UInt_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootHLTInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootHLTInfo.
      TClass *R__cl = ::TopTree::TRootHLTInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RunID_", &RunID_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hltNames_", (void*)&hltNames_);
      R__insp.InspectMember("vector<std::string>", (void*)&hltNames_, "hltNames_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hltWasRun_", (void*)&hltWasRun_);
      R__insp.InspectMember("vector<UInt_t>", (void*)&hltWasRun_, "hltWasRun_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hltErrors_", (void*)&hltErrors_);
      R__insp.InspectMember("vector<UInt_t>", (void*)&hltErrors_, "hltErrors_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hltAccept_", (void*)&hltAccept_);
      R__insp.InspectMember("vector<UInt_t>", (void*)&hltAccept_, "hltAccept_.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootHLTInfo(void *p) {
      return  p ? new(p) ::TopTree::TRootHLTInfo : new ::TopTree::TRootHLTInfo;
   }
   static void *newArray_TopTreecLcLTRootHLTInfo(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootHLTInfo[nElements] : new ::TopTree::TRootHLTInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootHLTInfo(void *p) {
      delete ((::TopTree::TRootHLTInfo*)p);
   }
   static void deleteArray_TopTreecLcLTRootHLTInfo(void *p) {
      delete [] ((::TopTree::TRootHLTInfo*)p);
   }
   static void destruct_TopTreecLcLTRootHLTInfo(void *p) {
      typedef ::TopTree::TRootHLTInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootHLTInfo(TBuffer &buf, void *obj) {
      ((::TopTree::TRootHLTInfo*)obj)->::TopTree::TRootHLTInfo::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootHLTInfo

      namespace TopTree {
//______________________________________________________________________________
void TRootEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootEvent.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootEvent thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> nb_;
      R__b >> eventId_;
      R__b >> runId_;
      R__b >> lumiBlockId_;
      R__b >> flavHistPath_;
      R__b >> kt6PFJets_rho_;
      R__b >> kt6PFJetsForIsolation_rho_;
      R__b >> nTracks_;
      R__b >> nHighPurityTracks_;
      {
         map<Int_t,Int_t> &R__stl =  nPu_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            int R__t2;
            R__b >> R__t2;
            typedef int Value_t;
            std::pair<Value_t const, int > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      R__b >> nTruePU_;
      R__b >> passGlobalHLT_;
      {
         vector<Bool_t> &R__stl =  trigHLT_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            bool R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b >> idParton1_;
      R__b >> xParton1_;
      R__b >> idParton2_;
      R__b >> xParton2_;
      R__b >> factorizationScale_;
      {
         map<std::string,std::vector<TopTree::triggeredObject> > &R__stl =  triggerFilters_;
         R__stl.clear();
         TClass *R__tcl2 = TBuffer::GetClass(typeid(vector<TopTree::triggeredObject,allocator<TopTree::triggeredObject> >));
         if (R__tcl2==0) {
            Error("triggerFilters_ streamer","Missing the TClass object for vector<TopTree::triggeredObject,allocator<TopTree::triggeredObject> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            vector<TopTree::triggeredObject,allocator<TopTree::triggeredObject> > R__t2;
            R__b.StreamObject(&R__t2,R__tcl2);
            typedef string Value_t;
            std::pair<Value_t const, vector<TopTree::triggeredObject,allocator<TopTree::triggeredObject> > > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << nb_;
      R__b << eventId_;
      R__b << runId_;
      R__b << lumiBlockId_;
      R__b << flavHistPath_;
      R__b << kt6PFJets_rho_;
      R__b << kt6PFJetsForIsolation_rho_;
      R__b << nTracks_;
      R__b << nHighPurityTracks_;
      {
         map<Int_t,Int_t> &R__stl =  nPu_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<Int_t,Int_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << ((*R__k).first );
            R__b << ((*R__k).second);
            }
         }
      }
      R__b << nTruePU_;
      R__b << passGlobalHLT_;
      {
         vector<Bool_t> &R__stl =  trigHLT_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Bool_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << idParton1_;
      R__b << xParton1_;
      R__b << idParton2_;
      R__b << xParton2_;
      R__b << factorizationScale_;
      {
         map<std::string,std::vector<TopTree::triggeredObject> > &R__stl =  triggerFilters_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl2 = TBuffer::GetClass(typeid(vector<TopTree::triggeredObject,allocator<TopTree::triggeredObject> >));
         if (R__tcl2==0) {
            Error("triggerFilters_streamer","Missing the TClass object for vector<TopTree::triggeredObject,allocator<TopTree::triggeredObject> >!");
            return;
         }
            map<std::string,std::vector<TopTree::triggeredObject> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str(((*R__k).first ).c_str());
             R__str.Streamer(R__b);};
            R__b.StreamObject((vector<TopTree::triggeredObject,allocator<TopTree::triggeredObject> >*)&((*R__k).second),R__tcl2);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootEvent.
      TClass *R__cl = ::TopTree::TRootEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nb_", &nb_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventId_", &eventId_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runId_", &runId_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lumiBlockId_", &lumiBlockId_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flavHistPath_", &flavHistPath_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kt6PFJets_rho_", &kt6PFJets_rho_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kt6PFJetsForIsolation_rho_", &kt6PFJetsForIsolation_rho_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTracks_", &nTracks_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHighPurityTracks_", &nHighPurityTracks_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPu_", (void*)&nPu_);
      R__insp.InspectMember("map<Int_t,Int_t>", (void*)&nPu_, "nPu_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTruePU_", &nTruePU_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "passGlobalHLT_", &passGlobalHLT_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigHLT_", (void*)&trigHLT_);
      R__insp.InspectMember("vector<Bool_t>", (void*)&trigHLT_, "trigHLT_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idParton1_", &idParton1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xParton1_", &xParton1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idParton2_", &idParton2_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xParton2_", &xParton2_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "factorizationScale_", &factorizationScale_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerFilters_", (void*)&triggerFilters_);
      R__insp.InspectMember("map<std::string,std::vector<TopTree::triggeredObject> >", (void*)&triggerFilters_, "triggerFilters_.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootEvent(void *p) {
      return  p ? new(p) ::TopTree::TRootEvent : new ::TopTree::TRootEvent;
   }
   static void *newArray_TopTreecLcLTRootEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootEvent[nElements] : new ::TopTree::TRootEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootEvent(void *p) {
      delete ((::TopTree::TRootEvent*)p);
   }
   static void deleteArray_TopTreecLcLTRootEvent(void *p) {
      delete [] ((::TopTree::TRootEvent*)p);
   }
   static void destruct_TopTreecLcLTRootEvent(void *p) {
      typedef ::TopTree::TRootEvent current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootEvent(TBuffer &buf, void *obj) {
      ((::TopTree::TRootEvent*)obj)->::TopTree::TRootEvent::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootEvent

      namespace TopTree {
//______________________________________________________________________________
void TRootParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootParticle.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootParticle thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TLorentzVector::Streamer(R__b);
      vertex_.Streamer(R__b);
      R__b >> type_;
      R__b >> charge_;
      R__b >> genParticleIndex_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TLorentzVector::Streamer(R__b);
      vertex_.Streamer(R__b);
      R__b << type_;
      R__b << charge_;
      R__b << genParticleIndex_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootParticle.
      TClass *R__cl = ::TopTree::TRootParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertex_", &vertex_);
      R__insp.InspectMember(vertex_, "vertex_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type_", &type_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge_", &charge_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genParticleIndex_", &genParticleIndex_);
      TLorentzVector::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootParticle(void *p) {
      return  p ? new(p) ::TopTree::TRootParticle : new ::TopTree::TRootParticle;
   }
   static void *newArray_TopTreecLcLTRootParticle(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootParticle[nElements] : new ::TopTree::TRootParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootParticle(void *p) {
      delete ((::TopTree::TRootParticle*)p);
   }
   static void deleteArray_TopTreecLcLTRootParticle(void *p) {
      delete [] ((::TopTree::TRootParticle*)p);
   }
   static void destruct_TopTreecLcLTRootParticle(void *p) {
      typedef ::TopTree::TRootParticle current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootParticle(TBuffer &buf, void *obj) {
      ((::TopTree::TRootParticle*)obj)->::TopTree::TRootParticle::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootParticle

      namespace TopTree {
//______________________________________________________________________________
void TRootMCParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootMCParticle.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootMCParticle thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> status_;
      R__b >> nDau_;
      R__b >> motherType_;
      R__b >> grannyType_;
      R__b >> dauOneId_;
      R__b >> dauTwoId_;
      R__b >> dauThreeId_;
      R__b >> dauFourId_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b << status_;
      R__b << nDau_;
      R__b << motherType_;
      R__b << grannyType_;
      R__b << dauOneId_;
      R__b << dauTwoId_;
      R__b << dauThreeId_;
      R__b << dauFourId_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootMCParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootMCParticle.
      TClass *R__cl = ::TopTree::TRootMCParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status_", &status_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nDau_", &nDau_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "motherType_", &motherType_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "grannyType_", &grannyType_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dauOneId_", &dauOneId_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dauTwoId_", &dauTwoId_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dauThreeId_", &dauThreeId_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dauFourId_", &dauFourId_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootMCParticle(void *p) {
      return  p ? new(p) ::TopTree::TRootMCParticle : new ::TopTree::TRootMCParticle;
   }
   static void *newArray_TopTreecLcLTRootMCParticle(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootMCParticle[nElements] : new ::TopTree::TRootMCParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootMCParticle(void *p) {
      delete ((::TopTree::TRootMCParticle*)p);
   }
   static void deleteArray_TopTreecLcLTRootMCParticle(void *p) {
      delete [] ((::TopTree::TRootMCParticle*)p);
   }
   static void destruct_TopTreecLcLTRootMCParticle(void *p) {
      typedef ::TopTree::TRootMCParticle current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootMCParticle(TBuffer &buf, void *obj) {
      ((::TopTree::TRootMCParticle*)obj)->::TopTree::TRootMCParticle::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootMCParticle

      namespace TopTree {
//______________________________________________________________________________
void TRootJet::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootJet.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootJet thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> jetType_;
      R__b >> nConstituents_;
      R__b >> jetArea_;
      R__b >> maxDistance_;
      for (int R__i0=0; R__i0<4; ++R__i0 )
         { TString R__str; R__str.Streamer(R__b); JetCorrName_[R__i0] = R__str.Data();}
      R__b.ReadStaticArray((float*)JetCorrValue_);
      R__b >> btag_jetBProbabilityBJetTags_;
      R__b >> btag_jetProbabilityBJetTags_;
      R__b >> btag_trackCountingHighPurBJetTags_;
      R__b >> btag_trackCountingHighEffBJetTags_;
      R__b >> btag_simpleSecondaryVertexHighEffBJetTags_;
      R__b >> btag_simpleSecondaryVertexHighPurBJetTags_;
      R__b >> btag_combinedSecondaryVertexBJetTags_;
      R__b >> btag_combinedSecondaryVertexRetrainedBJetTags_;
      R__b >> btag_combinedSecondaryVertexMVABJetTags_;
      R__b >> btag_softMuonBJetTags_;
      R__b >> btag_softMuonByPtBJetTags_;
      R__b >> btag_softMuonByIP3dBJetTags_;
      R__b >> btag_softElectronByPtBJetTags_;
      R__b >> btag_softElectronByIP3dBJetTags_;
      {
         map<std::string,float> &R__stl =  mistag_SF_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            float R__t2;
            R__b >> R__t2;
            typedef string Value_t;
            std::pair<Value_t const, float > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      {
         map<std::string,float> &R__stl =  btag_SF_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            float R__t2;
            R__b >> R__t2;
            typedef string Value_t;
            std::pair<Value_t const, float > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      {
         map<std::string,float> &R__stl =  mistag_SFerr_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            float R__t2;
            R__b >> R__t2;
            typedef string Value_t;
            std::pair<Value_t const, float > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      {
         map<std::string,float> &R__stl =  btag_SFerr_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            float R__t2;
            R__b >> R__t2;
            typedef string Value_t;
            std::pair<Value_t const, float > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      R__b >> partonFlavour_;
      R__b >> isTopJet_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b << jetType_;
      R__b << nConstituents_;
      R__b << jetArea_;
      R__b << maxDistance_;
      for (int R__i0=0; R__i0<4; ++R__i0 )
         { TString R__str(JetCorrName_[R__i0].c_str()); R__str.Streamer(R__b);}
      R__b.WriteArray(JetCorrValue_, 4);
      R__b << btag_jetBProbabilityBJetTags_;
      R__b << btag_jetProbabilityBJetTags_;
      R__b << btag_trackCountingHighPurBJetTags_;
      R__b << btag_trackCountingHighEffBJetTags_;
      R__b << btag_simpleSecondaryVertexHighEffBJetTags_;
      R__b << btag_simpleSecondaryVertexHighPurBJetTags_;
      R__b << btag_combinedSecondaryVertexBJetTags_;
      R__b << btag_combinedSecondaryVertexRetrainedBJetTags_;
      R__b << btag_combinedSecondaryVertexMVABJetTags_;
      R__b << btag_softMuonBJetTags_;
      R__b << btag_softMuonByPtBJetTags_;
      R__b << btag_softMuonByIP3dBJetTags_;
      R__b << btag_softElectronByPtBJetTags_;
      R__b << btag_softElectronByIP3dBJetTags_;
      {
         map<std::string,float> &R__stl =  mistag_SF_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<std::string,float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str(((*R__k).first ).c_str());
             R__str.Streamer(R__b);};
            R__b << ((*R__k).second);
            }
         }
      }
      {
         map<std::string,float> &R__stl =  btag_SF_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<std::string,float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str(((*R__k).first ).c_str());
             R__str.Streamer(R__b);};
            R__b << ((*R__k).second);
            }
         }
      }
      {
         map<std::string,float> &R__stl =  mistag_SFerr_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<std::string,float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str(((*R__k).first ).c_str());
             R__str.Streamer(R__b);};
            R__b << ((*R__k).second);
            }
         }
      }
      {
         map<std::string,float> &R__stl =  btag_SFerr_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<std::string,float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str(((*R__k).first ).c_str());
             R__str.Streamer(R__b);};
            R__b << ((*R__k).second);
            }
         }
      }
      R__b << partonFlavour_;
      R__b << isTopJet_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootJet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootJet.
      TClass *R__cl = ::TopTree::TRootJet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetType_", &jetType_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nConstituents_", &nConstituents_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetArea_", &jetArea_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxDistance_", &maxDistance_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetCorrName_[4]", JetCorrName_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetCorrValue_[4]", JetCorrValue_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_jetBProbabilityBJetTags_", &btag_jetBProbabilityBJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_jetProbabilityBJetTags_", &btag_jetProbabilityBJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_trackCountingHighPurBJetTags_", &btag_trackCountingHighPurBJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_trackCountingHighEffBJetTags_", &btag_trackCountingHighEffBJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_simpleSecondaryVertexHighEffBJetTags_", &btag_simpleSecondaryVertexHighEffBJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_simpleSecondaryVertexHighPurBJetTags_", &btag_simpleSecondaryVertexHighPurBJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_combinedSecondaryVertexBJetTags_", &btag_combinedSecondaryVertexBJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_combinedSecondaryVertexRetrainedBJetTags_", &btag_combinedSecondaryVertexRetrainedBJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_combinedSecondaryVertexMVABJetTags_", &btag_combinedSecondaryVertexMVABJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_softMuonBJetTags_", &btag_softMuonBJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_softMuonByPtBJetTags_", &btag_softMuonByPtBJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_softMuonByIP3dBJetTags_", &btag_softMuonByIP3dBJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_softElectronByPtBJetTags_", &btag_softElectronByPtBJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_softElectronByIP3dBJetTags_", &btag_softElectronByIP3dBJetTags_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mistag_SF_", (void*)&mistag_SF_);
      R__insp.InspectMember("map<std::string,float>", (void*)&mistag_SF_, "mistag_SF_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_SF_", (void*)&btag_SF_);
      R__insp.InspectMember("map<std::string,float>", (void*)&btag_SF_, "btag_SF_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mistag_SFerr_", (void*)&mistag_SFerr_);
      R__insp.InspectMember("map<std::string,float>", (void*)&mistag_SFerr_, "mistag_SFerr_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag_SFerr_", (void*)&btag_SFerr_);
      R__insp.InspectMember("map<std::string,float>", (void*)&btag_SFerr_, "btag_SFerr_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partonFlavour_", &partonFlavour_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isTopJet_", &isTopJet_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootJet(void *p) {
      return  p ? new(p) ::TopTree::TRootJet : new ::TopTree::TRootJet;
   }
   static void *newArray_TopTreecLcLTRootJet(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootJet[nElements] : new ::TopTree::TRootJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootJet(void *p) {
      delete ((::TopTree::TRootJet*)p);
   }
   static void deleteArray_TopTreecLcLTRootJet(void *p) {
      delete [] ((::TopTree::TRootJet*)p);
   }
   static void destruct_TopTreecLcLTRootJet(void *p) {
      typedef ::TopTree::TRootJet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootJet(TBuffer &buf, void *obj) {
      ((::TopTree::TRootJet*)obj)->::TopTree::TRootJet::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootJet

      namespace TopTree {
//______________________________________________________________________________
void TRootCaloJet::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootCaloJet.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootCaloJet thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootJet baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> etaetaMoment_;
      R__b >> phiphiMoment_;
      R__b >> ecalEnergyFraction_;
      R__b >> hcalEnergyFraction_;
      R__b >> maxEInEmTowers_;
      R__b >> maxEInHadTowers_;
      R__b >> towersArea_;
      R__b >> n90_;
      R__b >> n60_;
      R__b >> fHPD_;
      R__b >> fRBX_;
      R__b >> n90Hits_;
      R__b >> nHCALTowers_;
      R__b >> nECALTowers_;
      R__b >> chargedMultiplicity_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootJet baseClass0;
      baseClass0::Streamer(R__b);
      R__b << etaetaMoment_;
      R__b << phiphiMoment_;
      R__b << ecalEnergyFraction_;
      R__b << hcalEnergyFraction_;
      R__b << maxEInEmTowers_;
      R__b << maxEInHadTowers_;
      R__b << towersArea_;
      R__b << n90_;
      R__b << n60_;
      R__b << fHPD_;
      R__b << fRBX_;
      R__b << n90Hits_;
      R__b << nHCALTowers_;
      R__b << nECALTowers_;
      R__b << chargedMultiplicity_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootCaloJet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootCaloJet.
      TClass *R__cl = ::TopTree::TRootCaloJet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etaetaMoment_", &etaetaMoment_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiphiMoment_", &phiphiMoment_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalEnergyFraction_", &ecalEnergyFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalEnergyFraction_", &hcalEnergyFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxEInEmTowers_", &maxEInEmTowers_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxEInHadTowers_", &maxEInHadTowers_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "towersArea_", &towersArea_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n90_", &n90_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n60_", &n60_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHPD_", &fHPD_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRBX_", &fRBX_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n90Hits_", &n90Hits_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHCALTowers_", &nHCALTowers_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nECALTowers_", &nECALTowers_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedMultiplicity_", &chargedMultiplicity_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootJet baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootCaloJet(void *p) {
      return  p ? new(p) ::TopTree::TRootCaloJet : new ::TopTree::TRootCaloJet;
   }
   static void *newArray_TopTreecLcLTRootCaloJet(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootCaloJet[nElements] : new ::TopTree::TRootCaloJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootCaloJet(void *p) {
      delete ((::TopTree::TRootCaloJet*)p);
   }
   static void deleteArray_TopTreecLcLTRootCaloJet(void *p) {
      delete [] ((::TopTree::TRootCaloJet*)p);
   }
   static void destruct_TopTreecLcLTRootCaloJet(void *p) {
      typedef ::TopTree::TRootCaloJet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootCaloJet(TBuffer &buf, void *obj) {
      ((::TopTree::TRootCaloJet*)obj)->::TopTree::TRootCaloJet::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootCaloJet

      namespace TopTree {
//______________________________________________________________________________
void TRootPFJet::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootPFJet.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootPFJet thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootJet baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> chargedHadronEnergyFraction_;
      R__b >> neutralHadronEnergyFraction_;
      R__b >> chargedEmEnergyFraction_;
      R__b >> chargedMuEnergyFraction_;
      R__b >> neutralEmEnergyFraction_;
      R__b >> chargedMultiplicity_;
      R__b >> neutralMultiplicity_;
      R__b >> muonMultiplicity_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootJet baseClass0;
      baseClass0::Streamer(R__b);
      R__b << chargedHadronEnergyFraction_;
      R__b << neutralHadronEnergyFraction_;
      R__b << chargedEmEnergyFraction_;
      R__b << chargedMuEnergyFraction_;
      R__b << neutralEmEnergyFraction_;
      R__b << chargedMultiplicity_;
      R__b << neutralMultiplicity_;
      R__b << muonMultiplicity_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootPFJet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootPFJet.
      TClass *R__cl = ::TopTree::TRootPFJet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedHadronEnergyFraction_", &chargedHadronEnergyFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralHadronEnergyFraction_", &neutralHadronEnergyFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedEmEnergyFraction_", &chargedEmEnergyFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedMuEnergyFraction_", &chargedMuEnergyFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralEmEnergyFraction_", &neutralEmEnergyFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedMultiplicity_", &chargedMultiplicity_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralMultiplicity_", &neutralMultiplicity_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muonMultiplicity_", &muonMultiplicity_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootJet baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootPFJet(void *p) {
      return  p ? new(p) ::TopTree::TRootPFJet : new ::TopTree::TRootPFJet;
   }
   static void *newArray_TopTreecLcLTRootPFJet(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootPFJet[nElements] : new ::TopTree::TRootPFJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootPFJet(void *p) {
      delete ((::TopTree::TRootPFJet*)p);
   }
   static void deleteArray_TopTreecLcLTRootPFJet(void *p) {
      delete [] ((::TopTree::TRootPFJet*)p);
   }
   static void destruct_TopTreecLcLTRootPFJet(void *p) {
      typedef ::TopTree::TRootPFJet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootPFJet(TBuffer &buf, void *obj) {
      ((::TopTree::TRootPFJet*)obj)->::TopTree::TRootPFJet::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootPFJet

      namespace TopTree {
//______________________________________________________________________________
void TRootJPTJet::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootJPTJet.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootJPTJet thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootJet baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> etaetaMoment_;
      R__b >> phiphiMoment_;
      R__b >> ecalEnergyFraction_;
      R__b >> hcalEnergyFraction_;
      R__b >> maxEInEmTowers_;
      R__b >> maxEInHadTowers_;
      R__b >> towersArea_;
      R__b >> n90_;
      R__b >> n60_;
      R__b >> fHPD_;
      R__b >> fRBX_;
      R__b >> n90Hits_;
      R__b >> nHCALTowers_;
      R__b >> nECALTowers_;
      R__b >> chargedMultiplicity_;
      R__b >> chargedHadronEnergyFraction_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootJet baseClass0;
      baseClass0::Streamer(R__b);
      R__b << etaetaMoment_;
      R__b << phiphiMoment_;
      R__b << ecalEnergyFraction_;
      R__b << hcalEnergyFraction_;
      R__b << maxEInEmTowers_;
      R__b << maxEInHadTowers_;
      R__b << towersArea_;
      R__b << n90_;
      R__b << n60_;
      R__b << fHPD_;
      R__b << fRBX_;
      R__b << n90Hits_;
      R__b << nHCALTowers_;
      R__b << nECALTowers_;
      R__b << chargedMultiplicity_;
      R__b << chargedHadronEnergyFraction_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootJPTJet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootJPTJet.
      TClass *R__cl = ::TopTree::TRootJPTJet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etaetaMoment_", &etaetaMoment_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiphiMoment_", &phiphiMoment_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalEnergyFraction_", &ecalEnergyFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalEnergyFraction_", &hcalEnergyFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxEInEmTowers_", &maxEInEmTowers_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxEInHadTowers_", &maxEInHadTowers_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "towersArea_", &towersArea_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n90_", &n90_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n60_", &n60_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHPD_", &fHPD_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRBX_", &fRBX_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n90Hits_", &n90Hits_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHCALTowers_", &nHCALTowers_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nECALTowers_", &nECALTowers_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedMultiplicity_", &chargedMultiplicity_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedHadronEnergyFraction_", &chargedHadronEnergyFraction_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootJet baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootJPTJet(void *p) {
      return  p ? new(p) ::TopTree::TRootJPTJet : new ::TopTree::TRootJPTJet;
   }
   static void *newArray_TopTreecLcLTRootJPTJet(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootJPTJet[nElements] : new ::TopTree::TRootJPTJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootJPTJet(void *p) {
      delete ((::TopTree::TRootJPTJet*)p);
   }
   static void deleteArray_TopTreecLcLTRootJPTJet(void *p) {
      delete [] ((::TopTree::TRootJPTJet*)p);
   }
   static void destruct_TopTreecLcLTRootJPTJet(void *p) {
      typedef ::TopTree::TRootJPTJet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootJPTJet(TBuffer &buf, void *obj) {
      ((::TopTree::TRootJPTJet*)obj)->::TopTree::TRootJPTJet::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootJPTJet

      namespace TopTree {
//______________________________________________________________________________
void TRootGenJet::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootGenJet.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootGenJet thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> etaetaMoment_;
      R__b >> phiphiMoment_;
      R__b >> emEnergy_;
      R__b >> hadEnergy_;
      R__b >> invisibleEnergy_;
      R__b >> n90_;
      R__b >> n60_;
      R__b >> nConstituents_;
      R__b >> maxDistance_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b << etaetaMoment_;
      R__b << phiphiMoment_;
      R__b << emEnergy_;
      R__b << hadEnergy_;
      R__b << invisibleEnergy_;
      R__b << n90_;
      R__b << n60_;
      R__b << nConstituents_;
      R__b << maxDistance_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootGenJet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootGenJet.
      TClass *R__cl = ::TopTree::TRootGenJet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etaetaMoment_", &etaetaMoment_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiphiMoment_", &phiphiMoment_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emEnergy_", &emEnergy_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadEnergy_", &hadEnergy_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "invisibleEnergy_", &invisibleEnergy_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n90_", &n90_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n60_", &n60_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nConstituents_", &nConstituents_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxDistance_", &maxDistance_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootGenJet(void *p) {
      return  p ? new(p) ::TopTree::TRootGenJet : new ::TopTree::TRootGenJet;
   }
   static void *newArray_TopTreecLcLTRootGenJet(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootGenJet[nElements] : new ::TopTree::TRootGenJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootGenJet(void *p) {
      delete ((::TopTree::TRootGenJet*)p);
   }
   static void deleteArray_TopTreecLcLTRootGenJet(void *p) {
      delete [] ((::TopTree::TRootGenJet*)p);
   }
   static void destruct_TopTreecLcLTRootGenJet(void *p) {
      typedef ::TopTree::TRootGenJet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootGenJet(TBuffer &buf, void *obj) {
      ((::TopTree::TRootGenJet*)obj)->::TopTree::TRootGenJet::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootGenJet

      namespace TopTree {
//______________________________________________________________________________
void TRootMuon::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootMuon.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootMuon thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> isoR03_emEt_;
      R__b >> isoR03_hadEt_;
      R__b >> isoR03_sumPt_;
      R__b >> vetoEm_;
      R__b >> vetoHad_;
      R__b >> d0_;
      R__b >> d0error_;
      R__b >> dz_;
      R__b >> dzerror_;
      R__b >> chi2_;
      R__b >> nofValidHits_;
      R__b >> nofValidMuHits_;
      R__b >> nofValidPixelHits_;
      R__b >> nofMatchedStations_;
      R__b >> nofTrackerLayersWithMeasurement_;
      R__b >> algo_;
      R__b >> id_;
      R__b >> isPFMuon_;
      R__b >> chargedHadronIso_;
      R__b >> puChargedHadronIso_;
      R__b >> photonIso_;
      R__b >> neutralHadronIso_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b << isoR03_emEt_;
      R__b << isoR03_hadEt_;
      R__b << isoR03_sumPt_;
      R__b << vetoEm_;
      R__b << vetoHad_;
      R__b << d0_;
      R__b << d0error_;
      R__b << dz_;
      R__b << dzerror_;
      R__b << chi2_;
      R__b << nofValidHits_;
      R__b << nofValidMuHits_;
      R__b << nofValidPixelHits_;
      R__b << nofMatchedStations_;
      R__b << nofTrackerLayersWithMeasurement_;
      R__b << algo_;
      R__b << id_;
      R__b << isPFMuon_;
      R__b << chargedHadronIso_;
      R__b << puChargedHadronIso_;
      R__b << photonIso_;
      R__b << neutralHadronIso_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootMuon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootMuon.
      TClass *R__cl = ::TopTree::TRootMuon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoR03_emEt_", &isoR03_emEt_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoR03_hadEt_", &isoR03_hadEt_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoR03_sumPt_", &isoR03_sumPt_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vetoEm_", &vetoEm_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vetoHad_", &vetoHad_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d0_", &d0_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d0error_", &d0error_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dz_", &dz_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dzerror_", &dzerror_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2_", &chi2_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nofValidHits_", &nofValidHits_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nofValidMuHits_", &nofValidMuHits_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nofValidPixelHits_", &nofValidPixelHits_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nofMatchedStations_", &nofMatchedStations_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nofTrackerLayersWithMeasurement_", &nofTrackerLayersWithMeasurement_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "algo_", &algo_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_", &id_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isPFMuon_", &isPFMuon_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedHadronIso_", &chargedHadronIso_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "puChargedHadronIso_", &puChargedHadronIso_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photonIso_", &photonIso_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralHadronIso_", &neutralHadronIso_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootMuon(void *p) {
      return  p ? new(p) ::TopTree::TRootMuon : new ::TopTree::TRootMuon;
   }
   static void *newArray_TopTreecLcLTRootMuon(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootMuon[nElements] : new ::TopTree::TRootMuon[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootMuon(void *p) {
      delete ((::TopTree::TRootMuon*)p);
   }
   static void deleteArray_TopTreecLcLTRootMuon(void *p) {
      delete [] ((::TopTree::TRootMuon*)p);
   }
   static void destruct_TopTreecLcLTRootMuon(void *p) {
      typedef ::TopTree::TRootMuon current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootMuon(TBuffer &buf, void *obj) {
      ((::TopTree::TRootMuon*)obj)->::TopTree::TRootMuon::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootMuon

      namespace TopTree {
//______________________________________________________________________________
void TRootElectron::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootElectron.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootElectron thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> trackerDrivenSeed_;
      R__b >> ecalDrivenSeed_;
      ecalDrivenMomentum_.Streamer(R__b);
      R__b >> eSuperClusterOverPin_;
      R__b >> eEleClusterOverPout_;
      R__b >> eSeedClusterOverPout_;
      R__b >> deltaEtaIn_;
      R__b >> deltaEtaOut_;
      R__b >> deltaPhiIn_;
      R__b >> deltaPhiOut_;
      R__b >> deltaPhiSuperClusterTrackAtCalo_;
      R__b >> deltaEtaSuperClusterTrackAtCalo_;
      R__b >> ioEmIoP_;
      R__b >> ioEmIoPgsf_;
      R__b >> pixelLayersWithMeasurement_;
      R__b >> stripLayersWithMeasurement_;
      R__b >> nValidHits_;
      R__b >> ip3d_;
      R__b >> ip3dErr_;
      R__b >> d0_;
      R__b >> d0Error_;
      R__b >> dz_;
      R__b >> missingHits_;
      R__b >> normalizedChi2_;
      R__b >> normalizedChi2gsf_;
      R__b >> superClusterRawEnergy_;
      R__b >> superClusterEta_;
      R__b >> preshowerEnergy_;
      R__b >> sigmaIetaIeta_;
      R__b >> sigmaIphiIphi_;
      R__b >> sigmaIetaIphi_;
      R__b >> e1x5_;
      R__b >> e5x5_;
      R__b >> hcalDepth1OverEcal_;
      R__b >> hcalDepth2OverEcal_;
      R__b >> etaWidth_;
      R__b >> phiWidth_;
      R__b >> r9_;
      R__b >> tkSumPt03_;
      R__b >> ecalRecHitSumEt03_;
      R__b >> hcalDepth1TowerSumEt03_;
      R__b >> hcalDepth2TowerSumEt03_;
      R__b >> tkSumPt04_;
      R__b >> ecalRecHitSumEt04_;
      R__b >> hcalDepth1TowerSumEt04_;
      R__b >> hcalDepth2TowerSumEt04_;
      R__b >> chargedHadronIso_;
      R__b >> puChargedHadronIso_;
      R__b >> photonIso_;
      R__b >> neutralHadronIso_;
      R__b >> fBrem_;
      R__b >> nBrems_;
      R__b >> Dist_;
      R__b >> DCot_;
      R__b >> passConversion_;
      R__b >> mvaTrigId_;
      R__b >> mvaNonTrigId_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b << trackerDrivenSeed_;
      R__b << ecalDrivenSeed_;
      ecalDrivenMomentum_.Streamer(R__b);
      R__b << eSuperClusterOverPin_;
      R__b << eEleClusterOverPout_;
      R__b << eSeedClusterOverPout_;
      R__b << deltaEtaIn_;
      R__b << deltaEtaOut_;
      R__b << deltaPhiIn_;
      R__b << deltaPhiOut_;
      R__b << deltaPhiSuperClusterTrackAtCalo_;
      R__b << deltaEtaSuperClusterTrackAtCalo_;
      R__b << ioEmIoP_;
      R__b << ioEmIoPgsf_;
      R__b << pixelLayersWithMeasurement_;
      R__b << stripLayersWithMeasurement_;
      R__b << nValidHits_;
      R__b << ip3d_;
      R__b << ip3dErr_;
      R__b << d0_;
      R__b << d0Error_;
      R__b << dz_;
      R__b << missingHits_;
      R__b << normalizedChi2_;
      R__b << normalizedChi2gsf_;
      R__b << superClusterRawEnergy_;
      R__b << superClusterEta_;
      R__b << preshowerEnergy_;
      R__b << sigmaIetaIeta_;
      R__b << sigmaIphiIphi_;
      R__b << sigmaIetaIphi_;
      R__b << e1x5_;
      R__b << e5x5_;
      R__b << hcalDepth1OverEcal_;
      R__b << hcalDepth2OverEcal_;
      R__b << etaWidth_;
      R__b << phiWidth_;
      R__b << r9_;
      R__b << tkSumPt03_;
      R__b << ecalRecHitSumEt03_;
      R__b << hcalDepth1TowerSumEt03_;
      R__b << hcalDepth2TowerSumEt03_;
      R__b << tkSumPt04_;
      R__b << ecalRecHitSumEt04_;
      R__b << hcalDepth1TowerSumEt04_;
      R__b << hcalDepth2TowerSumEt04_;
      R__b << chargedHadronIso_;
      R__b << puChargedHadronIso_;
      R__b << photonIso_;
      R__b << neutralHadronIso_;
      R__b << fBrem_;
      R__b << nBrems_;
      R__b << Dist_;
      R__b << DCot_;
      R__b << passConversion_;
      R__b << mvaTrigId_;
      R__b << mvaNonTrigId_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootElectron::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootElectron.
      TClass *R__cl = ::TopTree::TRootElectron::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackerDrivenSeed_", &trackerDrivenSeed_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalDrivenSeed_", &ecalDrivenSeed_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalDrivenMomentum_", &ecalDrivenMomentum_);
      R__insp.InspectMember(ecalDrivenMomentum_, "ecalDrivenMomentum_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSuperClusterOverPin_", &eSuperClusterOverPin_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eEleClusterOverPout_", &eEleClusterOverPout_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eSeedClusterOverPout_", &eSeedClusterOverPout_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaEtaIn_", &deltaEtaIn_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaEtaOut_", &deltaEtaOut_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaPhiIn_", &deltaPhiIn_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaPhiOut_", &deltaPhiOut_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaPhiSuperClusterTrackAtCalo_", &deltaPhiSuperClusterTrackAtCalo_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaEtaSuperClusterTrackAtCalo_", &deltaEtaSuperClusterTrackAtCalo_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ioEmIoP_", &ioEmIoP_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ioEmIoPgsf_", &ioEmIoPgsf_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pixelLayersWithMeasurement_", &pixelLayersWithMeasurement_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stripLayersWithMeasurement_", &stripLayersWithMeasurement_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nValidHits_", &nValidHits_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ip3d_", &ip3d_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ip3dErr_", &ip3dErr_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d0_", &d0_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d0Error_", &d0Error_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dz_", &dz_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "missingHits_", &missingHits_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "normalizedChi2_", &normalizedChi2_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "normalizedChi2gsf_", &normalizedChi2gsf_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "superClusterRawEnergy_", &superClusterRawEnergy_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "superClusterEta_", &superClusterEta_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "preshowerEnergy_", &preshowerEnergy_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaIetaIeta_", &sigmaIetaIeta_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaIphiIphi_", &sigmaIphiIphi_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaIetaIphi_", &sigmaIetaIphi_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e1x5_", &e1x5_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e5x5_", &e5x5_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalDepth1OverEcal_", &hcalDepth1OverEcal_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalDepth2OverEcal_", &hcalDepth2OverEcal_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etaWidth_", &etaWidth_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiWidth_", &phiWidth_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r9_", &r9_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tkSumPt03_", &tkSumPt03_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalRecHitSumEt03_", &ecalRecHitSumEt03_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalDepth1TowerSumEt03_", &hcalDepth1TowerSumEt03_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalDepth2TowerSumEt03_", &hcalDepth2TowerSumEt03_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tkSumPt04_", &tkSumPt04_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalRecHitSumEt04_", &ecalRecHitSumEt04_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalDepth1TowerSumEt04_", &hcalDepth1TowerSumEt04_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalDepth2TowerSumEt04_", &hcalDepth2TowerSumEt04_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedHadronIso_", &chargedHadronIso_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "puChargedHadronIso_", &puChargedHadronIso_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photonIso_", &photonIso_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralHadronIso_", &neutralHadronIso_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBrem_", &fBrem_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBrems_", &nBrems_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Dist_", &Dist_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DCot_", &DCot_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "passConversion_", &passConversion_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvaTrigId_", &mvaTrigId_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvaNonTrigId_", &mvaNonTrigId_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootElectron(void *p) {
      return  p ? new(p) ::TopTree::TRootElectron : new ::TopTree::TRootElectron;
   }
   static void *newArray_TopTreecLcLTRootElectron(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootElectron[nElements] : new ::TopTree::TRootElectron[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootElectron(void *p) {
      delete ((::TopTree::TRootElectron*)p);
   }
   static void deleteArray_TopTreecLcLTRootElectron(void *p) {
      delete [] ((::TopTree::TRootElectron*)p);
   }
   static void destruct_TopTreecLcLTRootElectron(void *p) {
      typedef ::TopTree::TRootElectron current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootElectron(TBuffer &buf, void *obj) {
      ((::TopTree::TRootElectron*)obj)->::TopTree::TRootElectron::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootElectron

      namespace TopTree {
//______________________________________________________________________________
void TRootMET::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootMET.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootMET thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> METType_;
      R__b >> sumEt_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b << METType_;
      R__b << sumEt_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootMET::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootMET.
      TClass *R__cl = ::TopTree::TRootMET::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "METType_", &METType_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumEt_", &sumEt_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootParticle baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootMET(void *p) {
      return  p ? new(p) ::TopTree::TRootMET : new ::TopTree::TRootMET;
   }
   static void *newArray_TopTreecLcLTRootMET(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootMET[nElements] : new ::TopTree::TRootMET[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootMET(void *p) {
      delete ((::TopTree::TRootMET*)p);
   }
   static void deleteArray_TopTreecLcLTRootMET(void *p) {
      delete [] ((::TopTree::TRootMET*)p);
   }
   static void destruct_TopTreecLcLTRootMET(void *p) {
      typedef ::TopTree::TRootMET current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootMET(TBuffer &buf, void *obj) {
      ((::TopTree::TRootMET*)obj)->::TopTree::TRootMET::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootMET

      namespace TopTree {
//______________________________________________________________________________
void TRootCaloMET::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootCaloMET.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootCaloMET thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootMET baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> maxEtInEmTowers_;
      R__b >> maxEtInHadTowers_;
      R__b >> hadEtInHO_;
      R__b >> hadEtInHB_;
      R__b >> hadEtInHF_;
      R__b >> hadEtInHE_;
      R__b >> emEtInEB_;
      R__b >> emEtInEE_;
      R__b >> emEtInHF_;
      R__b >> etFractionHadronic_;
      R__b >> etFractionEm_;
      R__b >> metSignificance_;
      R__b >> caloMETInpHF_;
      R__b >> caloMETInmHF_;
      R__b >> caloSETInpHF_;
      R__b >> caloSETInmHF_;
      R__b >> caloMETPhiInpHF_;
      R__b >> caloMETPhiInmHF_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootMET baseClass0;
      baseClass0::Streamer(R__b);
      R__b << maxEtInEmTowers_;
      R__b << maxEtInHadTowers_;
      R__b << hadEtInHO_;
      R__b << hadEtInHB_;
      R__b << hadEtInHF_;
      R__b << hadEtInHE_;
      R__b << emEtInEB_;
      R__b << emEtInEE_;
      R__b << emEtInHF_;
      R__b << etFractionHadronic_;
      R__b << etFractionEm_;
      R__b << metSignificance_;
      R__b << caloMETInpHF_;
      R__b << caloMETInmHF_;
      R__b << caloSETInpHF_;
      R__b << caloSETInmHF_;
      R__b << caloMETPhiInpHF_;
      R__b << caloMETPhiInmHF_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootCaloMET::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootCaloMET.
      TClass *R__cl = ::TopTree::TRootCaloMET::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxEtInEmTowers_", &maxEtInEmTowers_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxEtInHadTowers_", &maxEtInHadTowers_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadEtInHO_", &hadEtInHO_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadEtInHB_", &hadEtInHB_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadEtInHF_", &hadEtInHF_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadEtInHE_", &hadEtInHE_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emEtInEB_", &emEtInEB_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emEtInEE_", &emEtInEE_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emEtInHF_", &emEtInHF_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etFractionHadronic_", &etFractionHadronic_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etFractionEm_", &etFractionEm_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "metSignificance_", &metSignificance_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloMETInpHF_", &caloMETInpHF_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloMETInmHF_", &caloMETInmHF_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloSETInpHF_", &caloSETInpHF_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloSETInmHF_", &caloSETInmHF_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloMETPhiInpHF_", &caloMETPhiInpHF_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloMETPhiInmHF_", &caloMETPhiInmHF_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootMET baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootCaloMET(void *p) {
      return  p ? new(p) ::TopTree::TRootCaloMET : new ::TopTree::TRootCaloMET;
   }
   static void *newArray_TopTreecLcLTRootCaloMET(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootCaloMET[nElements] : new ::TopTree::TRootCaloMET[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootCaloMET(void *p) {
      delete ((::TopTree::TRootCaloMET*)p);
   }
   static void deleteArray_TopTreecLcLTRootCaloMET(void *p) {
      delete [] ((::TopTree::TRootCaloMET*)p);
   }
   static void destruct_TopTreecLcLTRootCaloMET(void *p) {
      typedef ::TopTree::TRootCaloMET current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootCaloMET(TBuffer &buf, void *obj) {
      ((::TopTree::TRootCaloMET*)obj)->::TopTree::TRootCaloMET::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootCaloMET

      namespace TopTree {
//______________________________________________________________________________
void TRootPFMET::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootPFMET.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootPFMET thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootMET baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> NeutralEMFraction_;
      R__b >> NeutralHadEtFraction_;
      R__b >> ChargedEMEtFraction_;
      R__b >> ChargedHadEtFraction_;
      R__b >> MuonEtFraction_;
      R__b >> Type6EtFraction_;
      R__b >> Type7EtFraction_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootMET baseClass0;
      baseClass0::Streamer(R__b);
      R__b << NeutralEMFraction_;
      R__b << NeutralHadEtFraction_;
      R__b << ChargedEMEtFraction_;
      R__b << ChargedHadEtFraction_;
      R__b << MuonEtFraction_;
      R__b << Type6EtFraction_;
      R__b << Type7EtFraction_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootPFMET::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootPFMET.
      TClass *R__cl = ::TopTree::TRootPFMET::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NeutralEMFraction_", &NeutralEMFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NeutralHadEtFraction_", &NeutralHadEtFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChargedEMEtFraction_", &ChargedEMEtFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChargedHadEtFraction_", &ChargedHadEtFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonEtFraction_", &MuonEtFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Type6EtFraction_", &Type6EtFraction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Type7EtFraction_", &Type7EtFraction_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootMET baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootPFMET(void *p) {
      return  p ? new(p) ::TopTree::TRootPFMET : new ::TopTree::TRootPFMET;
   }
   static void *newArray_TopTreecLcLTRootPFMET(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootPFMET[nElements] : new ::TopTree::TRootPFMET[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootPFMET(void *p) {
      delete ((::TopTree::TRootPFMET*)p);
   }
   static void deleteArray_TopTreecLcLTRootPFMET(void *p) {
      delete [] ((::TopTree::TRootPFMET*)p);
   }
   static void destruct_TopTreecLcLTRootPFMET(void *p) {
      typedef ::TopTree::TRootPFMET current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootPFMET(TBuffer &buf, void *obj) {
      ((::TopTree::TRootPFMET*)obj)->::TopTree::TRootPFMET::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootPFMET

      namespace TopTree {
//______________________________________________________________________________
void TRootTrackMET::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootTrackMET.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootTrackMET thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootMET baseClass0;
      baseClass0::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootMET baseClass0;
      baseClass0::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootTrackMET::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootTrackMET.
      TClass *R__cl = ::TopTree::TRootTrackMET::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootMET baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootTrackMET(void *p) {
      return  p ? new(p) ::TopTree::TRootTrackMET : new ::TopTree::TRootTrackMET;
   }
   static void *newArray_TopTreecLcLTRootTrackMET(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootTrackMET[nElements] : new ::TopTree::TRootTrackMET[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootTrackMET(void *p) {
      delete ((::TopTree::TRootTrackMET*)p);
   }
   static void deleteArray_TopTreecLcLTRootTrackMET(void *p) {
      delete [] ((::TopTree::TRootTrackMET*)p);
   }
   static void destruct_TopTreecLcLTRootTrackMET(void *p) {
      typedef ::TopTree::TRootTrackMET current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootTrackMET(TBuffer &buf, void *obj) {
      ((::TopTree::TRootTrackMET*)obj)->::TopTree::TRootTrackMET::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootTrackMET

      namespace TopTree {
//______________________________________________________________________________
void TRootGenEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootGenEvent.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootGenEvent thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      void *ptr_semiLeptonicChannel_ = (void*)&semiLeptonicChannel_;
      R__b >> *reinterpret_cast<Int_t*>(ptr_semiLeptonicChannel_);
      R__b >> isTtBar_;
      R__b >> isFullHadronic_;
      R__b >> isSemiLeptonic_;
      R__b >> isFullLeptonic_;
      lepton_.Streamer(R__b);
      neutrino_.Streamer(R__b);
      leptonicDecayW_.Streamer(R__b);
      leptonicDecayB_.Streamer(R__b);
      leptonicDecayTop_.Streamer(R__b);
      hadronicDecayW_.Streamer(R__b);
      hadronicDecayB_.Streamer(R__b);
      hadronicDecayTop_.Streamer(R__b);
      hadronicDecayQuark_.Streamer(R__b);
      hadronicDecayQuarkBar_.Streamer(R__b);
      {
         vector<TLorentzVector> &R__stl =  ISR_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TLorentzVector R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TLorentzVector> &R__stl =  leptonicDecayTopRadiation_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TLorentzVector R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TLorentzVector> &R__stl =  hadronicDecayTopRadiation_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TLorentzVector R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (Int_t)semiLeptonicChannel_;
      R__b << isTtBar_;
      R__b << isFullHadronic_;
      R__b << isSemiLeptonic_;
      R__b << isFullLeptonic_;
      lepton_.Streamer(R__b);
      neutrino_.Streamer(R__b);
      leptonicDecayW_.Streamer(R__b);
      leptonicDecayB_.Streamer(R__b);
      leptonicDecayTop_.Streamer(R__b);
      hadronicDecayW_.Streamer(R__b);
      hadronicDecayB_.Streamer(R__b);
      hadronicDecayTop_.Streamer(R__b);
      hadronicDecayQuark_.Streamer(R__b);
      hadronicDecayQuarkBar_.Streamer(R__b);
      {
         vector<TLorentzVector> &R__stl =  ISR_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TLorentzVector>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TLorentzVector&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TLorentzVector> &R__stl =  leptonicDecayTopRadiation_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TLorentzVector>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TLorentzVector&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TLorentzVector> &R__stl =  hadronicDecayTopRadiation_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TLorentzVector>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TLorentzVector&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootGenEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootGenEvent.
      TClass *R__cl = ::TopTree::TRootGenEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "semiLeptonicChannel_", &semiLeptonicChannel_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isTtBar_", &isTtBar_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFullHadronic_", &isFullHadronic_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isSemiLeptonic_", &isSemiLeptonic_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFullLeptonic_", &isFullLeptonic_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lepton_", &lepton_);
      R__insp.InspectMember(lepton_, "lepton_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutrino_", &neutrino_);
      R__insp.InspectMember(neutrino_, "neutrino_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leptonicDecayW_", &leptonicDecayW_);
      R__insp.InspectMember(leptonicDecayW_, "leptonicDecayW_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leptonicDecayB_", &leptonicDecayB_);
      R__insp.InspectMember(leptonicDecayB_, "leptonicDecayB_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leptonicDecayTop_", &leptonicDecayTop_);
      R__insp.InspectMember(leptonicDecayTop_, "leptonicDecayTop_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadronicDecayW_", &hadronicDecayW_);
      R__insp.InspectMember(hadronicDecayW_, "hadronicDecayW_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadronicDecayB_", &hadronicDecayB_);
      R__insp.InspectMember(hadronicDecayB_, "hadronicDecayB_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadronicDecayTop_", &hadronicDecayTop_);
      R__insp.InspectMember(hadronicDecayTop_, "hadronicDecayTop_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadronicDecayQuark_", &hadronicDecayQuark_);
      R__insp.InspectMember(hadronicDecayQuark_, "hadronicDecayQuark_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadronicDecayQuarkBar_", &hadronicDecayQuarkBar_);
      R__insp.InspectMember(hadronicDecayQuarkBar_, "hadronicDecayQuarkBar_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ISR_", (void*)&ISR_);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&ISR_, "ISR_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leptonicDecayTopRadiation_", (void*)&leptonicDecayTopRadiation_);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&leptonicDecayTopRadiation_, "leptonicDecayTopRadiation_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadronicDecayTopRadiation_", (void*)&hadronicDecayTopRadiation_);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&hadronicDecayTopRadiation_, "hadronicDecayTopRadiation_.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootGenEvent(void *p) {
      return  p ? new(p) ::TopTree::TRootGenEvent : new ::TopTree::TRootGenEvent;
   }
   static void *newArray_TopTreecLcLTRootGenEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootGenEvent[nElements] : new ::TopTree::TRootGenEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootGenEvent(void *p) {
      delete ((::TopTree::TRootGenEvent*)p);
   }
   static void deleteArray_TopTreecLcLTRootGenEvent(void *p) {
      delete [] ((::TopTree::TRootGenEvent*)p);
   }
   static void destruct_TopTreecLcLTRootGenEvent(void *p) {
      typedef ::TopTree::TRootGenEvent current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootGenEvent(TBuffer &buf, void *obj) {
      ((::TopTree::TRootGenEvent*)obj)->::TopTree::TRootGenEvent::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootGenEvent

      namespace TopTree {
//______________________________________________________________________________
void TRootNPGenEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootNPGenEvent.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootNPGenEvent thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> isNewPhysics_;
      {
         vector<TopTree::TRootGenTop,allocator<TopTree::TRootGenTop> > &R__stl =  tops_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TopTree::TRootGenTop R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  leptons_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TopTree::TRootMCParticle R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  quarks_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TopTree::TRootMCParticle R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  bquarks_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TopTree::TRootMCParticle R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  invisibleParticles_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TopTree::TRootMCParticle R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  neutrinos_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TopTree::TRootMCParticle R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  gluinos_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TopTree::TRootMCParticle R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  stops_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TopTree::TRootMCParticle R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << isNewPhysics_;
      {
         vector<TopTree::TRootGenTop,allocator<TopTree::TRootGenTop> > &R__stl =  tops_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TopTree::TRootGenTop,allocator<TopTree::TRootGenTop> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TopTree::TRootGenTop&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  leptons_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TopTree::TRootMCParticle&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  quarks_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TopTree::TRootMCParticle&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  bquarks_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TopTree::TRootMCParticle&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  invisibleParticles_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TopTree::TRootMCParticle&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  neutrinos_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TopTree::TRootMCParticle&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  gluinos_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TopTree::TRootMCParticle&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > &R__stl =  stops_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TopTree::TRootMCParticle&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootNPGenEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootNPGenEvent.
      TClass *R__cl = ::TopTree::TRootNPGenEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isNewPhysics_", &isNewPhysics_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tops_", (void*)&tops_);
      R__insp.InspectMember("vector<TopTree::TRootGenTop,allocator<TopTree::TRootGenTop> >", (void*)&tops_, "tops_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leptons_", (void*)&leptons_);
      R__insp.InspectMember("vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >", (void*)&leptons_, "leptons_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "quarks_", (void*)&quarks_);
      R__insp.InspectMember("vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >", (void*)&quarks_, "quarks_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bquarks_", (void*)&bquarks_);
      R__insp.InspectMember("vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >", (void*)&bquarks_, "bquarks_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "invisibleParticles_", (void*)&invisibleParticles_);
      R__insp.InspectMember("vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >", (void*)&invisibleParticles_, "invisibleParticles_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutrinos_", (void*)&neutrinos_);
      R__insp.InspectMember("vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >", (void*)&neutrinos_, "neutrinos_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gluinos_", (void*)&gluinos_);
      R__insp.InspectMember("vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >", (void*)&gluinos_, "gluinos_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stops_", (void*)&stops_);
      R__insp.InspectMember("vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >", (void*)&stops_, "stops_.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootNPGenEvent(void *p) {
      return  p ? new(p) ::TopTree::TRootNPGenEvent : new ::TopTree::TRootNPGenEvent;
   }
   static void *newArray_TopTreecLcLTRootNPGenEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootNPGenEvent[nElements] : new ::TopTree::TRootNPGenEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootNPGenEvent(void *p) {
      delete ((::TopTree::TRootNPGenEvent*)p);
   }
   static void deleteArray_TopTreecLcLTRootNPGenEvent(void *p) {
      delete [] ((::TopTree::TRootNPGenEvent*)p);
   }
   static void destruct_TopTreecLcLTRootNPGenEvent(void *p) {
      typedef ::TopTree::TRootNPGenEvent current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootNPGenEvent(TBuffer &buf, void *obj) {
      ((::TopTree::TRootNPGenEvent*)obj)->::TopTree::TRootNPGenEvent::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootNPGenEvent

      namespace TopTree {
//______________________________________________________________________________
void TRootGenTop::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootGenTop.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootGenTop thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootMCParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> isHadronic_;
      R__b >> isLeptonic_;
      W_.Streamer(R__b);
      bquark_.Streamer(R__b);
      quark_.Streamer(R__b);
      quarkBar_.Streamer(R__b);
      lepton_.Streamer(R__b);
      neutrino_.Streamer(R__b);
      { TString R__str; R__str.Streamer(R__b); production_ = R__str.Data(); }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootMCParticle baseClass0;
      baseClass0::Streamer(R__b);
      R__b << isHadronic_;
      R__b << isLeptonic_;
      W_.Streamer(R__b);
      bquark_.Streamer(R__b);
      quark_.Streamer(R__b);
      quarkBar_.Streamer(R__b);
      lepton_.Streamer(R__b);
      neutrino_.Streamer(R__b);
      { TString R__str = production_.c_str(); R__str.Streamer(R__b);}
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootGenTop::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootGenTop.
      TClass *R__cl = ::TopTree::TRootGenTop::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isHadronic_", &isHadronic_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isLeptonic_", &isLeptonic_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "W_", &W_);
      R__insp.InspectMember(W_, "W_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bquark_", &bquark_);
      R__insp.InspectMember(bquark_, "bquark_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "quark_", &quark_);
      R__insp.InspectMember(quark_, "quark_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "quarkBar_", &quarkBar_);
      R__insp.InspectMember(quarkBar_, "quarkBar_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lepton_", &lepton_);
      R__insp.InspectMember(lepton_, "lepton_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutrino_", &neutrino_);
      R__insp.InspectMember(neutrino_, "neutrino_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "production_", (void*)&production_);
      R__insp.InspectMember("string", (void*)&production_, "production_.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TopTree::TRootMCParticle baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootGenTop(void *p) {
      return  p ? new(p) ::TopTree::TRootGenTop : new ::TopTree::TRootGenTop;
   }
   static void *newArray_TopTreecLcLTRootGenTop(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootGenTop[nElements] : new ::TopTree::TRootGenTop[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootGenTop(void *p) {
      delete ((::TopTree::TRootGenTop*)p);
   }
   static void deleteArray_TopTreecLcLTRootGenTop(void *p) {
      delete [] ((::TopTree::TRootGenTop*)p);
   }
   static void destruct_TopTreecLcLTRootGenTop(void *p) {
      typedef ::TopTree::TRootGenTop current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootGenTop(TBuffer &buf, void *obj) {
      ((::TopTree::TRootGenTop*)obj)->::TopTree::TRootGenTop::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootGenTop

      namespace TopTree {
//______________________________________________________________________________
void TRootSpinCorrGen::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootSpinCorrGen.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootSpinCorrGen thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> cosThetaTLHel_;
      R__b >> cosThetaTBHel_;
      R__b >> cosThetaTQHel_;
      R__b >> cosPhi_;
      R__b >> topsZMFMass_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << cosThetaTLHel_;
      R__b << cosThetaTBHel_;
      R__b << cosThetaTQHel_;
      R__b << cosPhi_;
      R__b << topsZMFMass_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootSpinCorrGen::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootSpinCorrGen.
      TClass *R__cl = ::TopTree::TRootSpinCorrGen::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cosThetaTLHel_", &cosThetaTLHel_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cosThetaTBHel_", &cosThetaTBHel_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cosThetaTQHel_", &cosThetaTQHel_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cosPhi_", &cosPhi_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "topsZMFMass_", &topsZMFMass_);
      TObject::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootSpinCorrGen(void *p) {
      return  p ? new(p) ::TopTree::TRootSpinCorrGen : new ::TopTree::TRootSpinCorrGen;
   }
   static void *newArray_TopTreecLcLTRootSpinCorrGen(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootSpinCorrGen[nElements] : new ::TopTree::TRootSpinCorrGen[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootSpinCorrGen(void *p) {
      delete ((::TopTree::TRootSpinCorrGen*)p);
   }
   static void deleteArray_TopTreecLcLTRootSpinCorrGen(void *p) {
      delete [] ((::TopTree::TRootSpinCorrGen*)p);
   }
   static void destruct_TopTreecLcLTRootSpinCorrGen(void *p) {
      typedef ::TopTree::TRootSpinCorrGen current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootSpinCorrGen(TBuffer &buf, void *obj) {
      ((::TopTree::TRootSpinCorrGen*)obj)->::TopTree::TRootSpinCorrGen::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootSpinCorrGen

      namespace TopTree {
//______________________________________________________________________________
void TRootVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::TRootVertex.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::TRootVertex thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TVector3::Streamer(R__b);
      R__b >> isValid_;
      R__b >> isFake_;
      R__b >> chi2_;
      R__b >> ndof_;
      R__b >> tracksSize_;
      R__b >> xError_;
      R__b >> yError_;
      R__b >> zError_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TVector3::Streamer(R__b);
      R__b << isValid_;
      R__b << isFake_;
      R__b << chi2_;
      R__b << ndof_;
      R__b << tracksSize_;
      R__b << xError_;
      R__b << yError_;
      R__b << zError_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void TRootVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::TRootVertex.
      TClass *R__cl = ::TopTree::TRootVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isValid_", &isValid_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFake_", &isFake_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2_", &chi2_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndof_", &ndof_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tracksSize_", &tracksSize_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xError_", &xError_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yError_", &yError_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zError_", &zError_);
      TVector3::ShowMembers(R__insp);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLTRootVertex(void *p) {
      return  p ? new(p) ::TopTree::TRootVertex : new ::TopTree::TRootVertex;
   }
   static void *newArray_TopTreecLcLTRootVertex(Long_t nElements, void *p) {
      return p ? new(p) ::TopTree::TRootVertex[nElements] : new ::TopTree::TRootVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLTRootVertex(void *p) {
      delete ((::TopTree::TRootVertex*)p);
   }
   static void deleteArray_TopTreecLcLTRootVertex(void *p) {
      delete [] ((::TopTree::TRootVertex*)p);
   }
   static void destruct_TopTreecLcLTRootVertex(void *p) {
      typedef ::TopTree::TRootVertex current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLTRootVertex(TBuffer &buf, void *obj) {
      ((::TopTree::TRootVertex*)obj)->::TopTree::TRootVertex::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::TRootVertex

//______________________________________________________________________________
void LightMonster::Streamer(TBuffer &R__b)
{
   // Stream an object of class LightMonster.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> eventID_;
      R__b >> runID_;
      R__b >> lumiBlockID_;
      R__b >> idParton1_;
      R__b >> xParton1_;
      R__b >> idParton2_;
      R__b >> xParton2_;
      R__b >> factorizationScale_;
      R__b >> nPV_;
      R__b >> nPUBXm1_;
      R__b >> nPU_;
      R__b >> nPUBXp1_;
      R__b >> nTruePU_;
      R__b >> topMass_;
      R__b >> antiTopMass_;
      R__b >> selectedSemiMu_;
      R__b >> semiMuDecay_;
      R__b >> semiElDecay_;
      R__b >> topDecayedLept_;
      R__b >> all4JetsMCMatched_;
      R__b >> allHadronicJetsMCMatched_;
      R__b.ReadStaticArray((float*)mvaVals_);
      R__b.ReadStaticArray((unsigned int*)mvaResults_);
      R__b >> eventWeight_;
      R__b.ReadStaticArray((float*)mTopFit_);
      R__b.ReadStaticArray((float*)sigmaMTopFit_);
      R__b.ReadStaticArray((float*)chi2MTopFit_);
      R__b >> hadrBJet_;
      R__b >> hadrLJet1_;
      R__b >> hadrLJet2_;
      R__b >> leptBJet_;
      MET_.Streamer(R__b);
      {
         vector<TLorentzVector> &R__stl =  selectedJets_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TLorentzVector R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  bTagCSV_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      lepton_.Streamer(R__b);
      R__b >> leptonCharge_;
      R__b >> leptonPFRelIso_;
      hadrBQuark_.Streamer(R__b);
      hadrLQuark1_.Streamer(R__b);
      hadrLQuark2_.Streamer(R__b);
      leptBQuark_.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, LightMonster::IsA());
   } else {
      R__c = R__b.WriteVersion(LightMonster::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << eventID_;
      R__b << runID_;
      R__b << lumiBlockID_;
      R__b << idParton1_;
      R__b << xParton1_;
      R__b << idParton2_;
      R__b << xParton2_;
      R__b << factorizationScale_;
      R__b << nPV_;
      R__b << nPUBXm1_;
      R__b << nPU_;
      R__b << nPUBXp1_;
      R__b << nTruePU_;
      R__b << topMass_;
      R__b << antiTopMass_;
      R__b << selectedSemiMu_;
      R__b << semiMuDecay_;
      R__b << semiElDecay_;
      R__b << topDecayedLept_;
      R__b << all4JetsMCMatched_;
      R__b << allHadronicJetsMCMatched_;
      R__b.WriteArray(mvaVals_, 12);
      R__b.WriteArray((unsigned int*)mvaResults_, 48);
      R__b << eventWeight_;
      R__b.WriteArray(mTopFit_, 12);
      R__b.WriteArray(sigmaMTopFit_, 12);
      R__b.WriteArray(chi2MTopFit_, 12);
      R__b << hadrBJet_;
      R__b << hadrLJet1_;
      R__b << hadrLJet2_;
      R__b << leptBJet_;
      MET_.Streamer(R__b);
      {
         vector<TLorentzVector> &R__stl =  selectedJets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TLorentzVector>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TLorentzVector&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<float> &R__stl =  bTagCSV_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      lepton_.Streamer(R__b);
      R__b << leptonCharge_;
      R__b << leptonPFRelIso_;
      hadrBQuark_.Streamer(R__b);
      hadrLQuark1_.Streamer(R__b);
      hadrLQuark2_.Streamer(R__b);
      leptBQuark_.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void LightMonster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LightMonster.
      TClass *R__cl = ::LightMonster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventID_", &eventID_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runID_", &runID_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lumiBlockID_", &lumiBlockID_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idParton1_", &idParton1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xParton1_", &xParton1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idParton2_", &idParton2_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xParton2_", &xParton2_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "factorizationScale_", &factorizationScale_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPV_", &nPV_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPUBXm1_", &nPUBXm1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPU_", &nPU_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPUBXp1_", &nPUBXp1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTruePU_", &nTruePU_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "topMass_", &topMass_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "antiTopMass_", &antiTopMass_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selectedSemiMu_", &selectedSemiMu_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "semiMuDecay_", &semiMuDecay_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "semiElDecay_", &semiElDecay_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "topDecayedLept_", &topDecayedLept_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "all4JetsMCMatched_", &all4JetsMCMatched_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "allHadronicJetsMCMatched_", &allHadronicJetsMCMatched_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvaVals_[12]", mvaVals_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvaResults_[12][4]", mvaResults_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventWeight_", &eventWeight_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTopFit_[12]", mTopFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaMTopFit_[12]", sigmaMTopFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2MTopFit_[12]", chi2MTopFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadrBJet_", &hadrBJet_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadrLJet1_", &hadrLJet1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadrLJet2_", &hadrLJet2_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leptBJet_", &leptBJet_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MET_", &MET_);
      R__insp.InspectMember(MET_, "MET_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selectedJets_", (void*)&selectedJets_);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&selectedJets_, "selectedJets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bTagCSV_", (void*)&bTagCSV_);
      R__insp.InspectMember("vector<float>", (void*)&bTagCSV_, "bTagCSV_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lepton_", &lepton_);
      R__insp.InspectMember(lepton_, "lepton_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leptonCharge_", &leptonCharge_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leptonPFRelIso_", &leptonPFRelIso_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadrBQuark_", &hadrBQuark_);
      R__insp.InspectMember(hadrBQuark_, "hadrBQuark_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadrLQuark1_", &hadrLQuark1_);
      R__insp.InspectMember(hadrLQuark1_, "hadrLQuark1_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadrLQuark2_", &hadrLQuark2_);
      R__insp.InspectMember(hadrLQuark2_, "hadrLQuark2_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leptBQuark_", &leptBQuark_);
      R__insp.InspectMember(leptBQuark_, "leptBQuark_.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_LightMonster(void *p) {
      return  p ? new(p) ::LightMonster : new ::LightMonster;
   }
   static void *newArray_LightMonster(Long_t nElements, void *p) {
      return p ? new(p) ::LightMonster[nElements] : new ::LightMonster[nElements];
   }
   // Wrapper around operator delete
   static void delete_LightMonster(void *p) {
      delete ((::LightMonster*)p);
   }
   static void deleteArray_LightMonster(void *p) {
      delete [] ((::LightMonster*)p);
   }
   static void destruct_LightMonster(void *p) {
      typedef ::LightMonster current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_LightMonster(TBuffer &buf, void *obj) {
      ((::LightMonster*)obj)->::LightMonster::Streamer(buf);
   }
} // end of namespace ROOT for class ::LightMonster

//______________________________________________________________________________
void WTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class WTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> eventID_;
      R__b >> runID_;
      R__b >> lumiBlockID_;
      R__b >> nPV_;
      R__b >> nPUBXm1_;
      R__b >> nPU_;
      R__b >> nPUBXp1_;
      R__b >> eventWeight_;
      R__b.ReadStaticArray((float*)chi2KinFit_);
      int R__i;
      for (R__i = 0; R__i < 12; R__i++)
         fittedLepton_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedNeutrino_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLeptB_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedHadrB_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLight1_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLight2_[R__i].Streamer(R__b);
      R__b.ReadStaticArray((float*)chi2FullKinFit_);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLepton_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullNeutrino_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLeptB_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullHadrB_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLight1_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLight2_[R__i].Streamer(R__b);
      R__b.ReadStaticArray((float*)chi2KinFitMassFit_);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLeptonMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedNeutrinoMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLeptBMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedHadrBMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLight1MassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLight2MassFit_[R__i].Streamer(R__b);
      R__b.ReadStaticArray((float*)chi2FullKinFitMassFit_);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLeptonMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullNeutrinoMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLeptBMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullHadrBMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLight1MassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLight2MassFit_[R__i].Streamer(R__b);
      R__b >> hadrBJet_;
      R__b >> hadrLJet1_;
      R__b >> hadrLJet2_;
      R__b >> leptBJet_;
      MET_.Streamer(R__b);
      {
         vector<TLorentzVector> &R__stl =  selectedJets_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TLorentzVector R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  bTagTCHE_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  bTagTCHP_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  bTagSSVHE_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  bTagSSVHP_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  bTagCSV_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      muon_.Streamer(R__b);
      hadrBQuark_.Streamer(R__b);
      hadrLQuark1_.Streamer(R__b);
      hadrLQuark2_.Streamer(R__b);
      leptBQuark_.Streamer(R__b);
      R__b >> standardCosTheta_;
      standardNeutrino_.Streamer(R__b);
      standardLepton_.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, WTree::IsA());
   } else {
      R__c = R__b.WriteVersion(WTree::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << eventID_;
      R__b << runID_;
      R__b << lumiBlockID_;
      R__b << nPV_;
      R__b << nPUBXm1_;
      R__b << nPU_;
      R__b << nPUBXp1_;
      R__b << eventWeight_;
      R__b.WriteArray(chi2KinFit_, 12);
      int R__i;
      for (R__i = 0; R__i < 12; R__i++)
         fittedLepton_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedNeutrino_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLeptB_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedHadrB_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLight1_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLight2_[R__i].Streamer(R__b);
      R__b.WriteArray(chi2FullKinFit_, 12);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLepton_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullNeutrino_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLeptB_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullHadrB_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLight1_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLight2_[R__i].Streamer(R__b);
      R__b.WriteArray(chi2KinFitMassFit_, 12);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLeptonMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedNeutrinoMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLeptBMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedHadrBMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLight1MassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedLight2MassFit_[R__i].Streamer(R__b);
      R__b.WriteArray(chi2FullKinFitMassFit_, 12);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLeptonMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullNeutrinoMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLeptBMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullHadrBMassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLight1MassFit_[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 12; R__i++)
         fittedFullLight2MassFit_[R__i].Streamer(R__b);
      R__b << hadrBJet_;
      R__b << hadrLJet1_;
      R__b << hadrLJet2_;
      R__b << leptBJet_;
      MET_.Streamer(R__b);
      {
         vector<TLorentzVector> &R__stl =  selectedJets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TLorentzVector>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TLorentzVector&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<float> &R__stl =  bTagTCHE_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<float> &R__stl =  bTagTCHP_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<float> &R__stl =  bTagSSVHE_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<float> &R__stl =  bTagSSVHP_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<float> &R__stl =  bTagCSV_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      muon_.Streamer(R__b);
      hadrBQuark_.Streamer(R__b);
      hadrLQuark1_.Streamer(R__b);
      hadrLQuark2_.Streamer(R__b);
      leptBQuark_.Streamer(R__b);
      R__b << standardCosTheta_;
      standardNeutrino_.Streamer(R__b);
      standardLepton_.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void WTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WTree.
      TClass *R__cl = ::WTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventID_", &eventID_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runID_", &runID_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lumiBlockID_", &lumiBlockID_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPV_", &nPV_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPUBXm1_", &nPUBXm1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPU_", &nPU_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPUBXp1_", &nPUBXp1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventWeight_", &eventWeight_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2KinFit_[12]", chi2KinFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedLepton_[12]", fittedLepton_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedNeutrino_[12]", fittedNeutrino_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedLeptB_[12]", fittedLeptB_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedHadrB_[12]", fittedHadrB_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedLight1_[12]", fittedLight1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedLight2_[12]", fittedLight2_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2FullKinFit_[12]", chi2FullKinFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedFullLepton_[12]", fittedFullLepton_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedFullNeutrino_[12]", fittedFullNeutrino_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedFullLeptB_[12]", fittedFullLeptB_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedFullHadrB_[12]", fittedFullHadrB_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedFullLight1_[12]", fittedFullLight1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedFullLight2_[12]", fittedFullLight2_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2KinFitMassFit_[12]", chi2KinFitMassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedLeptonMassFit_[12]", fittedLeptonMassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedNeutrinoMassFit_[12]", fittedNeutrinoMassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedLeptBMassFit_[12]", fittedLeptBMassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedHadrBMassFit_[12]", fittedHadrBMassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedLight1MassFit_[12]", fittedLight1MassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedLight2MassFit_[12]", fittedLight2MassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2FullKinFitMassFit_[12]", chi2FullKinFitMassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedFullLeptonMassFit_[12]", fittedFullLeptonMassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedFullNeutrinoMassFit_[12]", fittedFullNeutrinoMassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedFullLeptBMassFit_[12]", fittedFullLeptBMassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedFullHadrBMassFit_[12]", fittedFullHadrBMassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedFullLight1MassFit_[12]", fittedFullLight1MassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedFullLight2MassFit_[12]", fittedFullLight2MassFit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadrBJet_", &hadrBJet_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadrLJet1_", &hadrLJet1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadrLJet2_", &hadrLJet2_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leptBJet_", &leptBJet_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MET_", &MET_);
      R__insp.InspectMember(MET_, "MET_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selectedJets_", (void*)&selectedJets_);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&selectedJets_, "selectedJets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bTagTCHE_", (void*)&bTagTCHE_);
      R__insp.InspectMember("vector<float>", (void*)&bTagTCHE_, "bTagTCHE_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bTagTCHP_", (void*)&bTagTCHP_);
      R__insp.InspectMember("vector<float>", (void*)&bTagTCHP_, "bTagTCHP_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bTagSSVHE_", (void*)&bTagSSVHE_);
      R__insp.InspectMember("vector<float>", (void*)&bTagSSVHE_, "bTagSSVHE_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bTagSSVHP_", (void*)&bTagSSVHP_);
      R__insp.InspectMember("vector<float>", (void*)&bTagSSVHP_, "bTagSSVHP_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bTagCSV_", (void*)&bTagCSV_);
      R__insp.InspectMember("vector<float>", (void*)&bTagCSV_, "bTagCSV_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muon_", &muon_);
      R__insp.InspectMember(muon_, "muon_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadrBQuark_", &hadrBQuark_);
      R__insp.InspectMember(hadrBQuark_, "hadrBQuark_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadrLQuark1_", &hadrLQuark1_);
      R__insp.InspectMember(hadrLQuark1_, "hadrLQuark1_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadrLQuark2_", &hadrLQuark2_);
      R__insp.InspectMember(hadrLQuark2_, "hadrLQuark2_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leptBQuark_", &leptBQuark_);
      R__insp.InspectMember(leptBQuark_, "leptBQuark_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "standardCosTheta_", &standardCosTheta_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "standardNeutrino_", &standardNeutrino_);
      R__insp.InspectMember(standardNeutrino_, "standardNeutrino_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "standardLepton_", &standardLepton_);
      R__insp.InspectMember(standardLepton_, "standardLepton_.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WTree(void *p) {
      return  p ? new(p) ::WTree : new ::WTree;
   }
   static void *newArray_WTree(Long_t nElements, void *p) {
      return p ? new(p) ::WTree[nElements] : new ::WTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_WTree(void *p) {
      delete ((::WTree*)p);
   }
   static void deleteArray_WTree(void *p) {
      delete [] ((::WTree*)p);
   }
   static void destruct_WTree(void *p) {
      typedef ::WTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_WTree(TBuffer &buf, void *obj) {
      ((::WTree*)obj)->::WTree::Streamer(buf);
   }
} // end of namespace ROOT for class ::WTree

//______________________________________________________________________________
void InclFourthGenTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class InclFourthGenTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> eventID_;
      R__b >> runID_;
      R__b >> lumiBlockID_;
      R__b >> nPV_;
      R__b >> nPUBXm1_;
      R__b >> nPU_;
      R__b >> nPUBXp1_;
      R__b >> flavorHistoryPath_;
      R__b >> SelectedSingleLepton_;
      R__b >> SelectedSingleMu_;
      R__b >> SelectedSingleEl_;
      R__b >> SelectedSSLepton_;
      R__b >> SelectedSSMu_;
      R__b >> SelectedSSEl_;
      R__b >> SelectedSSMuEl_;
      R__b >> SelectedTriLepton_;
      R__b >> SelectedMuMuMu_;
      R__b >> SelectedMuMuEl_;
      R__b >> SelectedMuElEl_;
      R__b >> SelectedElElEl_;
      R__b >> EE_;
      R__b >> EB_;
      R__b >> EEEE_;
      R__b >> EBEE_;
      R__b >> EBEB_;
      R__b >> semiMuDecay_;
      R__b >> semiElDecay_;
      R__b >> Wbosonpartonsmatched_;
      R__b >> WMassmatched_;
      R__b >> eventWeight_;
      MET_.Streamer(R__b);
      {
         vector<TLorentzVector> &R__stl =  selectedJets_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TLorentzVector R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  bTagTCHE_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  bTagTCHP_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  partonFlavourJet_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TLorentzVector> &R__stl =  selectedForwardJets_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TLorentzVector R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TLorentzVector> &R__stl =  InitJets_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TLorentzVector R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  InitJetsbTagTCHE_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  InitJetsbTagTCHP_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TLorentzVector> &R__stl =  selectedMuons_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TLorentzVector R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TLorentzVector> &R__stl =  selectedElectrons_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TLorentzVector R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  selectedMuonsRelIso_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  selectedElectronsRelIso_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b >> chargeMisIdRateBarrel_;
      R__b >> chargeMisIdRateEndcap_;
      {
         vector<TLorentzVector> &R__stl =  mcQuarksForMatching_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TLorentzVector R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TLorentzVector> &R__stl =  quarksFromW_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TLorentzVector R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, InclFourthGenTree::IsA());
   } else {
      R__c = R__b.WriteVersion(InclFourthGenTree::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << eventID_;
      R__b << runID_;
      R__b << lumiBlockID_;
      R__b << nPV_;
      R__b << nPUBXm1_;
      R__b << nPU_;
      R__b << nPUBXp1_;
      R__b << flavorHistoryPath_;
      R__b << SelectedSingleLepton_;
      R__b << SelectedSingleMu_;
      R__b << SelectedSingleEl_;
      R__b << SelectedSSLepton_;
      R__b << SelectedSSMu_;
      R__b << SelectedSSEl_;
      R__b << SelectedSSMuEl_;
      R__b << SelectedTriLepton_;
      R__b << SelectedMuMuMu_;
      R__b << SelectedMuMuEl_;
      R__b << SelectedMuElEl_;
      R__b << SelectedElElEl_;
      R__b << EE_;
      R__b << EB_;
      R__b << EEEE_;
      R__b << EBEE_;
      R__b << EBEB_;
      R__b << semiMuDecay_;
      R__b << semiElDecay_;
      R__b << Wbosonpartonsmatched_;
      R__b << WMassmatched_;
      R__b << eventWeight_;
      MET_.Streamer(R__b);
      {
         vector<TLorentzVector> &R__stl =  selectedJets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TLorentzVector>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TLorentzVector&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<float> &R__stl =  bTagTCHE_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<float> &R__stl =  bTagTCHP_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  partonFlavourJet_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<TLorentzVector> &R__stl =  selectedForwardJets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TLorentzVector>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TLorentzVector&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TLorentzVector> &R__stl =  InitJets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TLorentzVector>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TLorentzVector&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<float> &R__stl =  InitJetsbTagTCHE_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<float> &R__stl =  InitJetsbTagTCHP_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<TLorentzVector> &R__stl =  selectedMuons_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TLorentzVector>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TLorentzVector&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TLorentzVector> &R__stl =  selectedElectrons_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TLorentzVector>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TLorentzVector&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<float> &R__stl =  selectedMuonsRelIso_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<float> &R__stl =  selectedElectronsRelIso_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << chargeMisIdRateBarrel_;
      R__b << chargeMisIdRateEndcap_;
      {
         vector<TLorentzVector> &R__stl =  mcQuarksForMatching_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TLorentzVector>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TLorentzVector&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TLorentzVector> &R__stl =  quarksFromW_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TLorentzVector>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TLorentzVector&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void InclFourthGenTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class InclFourthGenTree.
      TClass *R__cl = ::InclFourthGenTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventID_", &eventID_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runID_", &runID_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lumiBlockID_", &lumiBlockID_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPV_", &nPV_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPUBXm1_", &nPUBXm1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPU_", &nPU_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPUBXp1_", &nPUBXp1_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flavorHistoryPath_", &flavorHistoryPath_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SelectedSingleLepton_", &SelectedSingleLepton_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SelectedSingleMu_", &SelectedSingleMu_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SelectedSingleEl_", &SelectedSingleEl_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SelectedSSLepton_", &SelectedSSLepton_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SelectedSSMu_", &SelectedSSMu_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SelectedSSEl_", &SelectedSSEl_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SelectedSSMuEl_", &SelectedSSMuEl_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SelectedTriLepton_", &SelectedTriLepton_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SelectedMuMuMu_", &SelectedMuMuMu_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SelectedMuMuEl_", &SelectedMuMuEl_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SelectedMuElEl_", &SelectedMuElEl_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SelectedElElEl_", &SelectedElElEl_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EE_", &EE_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EB_", &EB_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EEEE_", &EEEE_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EBEE_", &EBEE_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EBEB_", &EBEB_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "semiMuDecay_", &semiMuDecay_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "semiElDecay_", &semiElDecay_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Wbosonpartonsmatched_", &Wbosonpartonsmatched_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WMassmatched_", &WMassmatched_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventWeight_", &eventWeight_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MET_", &MET_);
      R__insp.InspectMember(MET_, "MET_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selectedJets_", (void*)&selectedJets_);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&selectedJets_, "selectedJets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bTagTCHE_", (void*)&bTagTCHE_);
      R__insp.InspectMember("vector<float>", (void*)&bTagTCHE_, "bTagTCHE_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bTagTCHP_", (void*)&bTagTCHP_);
      R__insp.InspectMember("vector<float>", (void*)&bTagTCHP_, "bTagTCHP_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partonFlavourJet_", (void*)&partonFlavourJet_);
      R__insp.InspectMember("vector<int>", (void*)&partonFlavourJet_, "partonFlavourJet_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selectedForwardJets_", (void*)&selectedForwardJets_);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&selectedForwardJets_, "selectedForwardJets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InitJets_", (void*)&InitJets_);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&InitJets_, "InitJets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InitJetsbTagTCHE_", (void*)&InitJetsbTagTCHE_);
      R__insp.InspectMember("vector<float>", (void*)&InitJetsbTagTCHE_, "InitJetsbTagTCHE_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InitJetsbTagTCHP_", (void*)&InitJetsbTagTCHP_);
      R__insp.InspectMember("vector<float>", (void*)&InitJetsbTagTCHP_, "InitJetsbTagTCHP_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selectedMuons_", (void*)&selectedMuons_);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&selectedMuons_, "selectedMuons_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selectedElectrons_", (void*)&selectedElectrons_);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&selectedElectrons_, "selectedElectrons_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selectedMuonsRelIso_", (void*)&selectedMuonsRelIso_);
      R__insp.InspectMember("vector<float>", (void*)&selectedMuonsRelIso_, "selectedMuonsRelIso_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selectedElectronsRelIso_", (void*)&selectedElectronsRelIso_);
      R__insp.InspectMember("vector<float>", (void*)&selectedElectronsRelIso_, "selectedElectronsRelIso_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargeMisIdRateBarrel_", &chargeMisIdRateBarrel_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargeMisIdRateEndcap_", &chargeMisIdRateEndcap_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcQuarksForMatching_", (void*)&mcQuarksForMatching_);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&mcQuarksForMatching_, "mcQuarksForMatching_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "quarksFromW_", (void*)&quarksFromW_);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&quarksFromW_, "quarksFromW_.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_InclFourthGenTree(void *p) {
      return  p ? new(p) ::InclFourthGenTree : new ::InclFourthGenTree;
   }
   static void *newArray_InclFourthGenTree(Long_t nElements, void *p) {
      return p ? new(p) ::InclFourthGenTree[nElements] : new ::InclFourthGenTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_InclFourthGenTree(void *p) {
      delete ((::InclFourthGenTree*)p);
   }
   static void deleteArray_InclFourthGenTree(void *p) {
      delete [] ((::InclFourthGenTree*)p);
   }
   static void destruct_InclFourthGenTree(void *p) {
      typedef ::InclFourthGenTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_InclFourthGenTree(TBuffer &buf, void *obj) {
      ((::InclFourthGenTree*)obj)->::InclFourthGenTree::Streamer(buf);
   }
} // end of namespace ROOT for class ::InclFourthGenTree

//______________________________________________________________________________
void MCExpectation::Streamer(TBuffer &R__b)
{
   // Stream an object of class MCExpectation.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> Luminosity;
      { TString R__str; R__str.Streamer(R__b); Name = R__str.Data(); }
      R__b >> computed;
      R__b >> EfficienciesGiven;
      {
         vector<pair<string,float> > &R__stl =  btag;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(pair<string,float>));
         if (R__tcl1==0) {
            Error("btag streamer","Missing the TClass object for pair<string,float>!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            pair<string,float> R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<pair<float,float> > &R__stl =  Eb;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(pair<float,float>));
         if (R__tcl1==0) {
            Error("Eb streamer","Missing the TClass object for pair<float,float>!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            pair<float,float> R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<pair<float,float> > &R__stl =  Eudsc;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(pair<float,float>));
         if (R__tcl1==0) {
            Error("Eudsc streamer","Missing the TClass object for pair<float,float>!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            pair<float,float> R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<pair<float,float> > &R__stl =  Eudsc_vj;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(pair<float,float>));
         if (R__tcl1==0) {
            Error("Eudsc_vj streamer","Missing the TClass object for pair<float,float>!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            pair<float,float> R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      R__b.StreamObject(&(TriggerEff),typeid(pair<float,float>));
      R__b.StreamObject(&(SkimEff),typeid(pair<float,float>));
      R__b.StreamObject(&(MuonSelEff),typeid(pair<float,float>));
      R__b.StreamObject(&(SecondLeptonVetoEff),typeid(pair<float,float>));
      R__b.StreamObject(&(JetSelEff),typeid(pair<float,float>));
      R__b.StreamObject(&(NAll),typeid(pair<float,float>));
      R__b.StreamObject(&(NTtJets),typeid(pair<float,float>));
      R__b.StreamObject(&(NWlj),typeid(pair<float,float>));
      R__b.StreamObject(&(NWb),typeid(pair<float,float>));
      R__b.StreamObject(&(NWc),typeid(pair<float,float>));
      R__b.StreamObject(&(NWbb),typeid(pair<float,float>));
      R__b.StreamObject(&(NWcc),typeid(pair<float,float>));
      R__b.StreamObject(&(NZlj),typeid(pair<float,float>));
      R__b.StreamObject(&(NZb),typeid(pair<float,float>));
      R__b.StreamObject(&(NZc),typeid(pair<float,float>));
      R__b.StreamObject(&(NZbb),typeid(pair<float,float>));
      R__b.StreamObject(&(NZcc),typeid(pair<float,float>));
      R__b.StreamObject(&(NQCD),typeid(pair<float,float>));
      R__b.StreamObject(&(NSingleTop),typeid(pair<float,float>));
      R__b.StreamObject(&(NVV),typeid(pair<float,float>));
      R__b.CheckByteCount(R__s, R__c, MCExpectation::IsA());
   } else {
      R__c = R__b.WriteVersion(MCExpectation::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << Luminosity;
      { TString R__str = Name.c_str(); R__str.Streamer(R__b);}
      R__b << computed;
      R__b << EfficienciesGiven;
      {
         vector<pair<string,float> > &R__stl =  btag;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(pair<string,float>));
         if (R__tcl1==0) {
            Error("btag streamer","Missing the TClass object for pair<string,float>!");
            return;
         }
            vector<pair<string,float> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((pair<string,float>*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<pair<float,float> > &R__stl =  Eb;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(pair<float,float>));
         if (R__tcl1==0) {
            Error("Eb streamer","Missing the TClass object for pair<float,float>!");
            return;
         }
            vector<pair<float,float> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((pair<float,float>*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<pair<float,float> > &R__stl =  Eudsc;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(pair<float,float>));
         if (R__tcl1==0) {
            Error("Eudsc streamer","Missing the TClass object for pair<float,float>!");
            return;
         }
            vector<pair<float,float> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((pair<float,float>*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<pair<float,float> > &R__stl =  Eudsc_vj;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(pair<float,float>));
         if (R__tcl1==0) {
            Error("Eudsc_vj streamer","Missing the TClass object for pair<float,float>!");
            return;
         }
            vector<pair<float,float> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((pair<float,float>*)&(*R__k),R__tcl1);
            }
         }
      }
      R__b.StreamObject(&(TriggerEff),typeid(pair<float,float>));
      R__b.StreamObject(&(SkimEff),typeid(pair<float,float>));
      R__b.StreamObject(&(MuonSelEff),typeid(pair<float,float>));
      R__b.StreamObject(&(SecondLeptonVetoEff),typeid(pair<float,float>));
      R__b.StreamObject(&(JetSelEff),typeid(pair<float,float>));
      R__b.StreamObject(&(NAll),typeid(pair<float,float>));
      R__b.StreamObject(&(NTtJets),typeid(pair<float,float>));
      R__b.StreamObject(&(NWlj),typeid(pair<float,float>));
      R__b.StreamObject(&(NWb),typeid(pair<float,float>));
      R__b.StreamObject(&(NWc),typeid(pair<float,float>));
      R__b.StreamObject(&(NWbb),typeid(pair<float,float>));
      R__b.StreamObject(&(NWcc),typeid(pair<float,float>));
      R__b.StreamObject(&(NZlj),typeid(pair<float,float>));
      R__b.StreamObject(&(NZb),typeid(pair<float,float>));
      R__b.StreamObject(&(NZc),typeid(pair<float,float>));
      R__b.StreamObject(&(NZbb),typeid(pair<float,float>));
      R__b.StreamObject(&(NZcc),typeid(pair<float,float>));
      R__b.StreamObject(&(NQCD),typeid(pair<float,float>));
      R__b.StreamObject(&(NSingleTop),typeid(pair<float,float>));
      R__b.StreamObject(&(NVV),typeid(pair<float,float>));
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MCExpectation::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MCExpectation.
      TClass *R__cl = ::MCExpectation::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Luminosity", &Luminosity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Name", (void*)&Name);
      R__insp.InspectMember("string", (void*)&Name, "Name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "computed", &computed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EfficienciesGiven", &EfficienciesGiven);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btag", (void*)&btag);
      R__insp.InspectMember("vector<pair<string,float> >", (void*)&btag, "btag.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eb", (void*)&Eb);
      R__insp.InspectMember("vector<pair<float,float> >", (void*)&Eb, "Eb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eudsc", (void*)&Eudsc);
      R__insp.InspectMember("vector<pair<float,float> >", (void*)&Eudsc, "Eudsc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eudsc_vj", (void*)&Eudsc_vj);
      R__insp.InspectMember("vector<pair<float,float> >", (void*)&Eudsc_vj, "Eudsc_vj.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerEff", (void*)&TriggerEff);
      R__insp.InspectMember("pair<float,float>", (void*)&TriggerEff, "TriggerEff.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SkimEff", (void*)&SkimEff);
      R__insp.InspectMember("pair<float,float>", (void*)&SkimEff, "SkimEff.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonSelEff", (void*)&MuonSelEff);
      R__insp.InspectMember("pair<float,float>", (void*)&MuonSelEff, "MuonSelEff.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SecondLeptonVetoEff", (void*)&SecondLeptonVetoEff);
      R__insp.InspectMember("pair<float,float>", (void*)&SecondLeptonVetoEff, "SecondLeptonVetoEff.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetSelEff", (void*)&JetSelEff);
      R__insp.InspectMember("pair<float,float>", (void*)&JetSelEff, "JetSelEff.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NAll", (void*)&NAll);
      R__insp.InspectMember("pair<float,float>", (void*)&NAll, "NAll.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTtJets", (void*)&NTtJets);
      R__insp.InspectMember("pair<float,float>", (void*)&NTtJets, "NTtJets.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NWlj", (void*)&NWlj);
      R__insp.InspectMember("pair<float,float>", (void*)&NWlj, "NWlj.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NWb", (void*)&NWb);
      R__insp.InspectMember("pair<float,float>", (void*)&NWb, "NWb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NWc", (void*)&NWc);
      R__insp.InspectMember("pair<float,float>", (void*)&NWc, "NWc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NWbb", (void*)&NWbb);
      R__insp.InspectMember("pair<float,float>", (void*)&NWbb, "NWbb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NWcc", (void*)&NWcc);
      R__insp.InspectMember("pair<float,float>", (void*)&NWcc, "NWcc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NZlj", (void*)&NZlj);
      R__insp.InspectMember("pair<float,float>", (void*)&NZlj, "NZlj.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NZb", (void*)&NZb);
      R__insp.InspectMember("pair<float,float>", (void*)&NZb, "NZb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NZc", (void*)&NZc);
      R__insp.InspectMember("pair<float,float>", (void*)&NZc, "NZc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NZbb", (void*)&NZbb);
      R__insp.InspectMember("pair<float,float>", (void*)&NZbb, "NZbb.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NZcc", (void*)&NZcc);
      R__insp.InspectMember("pair<float,float>", (void*)&NZcc, "NZcc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NQCD", (void*)&NQCD);
      R__insp.InspectMember("pair<float,float>", (void*)&NQCD, "NQCD.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NSingleTop", (void*)&NSingleTop);
      R__insp.InspectMember("pair<float,float>", (void*)&NSingleTop, "NSingleTop.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NVV", (void*)&NVV);
      R__insp.InspectMember("pair<float,float>", (void*)&NVV, "NVV.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MCExpectation(void *p) {
      return  p ? new(p) ::MCExpectation : new ::MCExpectation;
   }
   static void *newArray_MCExpectation(Long_t nElements, void *p) {
      return p ? new(p) ::MCExpectation[nElements] : new ::MCExpectation[nElements];
   }
   // Wrapper around operator delete
   static void delete_MCExpectation(void *p) {
      delete ((::MCExpectation*)p);
   }
   static void deleteArray_MCExpectation(void *p) {
      delete [] ((::MCExpectation*)p);
   }
   static void destruct_MCExpectation(void *p) {
      typedef ::MCExpectation current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MCExpectation(TBuffer &buf, void *obj) {
      ((::MCExpectation*)obj)->::MCExpectation::Streamer(buf);
   }
} // end of namespace ROOT for class ::MCExpectation

//______________________________________________________________________________
void MCObsExpectation::Streamer(TBuffer &R__b)
{
   // Stream an object of class MCObsExpectation.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      {
         vector<string> &R__stl =  datasetNames;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            R__stl.push_back(R__t);
         }
      }
      {
         vector<string> &R__stl =  datasetTitles;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            R__stl.push_back(R__t);
         }
      }
      R__b >> Luminosity;
      { TString R__str; R__str.Streamer(R__b); Name = R__str.Data(); }
      R__b >> legSMProcess;
      R__b >> legAll;
      R__b >> hstSMProcess;
      R__b >> hstAll;
      R__b >> hSMProcess;
      R__b >> hAll;
      R__b >> hSMSubProcesses;
      R__b >> hNewPhysicsSignal;
      R__b.CheckByteCount(R__s, R__c, MCObsExpectation::IsA());
   } else {
      R__c = R__b.WriteVersion(MCObsExpectation::IsA(), kTRUE);
      TObject::Streamer(R__b);
      {
         vector<string> &R__stl =  datasetNames;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<string>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str((*R__k).c_str());
             R__str.Streamer(R__b);};
            }
         }
      }
      {
         vector<string> &R__stl =  datasetTitles;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<string>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str((*R__k).c_str());
             R__str.Streamer(R__b);};
            }
         }
      }
      R__b << Luminosity;
      { TString R__str = Name.c_str(); R__str.Streamer(R__b);}
      R__b << legSMProcess;
      R__b << legAll;
      R__b << hstSMProcess;
      R__b << hstAll;
      R__b << (TObject*)hSMProcess;
      R__b << (TObject*)hAll;
      R__b << hSMSubProcesses;
      R__b << (TObject*)hNewPhysicsSignal;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MCObsExpectation::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MCObsExpectation.
      TClass *R__cl = ::MCObsExpectation::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "datasetNames", (void*)&datasetNames);
      R__insp.InspectMember("vector<string>", (void*)&datasetNames, "datasetNames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "datasetTitles", (void*)&datasetTitles);
      R__insp.InspectMember("vector<string>", (void*)&datasetTitles, "datasetTitles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Luminosity", &Luminosity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Name", (void*)&Name);
      R__insp.InspectMember("string", (void*)&Name, "Name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*legSMProcess", &legSMProcess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*legAll", &legAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hstSMProcess", &hstSMProcess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hstAll", &hstAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hSMProcess", &hSMProcess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hAll", &hAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hSMSubProcesses", &hSMSubProcesses);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNewPhysicsSignal", &hNewPhysicsSignal);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MCObsExpectation(void *p) {
      return  p ? new(p) ::MCObsExpectation : new ::MCObsExpectation;
   }
   static void *newArray_MCObsExpectation(Long_t nElements, void *p) {
      return p ? new(p) ::MCObsExpectation[nElements] : new ::MCObsExpectation[nElements];
   }
   // Wrapper around operator delete
   static void delete_MCObsExpectation(void *p) {
      delete ((::MCObsExpectation*)p);
   }
   static void deleteArray_MCObsExpectation(void *p) {
      delete [] ((::MCObsExpectation*)p);
   }
   static void destruct_MCObsExpectation(void *p) {
      typedef ::MCObsExpectation current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MCObsExpectation(TBuffer &buf, void *obj) {
      ((::MCObsExpectation*)obj)->::MCObsExpectation::Streamer(buf);
   }
} // end of namespace ROOT for class ::MCObsExpectation

//______________________________________________________________________________
void Dataset::Streamer(TBuffer &R__b)
{
   // Stream an object of class Dataset.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      { TString R__str; R__str.Streamer(R__b); Name_ = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); Title_ = R__str.Data(); }
      R__b >> DotIt_;
      R__b >> Color_;
      R__b >> LineStyle_;
      R__b >> LineWidth_;
      R__b >> NormFactor_;
      R__b >> Xsection_;
      R__b >> XsectionError_;
      R__b >> Mass_;
      R__b >> PreSelEfficiency_;
      R__b >> EqLumi_;
      R__b >> eventTree_;
      R__b >> runTree_;
      R__b >> NofEvtsToRunOver_;
      {
         vector<string> &R__stl =  Filenames_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<int> > &R__stl =  JSONInfo_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<int,allocator<int> >));
         if (R__tcl1==0) {
            Error("JSONInfo_ streamer","Missing the TClass object for vector<int,allocator<int> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<int,allocator<int> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, Dataset::IsA());
   } else {
      R__c = R__b.WriteVersion(Dataset::IsA(), kTRUE);
      TObject::Streamer(R__b);
      { TString R__str = Name_.c_str(); R__str.Streamer(R__b);}
      { TString R__str = Title_.c_str(); R__str.Streamer(R__b);}
      R__b << DotIt_;
      R__b << Color_;
      R__b << LineStyle_;
      R__b << LineWidth_;
      R__b << NormFactor_;
      R__b << Xsection_;
      R__b << XsectionError_;
      R__b << Mass_;
      R__b << PreSelEfficiency_;
      R__b << EqLumi_;
      R__b << eventTree_;
      R__b << runTree_;
      R__b << NofEvtsToRunOver_;
      {
         vector<string> &R__stl =  Filenames_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<string>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str((*R__k).c_str());
             R__str.Streamer(R__b);};
            }
         }
      }
      {
         vector<vector<int> > &R__stl =  JSONInfo_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<int,allocator<int> >));
         if (R__tcl1==0) {
            Error("JSONInfo_ streamer","Missing the TClass object for vector<int,allocator<int> >!");
            return;
         }
            vector<vector<int> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<int,allocator<int> >*)&(*R__k),R__tcl1);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Dataset::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Dataset.
      TClass *R__cl = ::Dataset::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Name_", (void*)&Name_);
      R__insp.InspectMember("string", (void*)&Name_, "Name_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Title_", (void*)&Title_);
      R__insp.InspectMember("string", (void*)&Title_, "Title_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DotIt_", &DotIt_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Color_", &Color_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LineStyle_", &LineStyle_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LineWidth_", &LineWidth_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NormFactor_", &NormFactor_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Xsection_", &Xsection_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XsectionError_", &XsectionError_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mass_", &Mass_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PreSelEfficiency_", &PreSelEfficiency_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EqLumi_", &EqLumi_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eventTree_", &eventTree_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*runTree_", &runTree_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NofEvtsToRunOver_", &NofEvtsToRunOver_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Filenames_", (void*)&Filenames_);
      R__insp.InspectMember("vector<string>", (void*)&Filenames_, "Filenames_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JSONInfo_", (void*)&JSONInfo_);
      R__insp.InspectMember("vector<vector<int> >", (void*)&JSONInfo_, "JSONInfo_.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Dataset(void *p) {
      return  p ? new(p) ::Dataset : new ::Dataset;
   }
   static void *newArray_Dataset(Long_t nElements, void *p) {
      return p ? new(p) ::Dataset[nElements] : new ::Dataset[nElements];
   }
   // Wrapper around operator delete
   static void delete_Dataset(void *p) {
      delete ((::Dataset*)p);
   }
   static void deleteArray_Dataset(void *p) {
      delete [] ((::Dataset*)p);
   }
   static void destruct_Dataset(void *p) {
      typedef ::Dataset current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Dataset(TBuffer &buf, void *obj) {
      ((::Dataset*)obj)->::Dataset::Streamer(buf);
   }
} // end of namespace ROOT for class ::Dataset

//______________________________________________________________________________
void AnalysisEnvironment::Streamer(TBuffer &R__b)
{
   // Stream an object of class AnalysisEnvironment.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> allObsDefined;
      R__b >> runOnObsByString;
      {
         vector<int> &R__stl =  listOfObsInts;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<string> &R__stl =  listOfObsStrings;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  listOfObs;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b >> loadGenJetCollection;
      R__b >> loadGenEventCollection;
      R__b >> loadNPGenEventCollection;
      R__b >> loadMCParticles;
      R__b >> loadTrackMETCollection;
      R__b >> JetType;
      R__b >> METType;
      { TString R__str; R__str.Streamer(R__b); PrimaryVertexCollection = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); JetCollection = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); METCollection = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); TrackMETCollection = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); MuonCollection = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); ElectronCollection = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); GenJetCollection = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); GenEventCollection = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); NPGenEventCollection = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); MCParticlesCollection = R__str.Data(); }
      R__b >> isMC;
      R__b >> isSMPseudo;
      R__b >> Vars_ByFile;
      R__b >> MCRound;
      R__b >> Verbose;
      R__b >> Luminosity;
      R__b >> JES;
      R__b >> doABCD;
      R__b >> doVJEstim;
      R__b >> doVJEstPE;
      R__b >> doTtJEstim;
      R__b >> doTemplComp;
      R__b >> nPseudoExp;
      { TString R__str; R__str.Streamer(R__b); VarsFile = R__str.Data(); }
      R__b >> IntToCut;
      { TString R__str; R__str.Streamer(R__b); MCExpFilename = R__str.Data(); }
      R__b >> LuminosityError;
      R__b >> TriggerEff;
      R__b >> TriggerEffError;
      R__b >> SkimEff;
      R__b >> SkimEffError;
      R__b >> MuonSelEff;
      R__b >> MuonSelEffError;
      R__b >> SecondLeptonVetoEff;
      R__b >> SecondLeptonVetoEffError;
      R__b >> JetSelEff;
      R__b >> JetSelEffError;
      R__b >> NofSingleTopEvts;
      R__b >> NofSingleTopEvtsError;
      R__b >> runonTTrees;
      R__b >> Systematics;
      R__b >> doBkgEstim;
      R__b >> doDumpPseudoExpInfoInTTree;
      { TString R__str; R__str.Streamer(R__b); DumpTreeName = R__str.Data(); }
      {
         vector<float> &R__stl =  FractionHWEvts;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b >> PVertexNdofCut;
      R__b >> PVertexZCut;
      R__b >> PVertexRhoCut;
      R__b >> ElectronPtCut;
      R__b >> ElectronEtaCut;
      R__b >> ElectronRelIsoCut;
      R__b >> MuonPtCutSR;
      R__b >> MuonEtaCutSR;
      R__b >> MuonRelIsoCutSR;
      R__b >> MuonNHitsCutSR;
      R__b >> MuonChi2CutSR;
      R__b >> MuonECALVetoSR;
      R__b >> MuonHCALVetoSR;
      R__b >> MuonD0CutSR;
      R__b >> MuonDRJetsCut;
      R__b >> MuonPtCutVetoSR;
      R__b >> MuonEtaCutVetoSR;
      R__b >> MuonRelIsoCutVetoSR;
      R__b >> JetsPtCutSR;
      R__b >> JetsEtaCutSR;
      R__b >> applyJetID;
      R__b >> JetEMFCut;
      R__b >> n90HitsCut;
      R__b >> fHPDCut;
      R__b >> NofJets;
      R__b >> NofJetBins;
      R__b >> MuonPtCutCR;
      R__b >> MuonEtaCutCR;
      R__b >> MuonRelIsoCutCR;
      R__b >> JetsPtCutCR;
      R__b >> JetsEtaCutCR;
      R__b >> MblCut;
      R__b >> DRBBCut;
      R__b >> HTBBCut;
      R__b >> BtagAlgo_ttjEst;
      R__b >> BtagDiscriCut_ttjEst;
      R__b >> NREvtFraction;
      R__b >> BtagAlgo_vjEst;
      R__b >> NofBtagWorkingPoint_vjEst;
      delete [] BtagWorkingPoint_vjEst;
      BtagWorkingPoint_vjEst = new float[NofBtagWorkingPoint_vjEst];
      R__b.ReadFastArray(BtagWorkingPoint_vjEst,NofBtagWorkingPoint_vjEst);
      R__b >> useMJLE;
      R__b >> useUnBinMLE;
      { TString R__str; R__str.Streamer(R__b); MinMethod = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); MinOption = R__str.Data(); }
      {
         vector<int> &R__stl =  VJEstFixParam;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<float> > &R__stl =  EffEbsel;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<float,allocator<float> >));
         if (R__tcl1==0) {
            Error("EffEbsel streamer","Missing the TClass object for vector<float,allocator<float> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<float,allocator<float> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  NVlikeInit;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  NTTlikeInit;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<vector<float> > > &R__stl =  TagEffInit;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >));
         if (R__tcl1==0) {
            Error("TagEffInit streamer","Missing the TClass object for vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      R__b >> NVJetPE;
      R__b >> NofIterationsVJestShapeEstim;
      R__b >> NXbinsABCD;
      R__b >> NYbinsABCD;
      R__b >> XbinMinABCD;
      R__b >> XbinMaxABCD;
      R__b >> YbinMinABCD;
      R__b >> YbinMaxABCD;
      R__b >> cutXmin;
      R__b >> cutX0;
      R__b >> cutX1;
      R__b >> cutXmax;
      R__b >> cutYmin;
      R__b >> cutY0;
      R__b >> cutY1;
      R__b >> cutYmax;
      R__b >> region;
      { TString R__str; R__str.Streamer(R__b); binningFile = R__str.Data(); }
      R__b >> nbins;
      R__b >> eventsperbin;
      R__b >> EpsilonValue;
      R__b >> Correl_cut;
      R__b >> nPseudoSession;
      R__b.CheckByteCount(R__s, R__c, AnalysisEnvironment::IsA());
   } else {
      R__c = R__b.WriteVersion(AnalysisEnvironment::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << allObsDefined;
      R__b << runOnObsByString;
      {
         vector<int> &R__stl =  listOfObsInts;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<string> &R__stl =  listOfObsStrings;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<string>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str((*R__k).c_str());
             R__str.Streamer(R__b);};
            }
         }
      }
      {
         vector<int> &R__stl =  listOfObs;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << loadGenJetCollection;
      R__b << loadGenEventCollection;
      R__b << loadNPGenEventCollection;
      R__b << loadMCParticles;
      R__b << loadTrackMETCollection;
      R__b << JetType;
      R__b << METType;
      { TString R__str = PrimaryVertexCollection.c_str(); R__str.Streamer(R__b);}
      { TString R__str = JetCollection.c_str(); R__str.Streamer(R__b);}
      { TString R__str = METCollection.c_str(); R__str.Streamer(R__b);}
      { TString R__str = TrackMETCollection.c_str(); R__str.Streamer(R__b);}
      { TString R__str = MuonCollection.c_str(); R__str.Streamer(R__b);}
      { TString R__str = ElectronCollection.c_str(); R__str.Streamer(R__b);}
      { TString R__str = GenJetCollection.c_str(); R__str.Streamer(R__b);}
      { TString R__str = GenEventCollection.c_str(); R__str.Streamer(R__b);}
      { TString R__str = NPGenEventCollection.c_str(); R__str.Streamer(R__b);}
      { TString R__str = MCParticlesCollection.c_str(); R__str.Streamer(R__b);}
      R__b << isMC;
      R__b << isSMPseudo;
      R__b << Vars_ByFile;
      R__b << MCRound;
      R__b << Verbose;
      R__b << Luminosity;
      R__b << JES;
      R__b << doABCD;
      R__b << doVJEstim;
      R__b << doVJEstPE;
      R__b << doTtJEstim;
      R__b << doTemplComp;
      R__b << nPseudoExp;
      { TString R__str = VarsFile.c_str(); R__str.Streamer(R__b);}
      R__b << IntToCut;
      { TString R__str = MCExpFilename.c_str(); R__str.Streamer(R__b);}
      R__b << LuminosityError;
      R__b << TriggerEff;
      R__b << TriggerEffError;
      R__b << SkimEff;
      R__b << SkimEffError;
      R__b << MuonSelEff;
      R__b << MuonSelEffError;
      R__b << SecondLeptonVetoEff;
      R__b << SecondLeptonVetoEffError;
      R__b << JetSelEff;
      R__b << JetSelEffError;
      R__b << NofSingleTopEvts;
      R__b << NofSingleTopEvtsError;
      R__b << runonTTrees;
      R__b << Systematics;
      R__b << doBkgEstim;
      R__b << doDumpPseudoExpInfoInTTree;
      { TString R__str = DumpTreeName.c_str(); R__str.Streamer(R__b);}
      {
         vector<float> &R__stl =  FractionHWEvts;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << PVertexNdofCut;
      R__b << PVertexZCut;
      R__b << PVertexRhoCut;
      R__b << ElectronPtCut;
      R__b << ElectronEtaCut;
      R__b << ElectronRelIsoCut;
      R__b << MuonPtCutSR;
      R__b << MuonEtaCutSR;
      R__b << MuonRelIsoCutSR;
      R__b << MuonNHitsCutSR;
      R__b << MuonChi2CutSR;
      R__b << MuonECALVetoSR;
      R__b << MuonHCALVetoSR;
      R__b << MuonD0CutSR;
      R__b << MuonDRJetsCut;
      R__b << MuonPtCutVetoSR;
      R__b << MuonEtaCutVetoSR;
      R__b << MuonRelIsoCutVetoSR;
      R__b << JetsPtCutSR;
      R__b << JetsEtaCutSR;
      R__b << applyJetID;
      R__b << JetEMFCut;
      R__b << n90HitsCut;
      R__b << fHPDCut;
      R__b << NofJets;
      R__b << NofJetBins;
      R__b << MuonPtCutCR;
      R__b << MuonEtaCutCR;
      R__b << MuonRelIsoCutCR;
      R__b << JetsPtCutCR;
      R__b << JetsEtaCutCR;
      R__b << MblCut;
      R__b << DRBBCut;
      R__b << HTBBCut;
      R__b << BtagAlgo_ttjEst;
      R__b << BtagDiscriCut_ttjEst;
      R__b << NREvtFraction;
      R__b << BtagAlgo_vjEst;
      R__b << NofBtagWorkingPoint_vjEst;
      R__b.WriteFastArray(BtagWorkingPoint_vjEst,NofBtagWorkingPoint_vjEst);
      R__b << useMJLE;
      R__b << useUnBinMLE;
      { TString R__str = MinMethod.c_str(); R__str.Streamer(R__b);}
      { TString R__str = MinOption.c_str(); R__str.Streamer(R__b);}
      {
         vector<int> &R__stl =  VJEstFixParam;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<vector<float> > &R__stl =  EffEbsel;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<float,allocator<float> >));
         if (R__tcl1==0) {
            Error("EffEbsel streamer","Missing the TClass object for vector<float,allocator<float> >!");
            return;
         }
            vector<vector<float> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<float,allocator<float> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<float> &R__stl =  NVlikeInit;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<float> &R__stl =  NTTlikeInit;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<vector<vector<float> > > &R__stl =  TagEffInit;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >));
         if (R__tcl1==0) {
            Error("TagEffInit streamer","Missing the TClass object for vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >!");
            return;
         }
            vector<vector<vector<float> > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      R__b << NVJetPE;
      R__b << NofIterationsVJestShapeEstim;
      R__b << NXbinsABCD;
      R__b << NYbinsABCD;
      R__b << XbinMinABCD;
      R__b << XbinMaxABCD;
      R__b << YbinMinABCD;
      R__b << YbinMaxABCD;
      R__b << cutXmin;
      R__b << cutX0;
      R__b << cutX1;
      R__b << cutXmax;
      R__b << cutYmin;
      R__b << cutY0;
      R__b << cutY1;
      R__b << cutYmax;
      R__b << region;
      { TString R__str = binningFile.c_str(); R__str.Streamer(R__b);}
      R__b << nbins;
      R__b << eventsperbin;
      R__b << EpsilonValue;
      R__b << Correl_cut;
      R__b << nPseudoSession;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AnalysisEnvironment::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AnalysisEnvironment.
      TClass *R__cl = ::AnalysisEnvironment::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "allObsDefined", &allObsDefined);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runOnObsByString", &runOnObsByString);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listOfObsInts", (void*)&listOfObsInts);
      R__insp.InspectMember("vector<int>", (void*)&listOfObsInts, "listOfObsInts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listOfObsStrings", (void*)&listOfObsStrings);
      R__insp.InspectMember("vector<string>", (void*)&listOfObsStrings, "listOfObsStrings.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listOfObs", (void*)&listOfObs);
      R__insp.InspectMember("vector<int>", (void*)&listOfObs, "listOfObs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "loadGenJetCollection", &loadGenJetCollection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "loadGenEventCollection", &loadGenEventCollection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "loadNPGenEventCollection", &loadNPGenEventCollection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "loadMCParticles", &loadMCParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "loadTrackMETCollection", &loadTrackMETCollection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetType", &JetType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "METType", &METType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimaryVertexCollection", (void*)&PrimaryVertexCollection);
      R__insp.InspectMember("string", (void*)&PrimaryVertexCollection, "PrimaryVertexCollection.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetCollection", (void*)&JetCollection);
      R__insp.InspectMember("string", (void*)&JetCollection, "JetCollection.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "METCollection", (void*)&METCollection);
      R__insp.InspectMember("string", (void*)&METCollection, "METCollection.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackMETCollection", (void*)&TrackMETCollection);
      R__insp.InspectMember("string", (void*)&TrackMETCollection, "TrackMETCollection.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonCollection", (void*)&MuonCollection);
      R__insp.InspectMember("string", (void*)&MuonCollection, "MuonCollection.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElectronCollection", (void*)&ElectronCollection);
      R__insp.InspectMember("string", (void*)&ElectronCollection, "ElectronCollection.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GenJetCollection", (void*)&GenJetCollection);
      R__insp.InspectMember("string", (void*)&GenJetCollection, "GenJetCollection.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GenEventCollection", (void*)&GenEventCollection);
      R__insp.InspectMember("string", (void*)&GenEventCollection, "GenEventCollection.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPGenEventCollection", (void*)&NPGenEventCollection);
      R__insp.InspectMember("string", (void*)&NPGenEventCollection, "NPGenEventCollection.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MCParticlesCollection", (void*)&MCParticlesCollection);
      R__insp.InspectMember("string", (void*)&MCParticlesCollection, "MCParticlesCollection.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isMC", &isMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isSMPseudo", &isSMPseudo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vars_ByFile", &Vars_ByFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MCRound", &MCRound);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Verbose", &Verbose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Luminosity", &Luminosity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JES", &JES);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doABCD", &doABCD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doVJEstim", &doVJEstim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doVJEstPE", &doVJEstPE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doTtJEstim", &doTtJEstim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doTemplComp", &doTemplComp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPseudoExp", &nPseudoExp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VarsFile", (void*)&VarsFile);
      R__insp.InspectMember("string", (void*)&VarsFile, "VarsFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IntToCut", &IntToCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MCExpFilename", (void*)&MCExpFilename);
      R__insp.InspectMember("string", (void*)&MCExpFilename, "MCExpFilename.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LuminosityError", &LuminosityError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerEff", &TriggerEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerEffError", &TriggerEffError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SkimEff", &SkimEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SkimEffError", &SkimEffError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonSelEff", &MuonSelEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonSelEffError", &MuonSelEffError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SecondLeptonVetoEff", &SecondLeptonVetoEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SecondLeptonVetoEffError", &SecondLeptonVetoEffError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetSelEff", &JetSelEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetSelEffError", &JetSelEffError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NofSingleTopEvts", &NofSingleTopEvts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NofSingleTopEvtsError", &NofSingleTopEvtsError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runonTTrees", &runonTTrees);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Systematics", &Systematics);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doBkgEstim", &doBkgEstim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doDumpPseudoExpInfoInTTree", &doDumpPseudoExpInfoInTTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DumpTreeName", (void*)&DumpTreeName);
      R__insp.InspectMember("string", (void*)&DumpTreeName, "DumpTreeName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FractionHWEvts", (void*)&FractionHWEvts);
      R__insp.InspectMember("vector<float>", (void*)&FractionHWEvts, "FractionHWEvts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PVertexNdofCut", &PVertexNdofCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PVertexZCut", &PVertexZCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PVertexRhoCut", &PVertexRhoCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElectronPtCut", &ElectronPtCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElectronEtaCut", &ElectronEtaCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElectronRelIsoCut", &ElectronRelIsoCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonPtCutSR", &MuonPtCutSR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonEtaCutSR", &MuonEtaCutSR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonRelIsoCutSR", &MuonRelIsoCutSR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonNHitsCutSR", &MuonNHitsCutSR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonChi2CutSR", &MuonChi2CutSR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonECALVetoSR", &MuonECALVetoSR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonHCALVetoSR", &MuonHCALVetoSR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonD0CutSR", &MuonD0CutSR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonDRJetsCut", &MuonDRJetsCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonPtCutVetoSR", &MuonPtCutVetoSR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonEtaCutVetoSR", &MuonEtaCutVetoSR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonRelIsoCutVetoSR", &MuonRelIsoCutVetoSR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetsPtCutSR", &JetsPtCutSR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetsEtaCutSR", &JetsEtaCutSR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "applyJetID", &applyJetID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetEMFCut", &JetEMFCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n90HitsCut", &n90HitsCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHPDCut", &fHPDCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NofJets", &NofJets);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NofJetBins", &NofJetBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonPtCutCR", &MuonPtCutCR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonEtaCutCR", &MuonEtaCutCR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonRelIsoCutCR", &MuonRelIsoCutCR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetsPtCutCR", &JetsPtCutCR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetsEtaCutCR", &JetsEtaCutCR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MblCut", &MblCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DRBBCut", &DRBBCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HTBBCut", &HTBBCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BtagAlgo_ttjEst", &BtagAlgo_ttjEst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BtagDiscriCut_ttjEst", &BtagDiscriCut_ttjEst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NREvtFraction", &NREvtFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BtagAlgo_vjEst", &BtagAlgo_vjEst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NofBtagWorkingPoint_vjEst", &NofBtagWorkingPoint_vjEst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BtagWorkingPoint_vjEst", &BtagWorkingPoint_vjEst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useMJLE", &useMJLE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useUnBinMLE", &useUnBinMLE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MinMethod", (void*)&MinMethod);
      R__insp.InspectMember("string", (void*)&MinMethod, "MinMethod.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MinOption", (void*)&MinOption);
      R__insp.InspectMember("string", (void*)&MinOption, "MinOption.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VJEstFixParam", (void*)&VJEstFixParam);
      R__insp.InspectMember("vector<int>", (void*)&VJEstFixParam, "VJEstFixParam.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EffEbsel", (void*)&EffEbsel);
      R__insp.InspectMember("vector<vector<float> >", (void*)&EffEbsel, "EffEbsel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NVlikeInit", (void*)&NVlikeInit);
      R__insp.InspectMember("vector<float>", (void*)&NVlikeInit, "NVlikeInit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTTlikeInit", (void*)&NTTlikeInit);
      R__insp.InspectMember("vector<float>", (void*)&NTTlikeInit, "NTTlikeInit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TagEffInit", (void*)&TagEffInit);
      R__insp.InspectMember("vector<vector<vector<float> > >", (void*)&TagEffInit, "TagEffInit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NVJetPE", &NVJetPE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NofIterationsVJestShapeEstim", &NofIterationsVJestShapeEstim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NXbinsABCD", &NXbinsABCD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NYbinsABCD", &NYbinsABCD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XbinMinABCD", &XbinMinABCD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XbinMaxABCD", &XbinMaxABCD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "YbinMinABCD", &YbinMinABCD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "YbinMaxABCD", &YbinMaxABCD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cutXmin", &cutXmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cutX0", &cutX0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cutX1", &cutX1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cutXmax", &cutXmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cutYmin", &cutYmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cutY0", &cutY0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cutY1", &cutY1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cutYmax", &cutYmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "region", &region);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binningFile", (void*)&binningFile);
      R__insp.InspectMember("string", (void*)&binningFile, "binningFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nbins", &nbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventsperbin", &eventsperbin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EpsilonValue", &EpsilonValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Correl_cut", &Correl_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPseudoSession", &nPseudoSession);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AnalysisEnvironment(void *p) {
      return  p ? new(p) ::AnalysisEnvironment : new ::AnalysisEnvironment;
   }
   static void *newArray_AnalysisEnvironment(Long_t nElements, void *p) {
      return p ? new(p) ::AnalysisEnvironment[nElements] : new ::AnalysisEnvironment[nElements];
   }
   // Wrapper around operator delete
   static void delete_AnalysisEnvironment(void *p) {
      delete ((::AnalysisEnvironment*)p);
   }
   static void deleteArray_AnalysisEnvironment(void *p) {
      delete [] ((::AnalysisEnvironment*)p);
   }
   static void destruct_AnalysisEnvironment(void *p) {
      typedef ::AnalysisEnvironment current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AnalysisEnvironment(TBuffer &buf, void *obj) {
      ((::AnalysisEnvironment*)obj)->::AnalysisEnvironment::Streamer(buf);
   }
} // end of namespace ROOT for class ::AnalysisEnvironment

//______________________________________________________________________________
void BinningFirstGuess::Streamer(TBuffer &R__b)
{
   // Stream an object of class BinningFirstGuess.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> isOnMC_;
      R__b >> intLumi_;
      fineHistos_.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, BinningFirstGuess::IsA());
   } else {
      R__c = R__b.WriteVersion(BinningFirstGuess::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << isOnMC_;
      R__b << intLumi_;
      fineHistos_.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void BinningFirstGuess::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BinningFirstGuess.
      TClass *R__cl = ::BinningFirstGuess::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isOnMC_", &isOnMC_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intLumi_", &intLumi_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fineHistos_", &fineHistos_);
      R__insp.InspectMember(fineHistos_, "fineHistos_.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BinningFirstGuess(void *p) {
      return  p ? new(p) ::BinningFirstGuess : new ::BinningFirstGuess;
   }
   static void *newArray_BinningFirstGuess(Long_t nElements, void *p) {
      return p ? new(p) ::BinningFirstGuess[nElements] : new ::BinningFirstGuess[nElements];
   }
   // Wrapper around operator delete
   static void delete_BinningFirstGuess(void *p) {
      delete ((::BinningFirstGuess*)p);
   }
   static void deleteArray_BinningFirstGuess(void *p) {
      delete [] ((::BinningFirstGuess*)p);
   }
   static void destruct_BinningFirstGuess(void *p) {
      typedef ::BinningFirstGuess current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_BinningFirstGuess(TBuffer &buf, void *obj) {
      ((::BinningFirstGuess*)obj)->::BinningFirstGuess::Streamer(buf);
   }
} // end of namespace ROOT for class ::BinningFirstGuess

//______________________________________________________________________________
void Container::Streamer(TBuffer &R__b)
{
   // Stream an object of class Container.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      {
         vector<Int_t> &R__stl =  int_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Float_t> &R__stl =  float_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  double_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<string> &R__stl =  string_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, Container::IsA());
   } else {
      R__c = R__b.WriteVersion(Container::IsA(), kTRUE);
      TObject::Streamer(R__b);
      {
         vector<Int_t> &R__stl =  int_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Int_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Float_t> &R__stl =  float_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Float_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  double_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<string> &R__stl =  string_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<string>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str((*R__k).c_str());
             R__str.Streamer(R__b);};
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Container::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Container.
      TClass *R__cl = ::Container::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "int_", (void*)&int_);
      R__insp.InspectMember("vector<Int_t>", (void*)&int_, "int_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "float_", (void*)&float_);
      R__insp.InspectMember("vector<Float_t>", (void*)&float_, "float_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "double_", (void*)&double_);
      R__insp.InspectMember("vector<Double_t>", (void*)&double_, "double_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "string_", (void*)&string_);
      R__insp.InspectMember("vector<string>", (void*)&string_, "string_.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Container(void *p) {
      return  p ? new(p) ::Container : new ::Container;
   }
   static void *newArray_Container(Long_t nElements, void *p) {
      return p ? new(p) ::Container[nElements] : new ::Container[nElements];
   }
   // Wrapper around operator delete
   static void delete_Container(void *p) {
      delete ((::Container*)p);
   }
   static void deleteArray_Container(void *p) {
      delete [] ((::Container*)p);
   }
   static void destruct_Container(void *p) {
      typedef ::Container current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Container(TBuffer &buf, void *obj) {
      ((::Container*)obj)->::Container::Streamer(buf);
   }
} // end of namespace ROOT for class ::Container

//______________________________________________________________________________
void VJetEstimation::Streamer(TBuffer &R__b)
{
   // Stream an object of class VJetEstimation.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> MCdata_;
      {
         vector<Dataset> &R__stl =  vDatasets_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            Dataset R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Bool_t> &R__stl =  processMask_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            bool R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b >> NbOfDatasets_;
      {
         vector<Int_t> &R__stl =  iDatasetsTTLike_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Int_t> &R__stl =  iDatasetsVLike_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Int_t> &R__stl =  iDatasetsVbLike_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b >> NbOfBJetsBins_;
      R__b >> NbOfJetsBins_;
      delete [] Njets_;
      Njets_ = new UInt_t[NbOfJetsBins_];
      R__b.ReadFastArray(Njets_,NbOfJetsBins_);
      R__b >> NbOfBtagWorkingPoint_;
      delete [] BtagWorkingPoint_;
      BtagWorkingPoint_ = new Float_t[NbOfBtagWorkingPoint_];
      R__b.ReadFastArray(BtagWorkingPoint_,NbOfBtagWorkingPoint_);
      {
         vector<vector<vector<vector<Double_t> > > > &R__stl =  N_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >));
         if (R__tcl1==0) {
            Error("N_ streamer","Missing the TClass object for vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<vector<vector<Double_t> > > > &R__stl =  N_err_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >));
         if (R__tcl1==0) {
            Error("N_err_ streamer","Missing the TClass object for vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<vector<vector<Double_t> > > > &R__stl =  N_err_hi_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >));
         if (R__tcl1==0) {
            Error("N_err_hi_ streamer","Missing the TClass object for vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<vector<vector<Double_t> > > > &R__stl =  N_err_lo_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >));
         if (R__tcl1==0) {
            Error("N_err_lo_ streamer","Missing the TClass object for vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<vector<Double_t> > > &R__stl =  Nbjets_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >));
         if (R__tcl1==0) {
            Error("Nbjets_ streamer","Missing the TClass object for vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<vector<Double_t> > > &R__stl =  MultiJet_Est_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >));
         if (R__tcl1==0) {
            Error("MultiJet_Est_ streamer","Missing the TClass object for vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eb_mc_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eb_mc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eb_err_mc_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eb_err_mc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eudsc_mc_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eudsc_mc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eudsc_err_mc_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eudsc_err_mc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  euds_mc_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("euds_mc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  euds_err_mc_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("euds_err_mc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eb_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eb_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eb_err_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eb_err_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eb_err_up_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eb_err_up_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eb_err_down_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eb_err_down_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eudsc_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eudsc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eudsc_err_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eudsc_err_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eudsc_err_up_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eudsc_err_up_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eudsc_err_down_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eudsc_err_down_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  euds_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("euds_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  euds_err_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("euds_err_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  euds_err_up_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("euds_err_up_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  euds_err_down_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("euds_err_down_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      delete [] Ntt_;
      Ntt_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(Ntt_,NbOfJetsBins_);
      delete [] Ntt_err_;
      Ntt_err_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(Ntt_err_,NbOfJetsBins_);
      delete [] Ntt_err_up_;
      Ntt_err_up_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(Ntt_err_up_,NbOfJetsBins_);
      delete [] Ntt_err_down_;
      Ntt_err_down_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(Ntt_err_down_,NbOfJetsBins_);
      delete [] Nv_;
      Nv_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(Nv_,NbOfJetsBins_);
      delete [] Nv_err_;
      Nv_err_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(Nv_err_,NbOfJetsBins_);
      delete [] Nv_err_up_;
      Nv_err_up_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(Nv_err_up_,NbOfJetsBins_);
      delete [] Nv_err_down_;
      Nv_err_down_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(Nv_err_down_,NbOfJetsBins_);
      delete [] Nvb_;
      Nvb_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(Nvb_,NbOfJetsBins_);
      delete [] Nvb_err_;
      Nvb_err_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(Nvb_err_,NbOfJetsBins_);
      delete [] ebq_;
      ebq_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(ebq_,NbOfJetsBins_);
      delete [] e0bq_;
      e0bq_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(e0bq_,NbOfJetsBins_);
      delete [] e1bq_;
      e1bq_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(e1bq_,NbOfJetsBins_);
      delete [] e2bq_;
      e2bq_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(e2bq_,NbOfJetsBins_);
      {
         vector<Double_t> &R__stl =  init_Nttlike_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  init_Nvlike_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  init_Eb_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("init_Eb_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  init_Eudsc_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("init_Eudsc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  init_Euds_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("init_Euds_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<double,allocator<double> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      delete [] minValue_;
      minValue_ = new Double_t[NbOfJetsBins_];
      R__b.ReadFastArray(minValue_,NbOfJetsBins_);
      R__b >> RescaledTTLikeEstimation;
      R__b >> RescaledVLikeEstimation;
      R__b >> RescaledVbLikeEstimation;
      R__b >> tCanva_RescaledTTLikeEstimation;
      R__b >> tCanva_RescaledVLikeEstimation;
      R__b >> tCanva_RescaledVbLikeEstimation;
      {
         vector<vector<TH1F> > &R__stl =  hNbOfBGenJets_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TH1F,allocator<TH1F> >));
         if (R__tcl1==0) {
            Error("hNbOfBGenJets_ streamer","Missing the TClass object for vector<TH1F,allocator<TH1F> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<TH1F,allocator<TH1F> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH3F> &R__stl =  hNbOfBGenJets_vs_JetPt_vs_JetEta_vs_Njets_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH3F R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<TH3F> > &R__stl =  hNbOfBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TH3F,allocator<TH3F> >));
         if (R__tcl1==0) {
            Error("hNbOfBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_ streamer","Missing the TClass object for vector<TH3F,allocator<TH3F> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<TH3F,allocator<TH3F> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH3F> &R__stl =  hNbOfCGenJets_vs_JetPt_vs_JetEta_vs_Njets_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH3F R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<TH3F> > &R__stl =  hNbOfCGenBJets_vs_JetPt_vs_JetEta_vs_Njets_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TH3F,allocator<TH3F> >));
         if (R__tcl1==0) {
            Error("hNbOfCGenBJets_vs_JetPt_vs_JetEta_vs_Njets_ streamer","Missing the TClass object for vector<TH3F,allocator<TH3F> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<TH3F,allocator<TH3F> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH3F> &R__stl =  hNbOfUDSGenJets_vs_JetPt_vs_JetEta_vs_Njets_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH3F R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<TH3F> > &R__stl =  hNbOfUDSGenBJets_vs_JetPt_vs_JetEta_vs_Njets_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TH3F,allocator<TH3F> >));
         if (R__tcl1==0) {
            Error("hNbOfUDSGenBJets_vs_JetPt_vs_JetEta_vs_Njets_ streamer","Missing the TClass object for vector<TH3F,allocator<TH3F> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<TH3F,allocator<TH3F> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH3F> &R__stl =  hNbOfNonBGenJets_vs_JetPt_vs_JetEta_vs_Njets_;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH3F R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<TH3F> > &R__stl =  hNbOfNonBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TH3F,allocator<TH3F> >));
         if (R__tcl1==0) {
            Error("hNbOfNonBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_ streamer","Missing the TClass object for vector<TH3F,allocator<TH3F> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<TH3F,allocator<TH3F> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<TEfficiency*> > &R__stl =  bTagEff_vs_Njets_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TEfficiency*,allocator<TEfficiency*> >));
         if (R__tcl1==0) {
            Error("bTagEff_vs_Njets_ streamer","Missing the TClass object for vector<TEfficiency*,allocator<TEfficiency*> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<TEfficiency*,allocator<TEfficiency*> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<TEfficiency*> > &R__stl =  cTagEff_vs_Njets_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TEfficiency*,allocator<TEfficiency*> >));
         if (R__tcl1==0) {
            Error("cTagEff_vs_Njets_ streamer","Missing the TClass object for vector<TEfficiency*,allocator<TEfficiency*> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<TEfficiency*,allocator<TEfficiency*> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<TEfficiency*> > &R__stl =  udsTagEff_vs_Njets_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TEfficiency*,allocator<TEfficiency*> >));
         if (R__tcl1==0) {
            Error("udsTagEff_vs_Njets_ streamer","Missing the TClass object for vector<TEfficiency*,allocator<TEfficiency*> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<TEfficiency*,allocator<TEfficiency*> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<TEfficiency*> > &R__stl =  misTagEff_vs_Njets_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TEfficiency*,allocator<TEfficiency*> >));
         if (R__tcl1==0) {
            Error("misTagEff_vs_Njets_ streamer","Missing the TClass object for vector<TEfficiency*,allocator<TEfficiency*> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<TEfficiency*,allocator<TEfficiency*> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TGraphAsymmErrors*> &R__stl =  bTagEff_vs_Njets_TTlike_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(TGraphAsymmErrors));
         if (R__tcl1==0) {
            Error("bTagEff_vs_Njets_TTlike_ streamer","Missing the TClass object for TGraphAsymmErrors!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TGraphAsymmErrors* R__t;
            R__t = (TGraphAsymmErrors*)R__b.ReadObjectAny(R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TGraphAsymmErrors*> &R__stl =  misTagEff_vs_Njets_TTlike_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(TGraphAsymmErrors));
         if (R__tcl1==0) {
            Error("misTagEff_vs_Njets_TTlike_ streamer","Missing the TClass object for TGraphAsymmErrors!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TGraphAsymmErrors* R__t;
            R__t = (TGraphAsymmErrors*)R__b.ReadObjectAny(R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TGraphAsymmErrors*> &R__stl =  misTagEff_vs_Njets_Vlike_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(TGraphAsymmErrors));
         if (R__tcl1==0) {
            Error("misTagEff_vs_Njets_Vlike_ streamer","Missing the TClass object for TGraphAsymmErrors!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TGraphAsymmErrors* R__t;
            R__t = (TGraphAsymmErrors*)R__b.ReadObjectAny(R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNbjets_mc_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNbjets_mc_ streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNbjets_pdf_mc_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNbjets_pdf_mc_ streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNbjets_pdf_est_;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNbjets_pdf_est_ streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNjetsEstSummary;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNjetsEstSummary streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNbjetsEstSummary;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNbjetsEstSummary streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNjetsMCSummary;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNjetsMCSummary streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNbjetsMCSummary;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNbjetsMCSummary streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, VJetEstimation::IsA());
   } else {
      R__c = R__b.WriteVersion(VJetEstimation::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << MCdata_;
      {
         vector<Dataset> &R__stl =  vDatasets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Dataset>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((Dataset&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<Bool_t> &R__stl =  processMask_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Bool_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << NbOfDatasets_;
      {
         vector<Int_t> &R__stl =  iDatasetsTTLike_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Int_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Int_t> &R__stl =  iDatasetsVLike_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Int_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Int_t> &R__stl =  iDatasetsVbLike_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Int_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << NbOfBJetsBins_;
      R__b << NbOfJetsBins_;
      R__b.WriteFastArray(Njets_,NbOfJetsBins_);
      R__b << NbOfBtagWorkingPoint_;
      R__b.WriteFastArray(BtagWorkingPoint_,NbOfBtagWorkingPoint_);
      {
         vector<vector<vector<vector<Double_t> > > > &R__stl =  N_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >));
         if (R__tcl1==0) {
            Error("N_ streamer","Missing the TClass object for vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >!");
            return;
         }
            vector<vector<vector<vector<Double_t> > > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<vector<vector<Double_t> > > > &R__stl =  N_err_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >));
         if (R__tcl1==0) {
            Error("N_err_ streamer","Missing the TClass object for vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >!");
            return;
         }
            vector<vector<vector<vector<Double_t> > > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<vector<vector<Double_t> > > > &R__stl =  N_err_hi_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >));
         if (R__tcl1==0) {
            Error("N_err_hi_ streamer","Missing the TClass object for vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >!");
            return;
         }
            vector<vector<vector<vector<Double_t> > > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<vector<vector<Double_t> > > > &R__stl =  N_err_lo_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >));
         if (R__tcl1==0) {
            Error("N_err_lo_ streamer","Missing the TClass object for vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >!");
            return;
         }
            vector<vector<vector<vector<Double_t> > > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<vector<Double_t> > > &R__stl =  Nbjets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >));
         if (R__tcl1==0) {
            Error("Nbjets_ streamer","Missing the TClass object for vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >!");
            return;
         }
            vector<vector<vector<Double_t> > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<vector<Double_t> > > &R__stl =  MultiJet_Est_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >));
         if (R__tcl1==0) {
            Error("MultiJet_Est_ streamer","Missing the TClass object for vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >!");
            return;
         }
            vector<vector<vector<Double_t> > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eb_mc_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eb_mc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eb_err_mc_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eb_err_mc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eudsc_mc_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eudsc_mc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eudsc_err_mc_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eudsc_err_mc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  euds_mc_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("euds_mc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  euds_err_mc_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("euds_err_mc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eb_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eb_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eb_err_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eb_err_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eb_err_up_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eb_err_up_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eb_err_down_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eb_err_down_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eudsc_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eudsc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eudsc_err_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eudsc_err_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eudsc_err_up_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eudsc_err_up_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  eudsc_err_down_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("eudsc_err_down_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  euds_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("euds_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  euds_err_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("euds_err_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  euds_err_up_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("euds_err_up_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  euds_err_down_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("euds_err_down_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      R__b.WriteFastArray(Ntt_,NbOfJetsBins_);
      R__b.WriteFastArray(Ntt_err_,NbOfJetsBins_);
      R__b.WriteFastArray(Ntt_err_up_,NbOfJetsBins_);
      R__b.WriteFastArray(Ntt_err_down_,NbOfJetsBins_);
      R__b.WriteFastArray(Nv_,NbOfJetsBins_);
      R__b.WriteFastArray(Nv_err_,NbOfJetsBins_);
      R__b.WriteFastArray(Nv_err_up_,NbOfJetsBins_);
      R__b.WriteFastArray(Nv_err_down_,NbOfJetsBins_);
      R__b.WriteFastArray(Nvb_,NbOfJetsBins_);
      R__b.WriteFastArray(Nvb_err_,NbOfJetsBins_);
      R__b.WriteFastArray(ebq_,NbOfJetsBins_);
      R__b.WriteFastArray(e0bq_,NbOfJetsBins_);
      R__b.WriteFastArray(e1bq_,NbOfJetsBins_);
      R__b.WriteFastArray(e2bq_,NbOfJetsBins_);
      {
         vector<Double_t> &R__stl =  init_Nttlike_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  init_Nvlike_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  init_Eb_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("init_Eb_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  init_Eudsc_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("init_Eudsc_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<Double_t> > &R__stl =  init_Euds_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<double,allocator<double> >));
         if (R__tcl1==0) {
            Error("init_Euds_ streamer","Missing the TClass object for vector<double,allocator<double> >!");
            return;
         }
            vector<vector<Double_t> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<double,allocator<double> >*)&(*R__k),R__tcl1);
            }
         }
      }
      R__b.WriteFastArray(minValue_,NbOfJetsBins_);
      R__b << RescaledTTLikeEstimation;
      R__b << RescaledVLikeEstimation;
      R__b << RescaledVbLikeEstimation;
      R__b << tCanva_RescaledTTLikeEstimation;
      R__b << tCanva_RescaledVLikeEstimation;
      R__b << tCanva_RescaledVbLikeEstimation;
      {
         vector<vector<TH1F> > &R__stl =  hNbOfBGenJets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TH1F,allocator<TH1F> >));
         if (R__tcl1==0) {
            Error("hNbOfBGenJets_ streamer","Missing the TClass object for vector<TH1F,allocator<TH1F> >!");
            return;
         }
            vector<vector<TH1F> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<TH1F,allocator<TH1F> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<TH3F> &R__stl =  hNbOfBGenJets_vs_JetPt_vs_JetEta_vs_Njets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH3F>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH3F&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<vector<TH3F> > &R__stl =  hNbOfBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TH3F,allocator<TH3F> >));
         if (R__tcl1==0) {
            Error("hNbOfBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_ streamer","Missing the TClass object for vector<TH3F,allocator<TH3F> >!");
            return;
         }
            vector<vector<TH3F> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<TH3F,allocator<TH3F> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<TH3F> &R__stl =  hNbOfCGenJets_vs_JetPt_vs_JetEta_vs_Njets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH3F>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH3F&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<vector<TH3F> > &R__stl =  hNbOfCGenBJets_vs_JetPt_vs_JetEta_vs_Njets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TH3F,allocator<TH3F> >));
         if (R__tcl1==0) {
            Error("hNbOfCGenBJets_vs_JetPt_vs_JetEta_vs_Njets_ streamer","Missing the TClass object for vector<TH3F,allocator<TH3F> >!");
            return;
         }
            vector<vector<TH3F> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<TH3F,allocator<TH3F> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<TH3F> &R__stl =  hNbOfUDSGenJets_vs_JetPt_vs_JetEta_vs_Njets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH3F>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH3F&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<vector<TH3F> > &R__stl =  hNbOfUDSGenBJets_vs_JetPt_vs_JetEta_vs_Njets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TH3F,allocator<TH3F> >));
         if (R__tcl1==0) {
            Error("hNbOfUDSGenBJets_vs_JetPt_vs_JetEta_vs_Njets_ streamer","Missing the TClass object for vector<TH3F,allocator<TH3F> >!");
            return;
         }
            vector<vector<TH3F> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<TH3F,allocator<TH3F> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<TH3F> &R__stl =  hNbOfNonBGenJets_vs_JetPt_vs_JetEta_vs_Njets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH3F>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH3F&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<vector<TH3F> > &R__stl =  hNbOfNonBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TH3F,allocator<TH3F> >));
         if (R__tcl1==0) {
            Error("hNbOfNonBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_ streamer","Missing the TClass object for vector<TH3F,allocator<TH3F> >!");
            return;
         }
            vector<vector<TH3F> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<TH3F,allocator<TH3F> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<TEfficiency*> > &R__stl =  bTagEff_vs_Njets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TEfficiency*,allocator<TEfficiency*> >));
         if (R__tcl1==0) {
            Error("bTagEff_vs_Njets_ streamer","Missing the TClass object for vector<TEfficiency*,allocator<TEfficiency*> >!");
            return;
         }
            vector<vector<TEfficiency*> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<TEfficiency*,allocator<TEfficiency*> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<TEfficiency*> > &R__stl =  cTagEff_vs_Njets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TEfficiency*,allocator<TEfficiency*> >));
         if (R__tcl1==0) {
            Error("cTagEff_vs_Njets_ streamer","Missing the TClass object for vector<TEfficiency*,allocator<TEfficiency*> >!");
            return;
         }
            vector<vector<TEfficiency*> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<TEfficiency*,allocator<TEfficiency*> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<TEfficiency*> > &R__stl =  udsTagEff_vs_Njets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TEfficiency*,allocator<TEfficiency*> >));
         if (R__tcl1==0) {
            Error("udsTagEff_vs_Njets_ streamer","Missing the TClass object for vector<TEfficiency*,allocator<TEfficiency*> >!");
            return;
         }
            vector<vector<TEfficiency*> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<TEfficiency*,allocator<TEfficiency*> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<TEfficiency*> > &R__stl =  misTagEff_vs_Njets_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<TEfficiency*,allocator<TEfficiency*> >));
         if (R__tcl1==0) {
            Error("misTagEff_vs_Njets_ streamer","Missing the TClass object for vector<TEfficiency*,allocator<TEfficiency*> >!");
            return;
         }
            vector<vector<TEfficiency*> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<TEfficiency*,allocator<TEfficiency*> >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<TGraphAsymmErrors*> &R__stl =  bTagEff_vs_Njets_TTlike_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TGraphAsymmErrors*>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<TGraphAsymmErrors*> &R__stl =  misTagEff_vs_Njets_TTlike_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TGraphAsymmErrors*>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<TGraphAsymmErrors*> &R__stl =  misTagEff_vs_Njets_Vlike_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TGraphAsymmErrors*>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNbjets_mc_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNbjets_mc_ streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
            vector<vector<vector<TH1F> > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNbjets_pdf_mc_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNbjets_pdf_mc_ streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
            vector<vector<vector<TH1F> > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNbjets_pdf_est_;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNbjets_pdf_est_ streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
            vector<vector<vector<TH1F> > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNjetsEstSummary;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNjetsEstSummary streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
            vector<vector<vector<TH1F> > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNbjetsEstSummary;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNbjetsEstSummary streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
            vector<vector<vector<TH1F> > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNjetsMCSummary;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNjetsMCSummary streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
            vector<vector<vector<TH1F> > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<vector<vector<TH1F> > > &R__stl =  hNbjetsMCSummary;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >));
         if (R__tcl1==0) {
            Error("hNbjetsMCSummary streamer","Missing the TClass object for vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >!");
            return;
         }
            vector<vector<vector<TH1F> > >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >*)&(*R__k),R__tcl1);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void VJetEstimation::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class VJetEstimation.
      TClass *R__cl = ::VJetEstimation::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MCdata_", &MCdata_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vDatasets_", (void*)&vDatasets_);
      R__insp.InspectMember("vector<Dataset>", (void*)&vDatasets_, "vDatasets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "processMask_", (void*)&processMask_);
      R__insp.InspectMember("vector<Bool_t>", (void*)&processMask_, "processMask_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbOfDatasets_", &NbOfDatasets_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iDatasetsTTLike_", (void*)&iDatasetsTTLike_);
      R__insp.InspectMember("vector<Int_t>", (void*)&iDatasetsTTLike_, "iDatasetsTTLike_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iDatasetsVLike_", (void*)&iDatasetsVLike_);
      R__insp.InspectMember("vector<Int_t>", (void*)&iDatasetsVLike_, "iDatasetsVLike_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iDatasetsVbLike_", (void*)&iDatasetsVbLike_);
      R__insp.InspectMember("vector<Int_t>", (void*)&iDatasetsVbLike_, "iDatasetsVbLike_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbOfBJetsBins_", &NbOfBJetsBins_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbOfJetsBins_", &NbOfJetsBins_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Njets_", &Njets_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbOfBtagWorkingPoint_", &NbOfBtagWorkingPoint_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BtagWorkingPoint_", &BtagWorkingPoint_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N_", (void*)&N_);
      R__insp.InspectMember("vector<vector<vector<vector<Double_t> > > >", (void*)&N_, "N_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N_err_", (void*)&N_err_);
      R__insp.InspectMember("vector<vector<vector<vector<Double_t> > > >", (void*)&N_err_, "N_err_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N_err_hi_", (void*)&N_err_hi_);
      R__insp.InspectMember("vector<vector<vector<vector<Double_t> > > >", (void*)&N_err_hi_, "N_err_hi_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N_err_lo_", (void*)&N_err_lo_);
      R__insp.InspectMember("vector<vector<vector<vector<Double_t> > > >", (void*)&N_err_lo_, "N_err_lo_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nbjets_", (void*)&Nbjets_);
      R__insp.InspectMember("vector<vector<vector<Double_t> > >", (void*)&Nbjets_, "Nbjets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MultiJet_Est_", (void*)&MultiJet_Est_);
      R__insp.InspectMember("vector<vector<vector<Double_t> > >", (void*)&MultiJet_Est_, "MultiJet_Est_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eb_mc_", (void*)&eb_mc_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&eb_mc_, "eb_mc_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eb_err_mc_", (void*)&eb_err_mc_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&eb_err_mc_, "eb_err_mc_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eudsc_mc_", (void*)&eudsc_mc_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&eudsc_mc_, "eudsc_mc_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eudsc_err_mc_", (void*)&eudsc_err_mc_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&eudsc_err_mc_, "eudsc_err_mc_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "euds_mc_", (void*)&euds_mc_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&euds_mc_, "euds_mc_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "euds_err_mc_", (void*)&euds_err_mc_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&euds_err_mc_, "euds_err_mc_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eb_", (void*)&eb_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&eb_, "eb_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eb_err_", (void*)&eb_err_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&eb_err_, "eb_err_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eb_err_up_", (void*)&eb_err_up_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&eb_err_up_, "eb_err_up_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eb_err_down_", (void*)&eb_err_down_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&eb_err_down_, "eb_err_down_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eudsc_", (void*)&eudsc_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&eudsc_, "eudsc_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eudsc_err_", (void*)&eudsc_err_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&eudsc_err_, "eudsc_err_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eudsc_err_up_", (void*)&eudsc_err_up_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&eudsc_err_up_, "eudsc_err_up_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eudsc_err_down_", (void*)&eudsc_err_down_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&eudsc_err_down_, "eudsc_err_down_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "euds_", (void*)&euds_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&euds_, "euds_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "euds_err_", (void*)&euds_err_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&euds_err_, "euds_err_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "euds_err_up_", (void*)&euds_err_up_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&euds_err_up_, "euds_err_up_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "euds_err_down_", (void*)&euds_err_down_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&euds_err_down_, "euds_err_down_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Ntt_", &Ntt_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Ntt_err_", &Ntt_err_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Ntt_err_up_", &Ntt_err_up_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Ntt_err_down_", &Ntt_err_down_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Nv_", &Nv_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Nv_err_", &Nv_err_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Nv_err_up_", &Nv_err_up_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Nv_err_down_", &Nv_err_down_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Nvb_", &Nvb_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Nvb_err_", &Nvb_err_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ebq_", &ebq_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*e0bq_", &e0bq_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*e1bq_", &e1bq_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*e2bq_", &e2bq_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "init_Nttlike_", (void*)&init_Nttlike_);
      R__insp.InspectMember("vector<Double_t>", (void*)&init_Nttlike_, "init_Nttlike_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "init_Nvlike_", (void*)&init_Nvlike_);
      R__insp.InspectMember("vector<Double_t>", (void*)&init_Nvlike_, "init_Nvlike_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "init_Eb_", (void*)&init_Eb_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&init_Eb_, "init_Eb_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "init_Eudsc_", (void*)&init_Eudsc_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&init_Eudsc_, "init_Eudsc_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "init_Euds_", (void*)&init_Euds_);
      R__insp.InspectMember("vector<vector<Double_t> >", (void*)&init_Euds_, "init_Euds_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*minValue_", &minValue_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RescaledTTLikeEstimation", &RescaledTTLikeEstimation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RescaledVLikeEstimation", &RescaledVLikeEstimation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RescaledVbLikeEstimation", &RescaledVbLikeEstimation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tCanva_RescaledTTLikeEstimation", &tCanva_RescaledTTLikeEstimation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tCanva_RescaledVLikeEstimation", &tCanva_RescaledVLikeEstimation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tCanva_RescaledVbLikeEstimation", &tCanva_RescaledVbLikeEstimation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbOfBGenJets_", (void*)&hNbOfBGenJets_);
      R__insp.InspectMember("vector<vector<TH1F> >", (void*)&hNbOfBGenJets_, "hNbOfBGenJets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbOfBGenJets_vs_JetPt_vs_JetEta_vs_Njets_", (void*)&hNbOfBGenJets_vs_JetPt_vs_JetEta_vs_Njets_);
      R__insp.InspectMember("vector<TH3F>", (void*)&hNbOfBGenJets_vs_JetPt_vs_JetEta_vs_Njets_, "hNbOfBGenJets_vs_JetPt_vs_JetEta_vs_Njets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbOfBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_", (void*)&hNbOfBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_);
      R__insp.InspectMember("vector<vector<TH3F> >", (void*)&hNbOfBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_, "hNbOfBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbOfCGenJets_vs_JetPt_vs_JetEta_vs_Njets_", (void*)&hNbOfCGenJets_vs_JetPt_vs_JetEta_vs_Njets_);
      R__insp.InspectMember("vector<TH3F>", (void*)&hNbOfCGenJets_vs_JetPt_vs_JetEta_vs_Njets_, "hNbOfCGenJets_vs_JetPt_vs_JetEta_vs_Njets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbOfCGenBJets_vs_JetPt_vs_JetEta_vs_Njets_", (void*)&hNbOfCGenBJets_vs_JetPt_vs_JetEta_vs_Njets_);
      R__insp.InspectMember("vector<vector<TH3F> >", (void*)&hNbOfCGenBJets_vs_JetPt_vs_JetEta_vs_Njets_, "hNbOfCGenBJets_vs_JetPt_vs_JetEta_vs_Njets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbOfUDSGenJets_vs_JetPt_vs_JetEta_vs_Njets_", (void*)&hNbOfUDSGenJets_vs_JetPt_vs_JetEta_vs_Njets_);
      R__insp.InspectMember("vector<TH3F>", (void*)&hNbOfUDSGenJets_vs_JetPt_vs_JetEta_vs_Njets_, "hNbOfUDSGenJets_vs_JetPt_vs_JetEta_vs_Njets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbOfUDSGenBJets_vs_JetPt_vs_JetEta_vs_Njets_", (void*)&hNbOfUDSGenBJets_vs_JetPt_vs_JetEta_vs_Njets_);
      R__insp.InspectMember("vector<vector<TH3F> >", (void*)&hNbOfUDSGenBJets_vs_JetPt_vs_JetEta_vs_Njets_, "hNbOfUDSGenBJets_vs_JetPt_vs_JetEta_vs_Njets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbOfNonBGenJets_vs_JetPt_vs_JetEta_vs_Njets_", (void*)&hNbOfNonBGenJets_vs_JetPt_vs_JetEta_vs_Njets_);
      R__insp.InspectMember("vector<TH3F>", (void*)&hNbOfNonBGenJets_vs_JetPt_vs_JetEta_vs_Njets_, "hNbOfNonBGenJets_vs_JetPt_vs_JetEta_vs_Njets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbOfNonBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_", (void*)&hNbOfNonBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_);
      R__insp.InspectMember("vector<vector<TH3F> >", (void*)&hNbOfNonBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_, "hNbOfNonBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bTagEff_vs_Njets_", (void*)&bTagEff_vs_Njets_);
      R__insp.InspectMember("vector<vector<TEfficiency*> >", (void*)&bTagEff_vs_Njets_, "bTagEff_vs_Njets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cTagEff_vs_Njets_", (void*)&cTagEff_vs_Njets_);
      R__insp.InspectMember("vector<vector<TEfficiency*> >", (void*)&cTagEff_vs_Njets_, "cTagEff_vs_Njets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "udsTagEff_vs_Njets_", (void*)&udsTagEff_vs_Njets_);
      R__insp.InspectMember("vector<vector<TEfficiency*> >", (void*)&udsTagEff_vs_Njets_, "udsTagEff_vs_Njets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "misTagEff_vs_Njets_", (void*)&misTagEff_vs_Njets_);
      R__insp.InspectMember("vector<vector<TEfficiency*> >", (void*)&misTagEff_vs_Njets_, "misTagEff_vs_Njets_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bTagEff_vs_Njets_TTlike_", (void*)&bTagEff_vs_Njets_TTlike_);
      R__insp.InspectMember("vector<TGraphAsymmErrors*>", (void*)&bTagEff_vs_Njets_TTlike_, "bTagEff_vs_Njets_TTlike_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "misTagEff_vs_Njets_TTlike_", (void*)&misTagEff_vs_Njets_TTlike_);
      R__insp.InspectMember("vector<TGraphAsymmErrors*>", (void*)&misTagEff_vs_Njets_TTlike_, "misTagEff_vs_Njets_TTlike_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "misTagEff_vs_Njets_Vlike_", (void*)&misTagEff_vs_Njets_Vlike_);
      R__insp.InspectMember("vector<TGraphAsymmErrors*>", (void*)&misTagEff_vs_Njets_Vlike_, "misTagEff_vs_Njets_Vlike_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbjets_mc_", (void*)&hNbjets_mc_);
      R__insp.InspectMember("vector<vector<vector<TH1F> > >", (void*)&hNbjets_mc_, "hNbjets_mc_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbjets_pdf_mc_", (void*)&hNbjets_pdf_mc_);
      R__insp.InspectMember("vector<vector<vector<TH1F> > >", (void*)&hNbjets_pdf_mc_, "hNbjets_pdf_mc_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbjets_pdf_est_", (void*)&hNbjets_pdf_est_);
      R__insp.InspectMember("vector<vector<vector<TH1F> > >", (void*)&hNbjets_pdf_est_, "hNbjets_pdf_est_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNjetsEstSummary", (void*)&hNjetsEstSummary);
      R__insp.InspectMember("vector<vector<vector<TH1F> > >", (void*)&hNjetsEstSummary, "hNjetsEstSummary.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbjetsEstSummary", (void*)&hNbjetsEstSummary);
      R__insp.InspectMember("vector<vector<vector<TH1F> > >", (void*)&hNbjetsEstSummary, "hNbjetsEstSummary.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNjetsMCSummary", (void*)&hNjetsMCSummary);
      R__insp.InspectMember("vector<vector<vector<TH1F> > >", (void*)&hNjetsMCSummary, "hNjetsMCSummary.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNbjetsMCSummary", (void*)&hNbjetsMCSummary);
      R__insp.InspectMember("vector<vector<vector<TH1F> > >", (void*)&hNbjetsMCSummary, "hNbjetsMCSummary.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MyLeg", &MyLeg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hsNbjets_MC", (void*)&hsNbjets_MC);
      R__insp.InspectMember("vector<vector<THStack*> >", (void*)&hsNbjets_MC, "hsNbjets_MC.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hsNbjets_Est", (void*)&hsNbjets_Est);
      R__insp.InspectMember("vector<vector<THStack*> >", (void*)&hsNbjets_Est, "hsNbjets_Est.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tCanva_Njets_Summary", (void*)&tCanva_Njets_Summary);
      R__insp.InspectMember("vector<vector<TCanvas*> >", (void*)&tCanva_Njets_Summary, "tCanva_Njets_Summary.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tCanva_Nbjets_Summary", (void*)&tCanva_Nbjets_Summary);
      R__insp.InspectMember("vector<vector<TCanvas*> >", (void*)&tCanva_Nbjets_Summary, "tCanva_Nbjets_Summary.", true);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_VJetEstimation(void *p) {
      return  p ? new(p) ::VJetEstimation : new ::VJetEstimation;
   }
   static void *newArray_VJetEstimation(Long_t nElements, void *p) {
      return p ? new(p) ::VJetEstimation[nElements] : new ::VJetEstimation[nElements];
   }
   // Wrapper around operator delete
   static void delete_VJetEstimation(void *p) {
      delete ((::VJetEstimation*)p);
   }
   static void deleteArray_VJetEstimation(void *p) {
      delete [] ((::VJetEstimation*)p);
   }
   static void destruct_VJetEstimation(void *p) {
      typedef ::VJetEstimation current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_VJetEstimation(TBuffer &buf, void *obj) {
      ((::VJetEstimation*)obj)->::VJetEstimation::Streamer(buf);
   }
} // end of namespace ROOT for class ::VJetEstimation

      namespace TopTree {
//______________________________________________________________________________
void triggeredObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class TopTree::triggeredObject.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::TopTree::triggeredObject thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> id;
      R__b >> pt;
      R__b >> eta;
      R__b >> phi;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << id;
      R__b << pt;
      R__b << eta;
      R__b << phi;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace TopTree
//______________________________________________________________________________
      namespace TopTree {
void triggeredObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TopTree::triggeredObject.
      TClass *R__cl = ::TopTree::triggeredObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
}

} // namespace TopTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_TopTreecLcLtriggeredObject(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TopTree::triggeredObject : new ::TopTree::triggeredObject;
   }
   static void *newArray_TopTreecLcLtriggeredObject(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TopTree::triggeredObject[nElements] : new ::TopTree::triggeredObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_TopTreecLcLtriggeredObject(void *p) {
      delete ((::TopTree::triggeredObject*)p);
   }
   static void deleteArray_TopTreecLcLtriggeredObject(void *p) {
      delete [] ((::TopTree::triggeredObject*)p);
   }
   static void destruct_TopTreecLcLtriggeredObject(void *p) {
      typedef ::TopTree::triggeredObject current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TopTreecLcLtriggeredObject(TBuffer &buf, void *obj) {
      ((::TopTree::triggeredObject*)obj)->::TopTree::triggeredObject::Streamer(buf);
   }
} // end of namespace ROOT for class ::TopTree::triggeredObject

namespace ROOT {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,int>

namespace ROOT {
   void maplEstringcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOfloatgR_Dictionary();
   static void *new_maplEstringcOfloatgR(void *p = 0);
   static void *newArray_maplEstringcOfloatgR(Long_t size, void *p);
   static void delete_maplEstringcOfloatgR(void *p);
   static void deleteArray_maplEstringcOfloatgR(void *p);
   static void destruct_maplEstringcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,float>*)
   {
      map<string,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,float>", -2, "map.dll", 0,
                  typeid(map<string,float>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,float>) );
      instance.SetNew(&new_maplEstringcOfloatgR);
      instance.SetNewArray(&newArray_maplEstringcOfloatgR);
      instance.SetDelete(&delete_maplEstringcOfloatgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOfloatgR);
      instance.SetDestructor(&destruct_maplEstringcOfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,float> : new map<string,float>;
   }
   static void *newArray_maplEstringcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,float>[nElements] : new map<string,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOfloatgR(void *p) {
      delete ((map<string,float>*)p);
   }
   static void deleteArray_maplEstringcOfloatgR(void *p) {
      delete [] ((map<string,float>*)p);
   }
   static void destruct_maplEstringcOfloatgR(void *p) {
      typedef map<string,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,float>

namespace ROOT {
   void maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR_Dictionary();
   static void *new_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR(void *p = 0);
   static void *newArray_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR(Long_t size, void *p);
   static void delete_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR(void *p);
   static void deleteArray_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR(void *p);
   static void destruct_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,vector<TopTree::triggeredObject> >*)
   {
      map<string,vector<TopTree::triggeredObject> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,vector<TopTree::triggeredObject> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,vector<TopTree::triggeredObject> >", -2, "prec_stl/map", 63,
                  typeid(map<string,vector<TopTree::triggeredObject> >), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,vector<TopTree::triggeredObject> >) );
      instance.SetNew(&new_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR);
      instance.SetNewArray(&newArray_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR);
      instance.SetDelete(&delete_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR);
      instance.SetDestructor(&destruct_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,vector<TopTree::triggeredObject> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,vector<TopTree::triggeredObject> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,vector<TopTree::triggeredObject> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<TopTree::triggeredObject> > : new map<string,vector<TopTree::triggeredObject> >;
   }
   static void *newArray_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<TopTree::triggeredObject> >[nElements] : new map<string,vector<TopTree::triggeredObject> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR(void *p) {
      delete ((map<string,vector<TopTree::triggeredObject> >*)p);
   }
   static void deleteArray_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR(void *p) {
      delete [] ((map<string,vector<TopTree::triggeredObject> >*)p);
   }
   static void destruct_maplEstringcOvectorlETopTreecLcLtriggeredObjectgRsPgR(void *p) {
      typedef map<string,vector<TopTree::triggeredObject> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,vector<TopTree::triggeredObject> >

namespace ROOT {
   void vectorlEDatasetgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDatasetgR_Dictionary();
   static void *new_vectorlEDatasetgR(void *p = 0);
   static void *newArray_vectorlEDatasetgR(Long_t size, void *p);
   static void delete_vectorlEDatasetgR(void *p);
   static void deleteArray_vectorlEDatasetgR(void *p);
   static void destruct_vectorlEDatasetgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<Dataset>*)
   {
      vector<Dataset> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Dataset>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Dataset>", -2, "prec_stl/vector", 49,
                  typeid(vector<Dataset>), DefineBehavior(ptr, ptr),
                  0, &vectorlEDatasetgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Dataset>) );
      instance.SetNew(&new_vectorlEDatasetgR);
      instance.SetNewArray(&newArray_vectorlEDatasetgR);
      instance.SetDelete(&delete_vectorlEDatasetgR);
      instance.SetDeleteArray(&deleteArray_vectorlEDatasetgR);
      instance.SetDestructor(&destruct_vectorlEDatasetgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<Dataset> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Dataset>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDatasetgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<Dataset>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEDatasetgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Dataset> : new vector<Dataset>;
   }
   static void *newArray_vectorlEDatasetgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Dataset>[nElements] : new vector<Dataset>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDatasetgR(void *p) {
      delete ((vector<Dataset>*)p);
   }
   static void deleteArray_vectorlEDatasetgR(void *p) {
      delete [] ((vector<Dataset>*)p);
   }
   static void destruct_vectorlEDatasetgR(void *p) {
      typedef vector<Dataset> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<Dataset>

namespace ROOT {
   void vectorlETEfficiencymUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETEfficiencymUgR_Dictionary();
   static void *new_vectorlETEfficiencymUgR(void *p = 0);
   static void *newArray_vectorlETEfficiencymUgR(Long_t size, void *p);
   static void delete_vectorlETEfficiencymUgR(void *p);
   static void deleteArray_vectorlETEfficiencymUgR(void *p);
   static void destruct_vectorlETEfficiencymUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TEfficiency*>*)
   {
      vector<TEfficiency*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TEfficiency*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TEfficiency*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TEfficiency*>), DefineBehavior(ptr, ptr),
                  0, &vectorlETEfficiencymUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TEfficiency*>) );
      instance.SetNew(&new_vectorlETEfficiencymUgR);
      instance.SetNewArray(&newArray_vectorlETEfficiencymUgR);
      instance.SetDelete(&delete_vectorlETEfficiencymUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETEfficiencymUgR);
      instance.SetDestructor(&destruct_vectorlETEfficiencymUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TEfficiency*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TEfficiency*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETEfficiencymUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TEfficiency*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETEfficiencymUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TEfficiency*> : new vector<TEfficiency*>;
   }
   static void *newArray_vectorlETEfficiencymUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TEfficiency*>[nElements] : new vector<TEfficiency*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETEfficiencymUgR(void *p) {
      delete ((vector<TEfficiency*>*)p);
   }
   static void deleteArray_vectorlETEfficiencymUgR(void *p) {
      delete [] ((vector<TEfficiency*>*)p);
   }
   static void destruct_vectorlETEfficiencymUgR(void *p) {
      typedef vector<TEfficiency*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TEfficiency*>

namespace ROOT {
   void vectorlETGraphAsymmErrorsmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETGraphAsymmErrorsmUgR_Dictionary();
   static void *new_vectorlETGraphAsymmErrorsmUgR(void *p = 0);
   static void *newArray_vectorlETGraphAsymmErrorsmUgR(Long_t size, void *p);
   static void delete_vectorlETGraphAsymmErrorsmUgR(void *p);
   static void deleteArray_vectorlETGraphAsymmErrorsmUgR(void *p);
   static void destruct_vectorlETGraphAsymmErrorsmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TGraphAsymmErrors*>*)
   {
      vector<TGraphAsymmErrors*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TGraphAsymmErrors*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TGraphAsymmErrors*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TGraphAsymmErrors*>), DefineBehavior(ptr, ptr),
                  0, &vectorlETGraphAsymmErrorsmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TGraphAsymmErrors*>) );
      instance.SetNew(&new_vectorlETGraphAsymmErrorsmUgR);
      instance.SetNewArray(&newArray_vectorlETGraphAsymmErrorsmUgR);
      instance.SetDelete(&delete_vectorlETGraphAsymmErrorsmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETGraphAsymmErrorsmUgR);
      instance.SetDestructor(&destruct_vectorlETGraphAsymmErrorsmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TGraphAsymmErrors*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TGraphAsymmErrors*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETGraphAsymmErrorsmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TGraphAsymmErrors*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETGraphAsymmErrorsmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TGraphAsymmErrors*> : new vector<TGraphAsymmErrors*>;
   }
   static void *newArray_vectorlETGraphAsymmErrorsmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TGraphAsymmErrors*>[nElements] : new vector<TGraphAsymmErrors*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETGraphAsymmErrorsmUgR(void *p) {
      delete ((vector<TGraphAsymmErrors*>*)p);
   }
   static void deleteArray_vectorlETGraphAsymmErrorsmUgR(void *p) {
      delete [] ((vector<TGraphAsymmErrors*>*)p);
   }
   static void destruct_vectorlETGraphAsymmErrorsmUgR(void *p) {
      typedef vector<TGraphAsymmErrors*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TGraphAsymmErrors*>

namespace ROOT {
   void vectorlETH1FgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETH1FgR_Dictionary();
   static void *new_vectorlETH1FgR(void *p = 0);
   static void *newArray_vectorlETH1FgR(Long_t size, void *p);
   static void delete_vectorlETH1FgR(void *p);
   static void deleteArray_vectorlETH1FgR(void *p);
   static void destruct_vectorlETH1FgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TH1F>*)
   {
      vector<TH1F> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TH1F>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TH1F>", -2, "prec_stl/vector", 49,
                  typeid(vector<TH1F>), DefineBehavior(ptr, ptr),
                  0, &vectorlETH1FgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TH1F>) );
      instance.SetNew(&new_vectorlETH1FgR);
      instance.SetNewArray(&newArray_vectorlETH1FgR);
      instance.SetDelete(&delete_vectorlETH1FgR);
      instance.SetDeleteArray(&deleteArray_vectorlETH1FgR);
      instance.SetDestructor(&destruct_vectorlETH1FgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TH1F> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TH1F>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETH1FgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TH1F>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETH1FgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH1F> : new vector<TH1F>;
   }
   static void *newArray_vectorlETH1FgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH1F>[nElements] : new vector<TH1F>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETH1FgR(void *p) {
      delete ((vector<TH1F>*)p);
   }
   static void deleteArray_vectorlETH1FgR(void *p) {
      delete [] ((vector<TH1F>*)p);
   }
   static void destruct_vectorlETH1FgR(void *p) {
      typedef vector<TH1F> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TH1F>

namespace ROOT {
   void vectorlETH3FgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETH3FgR_Dictionary();
   static void *new_vectorlETH3FgR(void *p = 0);
   static void *newArray_vectorlETH3FgR(Long_t size, void *p);
   static void delete_vectorlETH3FgR(void *p);
   static void deleteArray_vectorlETH3FgR(void *p);
   static void destruct_vectorlETH3FgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TH3F>*)
   {
      vector<TH3F> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TH3F>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TH3F>", -2, "prec_stl/vector", 49,
                  typeid(vector<TH3F>), DefineBehavior(ptr, ptr),
                  0, &vectorlETH3FgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TH3F>) );
      instance.SetNew(&new_vectorlETH3FgR);
      instance.SetNewArray(&newArray_vectorlETH3FgR);
      instance.SetDelete(&delete_vectorlETH3FgR);
      instance.SetDeleteArray(&deleteArray_vectorlETH3FgR);
      instance.SetDestructor(&destruct_vectorlETH3FgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TH3F> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TH3F>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETH3FgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TH3F>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETH3FgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH3F> : new vector<TH3F>;
   }
   static void *newArray_vectorlETH3FgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH3F>[nElements] : new vector<TH3F>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETH3FgR(void *p) {
      delete ((vector<TH3F>*)p);
   }
   static void deleteArray_vectorlETH3FgR(void *p) {
      delete [] ((vector<TH3F>*)p);
   }
   static void destruct_vectorlETH3FgR(void *p) {
      typedef vector<TH3F> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TH3F>

namespace ROOT {
   void vectorlETLorentzVectorgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETLorentzVectorgR_Dictionary();
   static void *new_vectorlETLorentzVectorgR(void *p = 0);
   static void *newArray_vectorlETLorentzVectorgR(Long_t size, void *p);
   static void delete_vectorlETLorentzVectorgR(void *p);
   static void deleteArray_vectorlETLorentzVectorgR(void *p);
   static void destruct_vectorlETLorentzVectorgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TLorentzVector>*)
   {
      vector<TLorentzVector> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TLorentzVector>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TLorentzVector>", -2, "prec_stl/vector", 49,
                  typeid(vector<TLorentzVector>), DefineBehavior(ptr, ptr),
                  0, &vectorlETLorentzVectorgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TLorentzVector>) );
      instance.SetNew(&new_vectorlETLorentzVectorgR);
      instance.SetNewArray(&newArray_vectorlETLorentzVectorgR);
      instance.SetDelete(&delete_vectorlETLorentzVectorgR);
      instance.SetDeleteArray(&deleteArray_vectorlETLorentzVectorgR);
      instance.SetDestructor(&destruct_vectorlETLorentzVectorgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TLorentzVector> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TLorentzVector>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETLorentzVectorgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TLorentzVector>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETLorentzVectorgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector> : new vector<TLorentzVector>;
   }
   static void *newArray_vectorlETLorentzVectorgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector>[nElements] : new vector<TLorentzVector>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETLorentzVectorgR(void *p) {
      delete ((vector<TLorentzVector>*)p);
   }
   static void deleteArray_vectorlETLorentzVectorgR(void *p) {
      delete [] ((vector<TLorentzVector>*)p);
   }
   static void destruct_vectorlETLorentzVectorgR(void *p) {
      typedef vector<TLorentzVector> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TLorentzVector>

namespace ROOT {
   void vectorlETopTreecLcLTRootGenTopgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETopTreecLcLTRootGenTopgR_Dictionary();
   static void *new_vectorlETopTreecLcLTRootGenTopgR(void *p = 0);
   static void *newArray_vectorlETopTreecLcLTRootGenTopgR(Long_t size, void *p);
   static void delete_vectorlETopTreecLcLTRootGenTopgR(void *p);
   static void deleteArray_vectorlETopTreecLcLTRootGenTopgR(void *p);
   static void destruct_vectorlETopTreecLcLTRootGenTopgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TopTree::TRootGenTop>*)
   {
      vector<TopTree::TRootGenTop> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TopTree::TRootGenTop>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TopTree::TRootGenTop>", -2, "prec_stl/vector", 49,
                  typeid(vector<TopTree::TRootGenTop>), DefineBehavior(ptr, ptr),
                  0, &vectorlETopTreecLcLTRootGenTopgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TopTree::TRootGenTop>) );
      instance.SetNew(&new_vectorlETopTreecLcLTRootGenTopgR);
      instance.SetNewArray(&newArray_vectorlETopTreecLcLTRootGenTopgR);
      instance.SetDelete(&delete_vectorlETopTreecLcLTRootGenTopgR);
      instance.SetDeleteArray(&deleteArray_vectorlETopTreecLcLTRootGenTopgR);
      instance.SetDestructor(&destruct_vectorlETopTreecLcLTRootGenTopgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TopTree::TRootGenTop> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TopTree::TRootGenTop>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETopTreecLcLTRootGenTopgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TopTree::TRootGenTop>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETopTreecLcLTRootGenTopgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TopTree::TRootGenTop> : new vector<TopTree::TRootGenTop>;
   }
   static void *newArray_vectorlETopTreecLcLTRootGenTopgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TopTree::TRootGenTop>[nElements] : new vector<TopTree::TRootGenTop>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETopTreecLcLTRootGenTopgR(void *p) {
      delete ((vector<TopTree::TRootGenTop>*)p);
   }
   static void deleteArray_vectorlETopTreecLcLTRootGenTopgR(void *p) {
      delete [] ((vector<TopTree::TRootGenTop>*)p);
   }
   static void destruct_vectorlETopTreecLcLTRootGenTopgR(void *p) {
      typedef vector<TopTree::TRootGenTop> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TopTree::TRootGenTop>

namespace ROOT {
   void vectorlETopTreecLcLTRootHLTInfogR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETopTreecLcLTRootHLTInfogR_Dictionary();
   static void *new_vectorlETopTreecLcLTRootHLTInfogR(void *p = 0);
   static void *newArray_vectorlETopTreecLcLTRootHLTInfogR(Long_t size, void *p);
   static void delete_vectorlETopTreecLcLTRootHLTInfogR(void *p);
   static void deleteArray_vectorlETopTreecLcLTRootHLTInfogR(void *p);
   static void destruct_vectorlETopTreecLcLTRootHLTInfogR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TopTree::TRootHLTInfo>*)
   {
      vector<TopTree::TRootHLTInfo> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TopTree::TRootHLTInfo>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TopTree::TRootHLTInfo>", -2, "prec_stl/vector", 49,
                  typeid(vector<TopTree::TRootHLTInfo>), DefineBehavior(ptr, ptr),
                  0, &vectorlETopTreecLcLTRootHLTInfogR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TopTree::TRootHLTInfo>) );
      instance.SetNew(&new_vectorlETopTreecLcLTRootHLTInfogR);
      instance.SetNewArray(&newArray_vectorlETopTreecLcLTRootHLTInfogR);
      instance.SetDelete(&delete_vectorlETopTreecLcLTRootHLTInfogR);
      instance.SetDeleteArray(&deleteArray_vectorlETopTreecLcLTRootHLTInfogR);
      instance.SetDestructor(&destruct_vectorlETopTreecLcLTRootHLTInfogR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TopTree::TRootHLTInfo> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TopTree::TRootHLTInfo>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETopTreecLcLTRootHLTInfogR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TopTree::TRootHLTInfo>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETopTreecLcLTRootHLTInfogR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TopTree::TRootHLTInfo> : new vector<TopTree::TRootHLTInfo>;
   }
   static void *newArray_vectorlETopTreecLcLTRootHLTInfogR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TopTree::TRootHLTInfo>[nElements] : new vector<TopTree::TRootHLTInfo>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETopTreecLcLTRootHLTInfogR(void *p) {
      delete ((vector<TopTree::TRootHLTInfo>*)p);
   }
   static void deleteArray_vectorlETopTreecLcLTRootHLTInfogR(void *p) {
      delete [] ((vector<TopTree::TRootHLTInfo>*)p);
   }
   static void destruct_vectorlETopTreecLcLTRootHLTInfogR(void *p) {
      typedef vector<TopTree::TRootHLTInfo> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TopTree::TRootHLTInfo>

namespace ROOT {
   void vectorlETopTreecLcLTRootMCParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETopTreecLcLTRootMCParticlegR_Dictionary();
   static void *new_vectorlETopTreecLcLTRootMCParticlegR(void *p = 0);
   static void *newArray_vectorlETopTreecLcLTRootMCParticlegR(Long_t size, void *p);
   static void delete_vectorlETopTreecLcLTRootMCParticlegR(void *p);
   static void deleteArray_vectorlETopTreecLcLTRootMCParticlegR(void *p);
   static void destruct_vectorlETopTreecLcLTRootMCParticlegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TopTree::TRootMCParticle>*)
   {
      vector<TopTree::TRootMCParticle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TopTree::TRootMCParticle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TopTree::TRootMCParticle>", -2, "prec_stl/vector", 49,
                  typeid(vector<TopTree::TRootMCParticle>), DefineBehavior(ptr, ptr),
                  0, &vectorlETopTreecLcLTRootMCParticlegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TopTree::TRootMCParticle>) );
      instance.SetNew(&new_vectorlETopTreecLcLTRootMCParticlegR);
      instance.SetNewArray(&newArray_vectorlETopTreecLcLTRootMCParticlegR);
      instance.SetDelete(&delete_vectorlETopTreecLcLTRootMCParticlegR);
      instance.SetDeleteArray(&deleteArray_vectorlETopTreecLcLTRootMCParticlegR);
      instance.SetDestructor(&destruct_vectorlETopTreecLcLTRootMCParticlegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TopTree::TRootMCParticle> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TopTree::TRootMCParticle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETopTreecLcLTRootMCParticlegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TopTree::TRootMCParticle>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETopTreecLcLTRootMCParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TopTree::TRootMCParticle> : new vector<TopTree::TRootMCParticle>;
   }
   static void *newArray_vectorlETopTreecLcLTRootMCParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TopTree::TRootMCParticle>[nElements] : new vector<TopTree::TRootMCParticle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETopTreecLcLTRootMCParticlegR(void *p) {
      delete ((vector<TopTree::TRootMCParticle>*)p);
   }
   static void deleteArray_vectorlETopTreecLcLTRootMCParticlegR(void *p) {
      delete [] ((vector<TopTree::TRootMCParticle>*)p);
   }
   static void destruct_vectorlETopTreecLcLTRootMCParticlegR(void *p) {
      typedef vector<TopTree::TRootMCParticle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TopTree::TRootMCParticle>

namespace ROOT {
   void vectorlETopTreecLcLtriggeredObjectgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETopTreecLcLtriggeredObjectgR_Dictionary();
   static void *new_vectorlETopTreecLcLtriggeredObjectgR(void *p = 0);
   static void *newArray_vectorlETopTreecLcLtriggeredObjectgR(Long_t size, void *p);
   static void delete_vectorlETopTreecLcLtriggeredObjectgR(void *p);
   static void deleteArray_vectorlETopTreecLcLtriggeredObjectgR(void *p);
   static void destruct_vectorlETopTreecLcLtriggeredObjectgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TopTree::triggeredObject>*)
   {
      vector<TopTree::triggeredObject> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TopTree::triggeredObject>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TopTree::triggeredObject>", -2, "prec_stl/vector", 49,
                  typeid(vector<TopTree::triggeredObject>), DefineBehavior(ptr, ptr),
                  0, &vectorlETopTreecLcLtriggeredObjectgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TopTree::triggeredObject>) );
      instance.SetNew(&new_vectorlETopTreecLcLtriggeredObjectgR);
      instance.SetNewArray(&newArray_vectorlETopTreecLcLtriggeredObjectgR);
      instance.SetDelete(&delete_vectorlETopTreecLcLtriggeredObjectgR);
      instance.SetDeleteArray(&deleteArray_vectorlETopTreecLcLtriggeredObjectgR);
      instance.SetDestructor(&destruct_vectorlETopTreecLcLtriggeredObjectgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TopTree::triggeredObject> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TopTree::triggeredObject>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETopTreecLcLtriggeredObjectgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TopTree::triggeredObject>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETopTreecLcLtriggeredObjectgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TopTree::triggeredObject> : new vector<TopTree::triggeredObject>;
   }
   static void *newArray_vectorlETopTreecLcLtriggeredObjectgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TopTree::triggeredObject>[nElements] : new vector<TopTree::triggeredObject>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETopTreecLcLtriggeredObjectgR(void *p) {
      delete ((vector<TopTree::triggeredObject>*)p);
   }
   static void deleteArray_vectorlETopTreecLcLtriggeredObjectgR(void *p) {
      delete [] ((vector<TopTree::triggeredObject>*)p);
   }
   static void destruct_vectorlETopTreecLcLtriggeredObjectgR(void *p) {
      typedef vector<TopTree::triggeredObject> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TopTree::triggeredObject>

namespace ROOT {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<bool>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEpairlEfloatcOfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEfloatcOfloatgRsPgR_Dictionary();
   static void *new_vectorlEpairlEfloatcOfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEfloatcOfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEfloatcOfloatgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEfloatcOfloatgRsPgR(void *p);
   static void destruct_vectorlEpairlEfloatcOfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<float,float> >*)
   {
      vector<pair<float,float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<float,float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<float,float> >", -2, "prec_stl/vector", 49,
                  typeid(vector<pair<float,float> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEfloatcOfloatgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<float,float> >) );
      instance.SetNew(&new_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<float,float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<float,float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEfloatcOfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<float,float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlEfloatcOfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<float,float> > : new vector<pair<float,float> >;
   }
   static void *newArray_vectorlEpairlEfloatcOfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<float,float> >[nElements] : new vector<pair<float,float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEfloatcOfloatgRsPgR(void *p) {
      delete ((vector<pair<float,float> >*)p);
   }
   static void deleteArray_vectorlEpairlEfloatcOfloatgRsPgR(void *p) {
      delete [] ((vector<pair<float,float> >*)p);
   }
   static void destruct_vectorlEpairlEfloatcOfloatgRsPgR(void *p) {
      typedef vector<pair<float,float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<float,float> >

namespace ROOT {
   void vectorlEpairlEstringcOfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEstringcOfloatgRsPgR_Dictionary();
   static void *new_vectorlEpairlEstringcOfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEstringcOfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEstringcOfloatgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEstringcOfloatgRsPgR(void *p);
   static void destruct_vectorlEpairlEstringcOfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<string,float> >*)
   {
      vector<pair<string,float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<string,float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<string,float> >", -2, "prec_stl/vector", 49,
                  typeid(vector<pair<string,float> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEstringcOfloatgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<string,float> >) );
      instance.SetNew(&new_vectorlEpairlEstringcOfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEstringcOfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEstringcOfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEstringcOfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEstringcOfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<string,float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<string,float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEstringcOfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<string,float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlEstringcOfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<string,float> > : new vector<pair<string,float> >;
   }
   static void *newArray_vectorlEpairlEstringcOfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<string,float> >[nElements] : new vector<pair<string,float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEstringcOfloatgRsPgR(void *p) {
      delete ((vector<pair<string,float> >*)p);
   }
   static void deleteArray_vectorlEpairlEstringcOfloatgRsPgR(void *p) {
      delete [] ((vector<pair<string,float> >*)p);
   }
   static void destruct_vectorlEpairlEstringcOfloatgRsPgR(void *p) {
      typedef vector<pair<string,float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<string,float> >

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

namespace ROOT {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned int>

namespace ROOT {
   void vectorlEvectorlETEfficiencymUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlETEfficiencymUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlETEfficiencymUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlETEfficiencymUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlETEfficiencymUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlETEfficiencymUgRsPgR(void *p);
   static void destruct_vectorlEvectorlETEfficiencymUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<TEfficiency*> >*)
   {
      vector<vector<TEfficiency*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<TEfficiency*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<TEfficiency*> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<TEfficiency*> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlETEfficiencymUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<TEfficiency*> >) );
      instance.SetNew(&new_vectorlEvectorlETEfficiencymUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlETEfficiencymUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlETEfficiencymUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlETEfficiencymUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlETEfficiencymUgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<TEfficiency*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<TEfficiency*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlETEfficiencymUgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<TEfficiency*> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlETEfficiencymUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TEfficiency*> > : new vector<vector<TEfficiency*> >;
   }
   static void *newArray_vectorlEvectorlETEfficiencymUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TEfficiency*> >[nElements] : new vector<vector<TEfficiency*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlETEfficiencymUgRsPgR(void *p) {
      delete ((vector<vector<TEfficiency*> >*)p);
   }
   static void deleteArray_vectorlEvectorlETEfficiencymUgRsPgR(void *p) {
      delete [] ((vector<vector<TEfficiency*> >*)p);
   }
   static void destruct_vectorlEvectorlETEfficiencymUgRsPgR(void *p) {
      typedef vector<vector<TEfficiency*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<TEfficiency*> >

namespace ROOT {
   void vectorlEvectorlETH1FgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlETH1FgRsPgR_Dictionary();
   static void *new_vectorlEvectorlETH1FgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlETH1FgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlETH1FgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlETH1FgRsPgR(void *p);
   static void destruct_vectorlEvectorlETH1FgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<TH1F> >*)
   {
      vector<vector<TH1F> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<TH1F> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<TH1F> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<TH1F> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlETH1FgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<TH1F> >) );
      instance.SetNew(&new_vectorlEvectorlETH1FgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlETH1FgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlETH1FgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlETH1FgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlETH1FgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<TH1F> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<TH1F> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlETH1FgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<TH1F> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlETH1FgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TH1F> > : new vector<vector<TH1F> >;
   }
   static void *newArray_vectorlEvectorlETH1FgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TH1F> >[nElements] : new vector<vector<TH1F> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlETH1FgRsPgR(void *p) {
      delete ((vector<vector<TH1F> >*)p);
   }
   static void deleteArray_vectorlEvectorlETH1FgRsPgR(void *p) {
      delete [] ((vector<vector<TH1F> >*)p);
   }
   static void destruct_vectorlEvectorlETH1FgRsPgR(void *p) {
      typedef vector<vector<TH1F> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<TH1F> >

namespace ROOT {
   void vectorlEvectorlETH3FgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlETH3FgRsPgR_Dictionary();
   static void *new_vectorlEvectorlETH3FgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlETH3FgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlETH3FgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlETH3FgRsPgR(void *p);
   static void destruct_vectorlEvectorlETH3FgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<TH3F> >*)
   {
      vector<vector<TH3F> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<TH3F> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<TH3F> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<TH3F> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlETH3FgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<TH3F> >) );
      instance.SetNew(&new_vectorlEvectorlETH3FgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlETH3FgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlETH3FgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlETH3FgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlETH3FgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<TH3F> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<TH3F> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlETH3FgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<TH3F> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlETH3FgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TH3F> > : new vector<vector<TH3F> >;
   }
   static void *newArray_vectorlEvectorlETH3FgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TH3F> >[nElements] : new vector<vector<TH3F> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlETH3FgRsPgR(void *p) {
      delete ((vector<vector<TH3F> >*)p);
   }
   static void deleteArray_vectorlEvectorlETH3FgRsPgR(void *p) {
      delete [] ((vector<vector<TH3F> >*)p);
   }
   static void destruct_vectorlEvectorlETH3FgRsPgR(void *p) {
      typedef vector<vector<TH3F> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<TH3F> >

namespace ROOT {
   void vectorlEvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdoublegRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p);
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double> >*)
   {
      vector<vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<double> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdoublegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<double> >) );
      instance.SetNew(&new_vectorlEvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> > : new vector<vector<double> >;
   }
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> >[nElements] : new vector<vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete ((vector<vector<double> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete [] ((vector<vector<double> >*)p);
   }
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p) {
      typedef vector<vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<double> >

namespace ROOT {
   void vectorlEvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloatgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float> >*)
   {
      vector<vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<float> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloatgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<float> >) );
      instance.SetNew(&new_vectorlEvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> > : new vector<vector<float> >;
   }
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> >[nElements] : new vector<vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete ((vector<vector<float> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete [] ((vector<vector<float> >*)p);
   }
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p) {
      typedef vector<vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<float> >

namespace ROOT {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<int> >

namespace ROOT {
   void vectorlEvectorlEvectorlETH1FgRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEvectorlETH1FgRsPgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEvectorlETH1FgRsPgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEvectorlETH1FgRsPgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEvectorlETH1FgRsPgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEvectorlETH1FgRsPgRsPgR(void *p);
   static void destruct_vectorlEvectorlEvectorlETH1FgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<vector<TH1F> > >*)
   {
      vector<vector<vector<TH1F> > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<vector<TH1F> > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<vector<TH1F> > >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<vector<TH1F> > >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEvectorlETH1FgRsPgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<vector<TH1F> > >) );
      instance.SetNew(&new_vectorlEvectorlEvectorlETH1FgRsPgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEvectorlETH1FgRsPgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEvectorlETH1FgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEvectorlETH1FgRsPgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEvectorlETH1FgRsPgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<vector<TH1F> > > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<vector<TH1F> > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEvectorlETH1FgRsPgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<vector<TH1F> > >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEvectorlETH1FgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<vector<TH1F> > > : new vector<vector<vector<TH1F> > >;
   }
   static void *newArray_vectorlEvectorlEvectorlETH1FgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<vector<TH1F> > >[nElements] : new vector<vector<vector<TH1F> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEvectorlETH1FgRsPgRsPgR(void *p) {
      delete ((vector<vector<vector<TH1F> > >*)p);
   }
   static void deleteArray_vectorlEvectorlEvectorlETH1FgRsPgRsPgR(void *p) {
      delete [] ((vector<vector<vector<TH1F> > >*)p);
   }
   static void destruct_vectorlEvectorlEvectorlETH1FgRsPgRsPgR(void *p) {
      typedef vector<vector<vector<TH1F> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<vector<TH1F> > >

namespace ROOT {
   void vectorlEvectorlEvectorlEdoublegRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEvectorlEdoublegRsPgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p);
   static void destruct_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<vector<double> > >*)
   {
      vector<vector<vector<double> > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<vector<double> > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<vector<double> > >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<vector<double> > >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEvectorlEdoublegRsPgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<vector<double> > >) );
      instance.SetNew(&new_vectorlEvectorlEvectorlEdoublegRsPgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEvectorlEdoublegRsPgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEvectorlEdoublegRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEvectorlEdoublegRsPgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEvectorlEdoublegRsPgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<vector<double> > > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<vector<double> > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEvectorlEdoublegRsPgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<vector<double> > >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<vector<double> > > : new vector<vector<vector<double> > >;
   }
   static void *newArray_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<vector<double> > >[nElements] : new vector<vector<vector<double> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p) {
      delete ((vector<vector<vector<double> > >*)p);
   }
   static void deleteArray_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p) {
      delete [] ((vector<vector<vector<double> > >*)p);
   }
   static void destruct_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p) {
      typedef vector<vector<vector<double> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<vector<double> > >

namespace ROOT {
   void vectorlEvectorlEvectorlEfloatgRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEvectorlEfloatgRsPgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEvectorlEfloatgRsPgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEvectorlEfloatgRsPgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEvectorlEfloatgRsPgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEvectorlEfloatgRsPgRsPgR(void *p);
   static void destruct_vectorlEvectorlEvectorlEfloatgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<vector<float> > >*)
   {
      vector<vector<vector<float> > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<vector<float> > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<vector<float> > >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<vector<float> > >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEvectorlEfloatgRsPgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<vector<float> > >) );
      instance.SetNew(&new_vectorlEvectorlEvectorlEfloatgRsPgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEvectorlEfloatgRsPgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEvectorlEfloatgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEvectorlEfloatgRsPgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEvectorlEfloatgRsPgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<vector<float> > > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<vector<float> > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEvectorlEfloatgRsPgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<vector<float> > >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEvectorlEfloatgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<vector<float> > > : new vector<vector<vector<float> > >;
   }
   static void *newArray_vectorlEvectorlEvectorlEfloatgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<vector<float> > >[nElements] : new vector<vector<vector<float> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEvectorlEfloatgRsPgRsPgR(void *p) {
      delete ((vector<vector<vector<float> > >*)p);
   }
   static void deleteArray_vectorlEvectorlEvectorlEfloatgRsPgRsPgR(void *p) {
      delete [] ((vector<vector<vector<float> > >*)p);
   }
   static void destruct_vectorlEvectorlEvectorlEfloatgRsPgRsPgR(void *p) {
      typedef vector<vector<vector<float> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<vector<float> > >

namespace ROOT {
   void vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR(void *p);
   static void destruct_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<vector<vector<double> > > >*)
   {
      vector<vector<vector<vector<double> > > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<vector<vector<double> > > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<vector<vector<double> > > >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<vector<vector<double> > > >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<vector<vector<double> > > >) );
      instance.SetNew(&new_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<vector<vector<double> > > > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<vector<vector<double> > > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<vector<vector<double> > > >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<vector<vector<double> > > > : new vector<vector<vector<vector<double> > > >;
   }
   static void *newArray_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<vector<vector<double> > > >[nElements] : new vector<vector<vector<vector<double> > > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR(void *p) {
      delete ((vector<vector<vector<vector<double> > > >*)p);
   }
   static void deleteArray_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR(void *p) {
      delete [] ((vector<vector<vector<vector<double> > > >*)p);
   }
   static void destruct_vectorlEvectorlEvectorlEvectorlEdoublegRsPgRsPgRsPgR(void *p) {
      typedef vector<vector<vector<vector<double> > > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<vector<vector<double> > > >

/********************************************************
* Dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDict();

extern "C" void G__set_cpp_environmentDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Content/interface/AnalysisEnvironment.h");
  G__add_compiledheader("Content/interface/BinningFirstGuess.h");
  G__add_compiledheader("Content/interface/Container.h");
  G__add_compiledheader("Content/interface/Dataset.h");
  G__add_compiledheader("Content/interface/MCExpectation.h");
  G__add_compiledheader("Content/interface/MCObsExpectation.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootCaloJet.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootCaloMET.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootElectron.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootEvent.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootGenEvent.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootGenJet.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootGenTop.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootHLTInfo.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootJet.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootJPTJet.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootMCParticle.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootMET.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootMuon.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootNPGenEvent.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootParticle.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootPFJet.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootPFMET.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootRun.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootSpinCorrGen.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootTrackMET.h");
  G__add_compiledheader("../TopTreeProducer/interface/TRootVertex.h");
  G__add_compiledheader("JESMeasurement/interface/LightMonster.h");
  G__add_compiledheader("WHelicities/interface/WTree.h");
  G__add_compiledheader("InclFourthGenSearch/interface/InclFourthGenTree.h");
  G__add_compiledheader("BkgEstimationMethods/interface/VJetEstimation.h");
  G__cpp_reset_tagtableDict();
}
#include <new>
extern "C" int G__cpp_dllrevDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TopTree::TRootParticle */
static int G__Dict_224_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootParticle[n];
     } else {
       p = new((void*) gvp) TopTree::TRootParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootParticle;
     } else {
       p = new((void*) gvp) TopTree::TRootParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootParticle(*(TopTree::TRootParticle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootParticle(*(TopTree::TRootParticle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TopTree::TRootParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) TopTree::TRootParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootParticle(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootParticle(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootParticle(*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootParticle(*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootParticle(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootParticle(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootParticle*) G__getstructoffset())->vx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootParticle*) G__getstructoffset())->vy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootParticle*) G__getstructoffset())->vz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootParticle*) G__getstructoffset())->type());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootParticle*) G__getstructoffset())->charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootParticle*) G__getstructoffset())->genParticleIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TopTree::TRootParticle*) G__getstructoffset())->typeName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootParticle*) G__getstructoffset())->setVx((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootParticle*) G__getstructoffset())->setVy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootParticle*) G__getstructoffset())->setVz((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootParticle*) G__getstructoffset())->setType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootParticle*) G__getstructoffset())->setCharge((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootParticle*) G__getstructoffset())->setGenParticleIndex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_224_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootParticle G__TTopTreecLcLTRootParticle;
static int G__Dict_224_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootParticle*) (soff+(sizeof(TopTree::TRootParticle)*i)))->~G__TTopTreecLcLTRootParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootParticle*) (soff))->~G__TTopTreecLcLTRootParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_224_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootParticle* dest = (TopTree::TRootParticle*) G__getstructoffset();
   *dest = *(TopTree::TRootParticle*) libp->para[0].ref;
   const TopTree::TRootParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootJet */
static int G__Dict_466_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootJet[n];
     } else {
       p = new((void*) gvp) TopTree::TRootJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootJet;
     } else {
       p = new((void*) gvp) TopTree::TRootJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootJet(*(TopTree::TRootJet*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootJet(*(TopTree::TRootJet*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TopTree::TRootJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) TopTree::TRootJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootJet(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootJet(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootJet(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootJet(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootJet*) G__getstructoffset())->jetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootJet*) G__getstructoffset())->nConstituents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->jetArea());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->maxDistance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_jetBProbabilityBJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_jetProbabilityBJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_trackCountingHighPurBJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_trackCountingHighEffBJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_simpleSecondaryVertexHighEffBJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_simpleSecondaryVertexHighPurBJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_combinedSecondaryVertexBJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_combinedSecondaryVertexRetrainedBJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_combinedSecondaryVertexMVABJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_softMuonBJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_softMuonByPtBJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_softMuonByIP3dBJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_softElectronByPtBJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJet*) G__getstructoffset())->btag_softElectronByIP3dBJetTags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<std::string,float>* pobj;
         const map<std::string,float> xobj = ((const TopTree::TRootJet*) G__getstructoffset())->getMistag_SF();
         pobj = new map<std::string,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<std::string,float>* pobj;
         const map<std::string,float> xobj = ((const TopTree::TRootJet*) G__getstructoffset())->getBtag_SF();
         pobj = new map<std::string,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<std::string,float>* pobj;
         const map<std::string,float> xobj = ((const TopTree::TRootJet*) G__getstructoffset())->getMistag_SFerr();
         pobj = new map<std::string,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<std::string,float>* pobj;
         const map<std::string,float> xobj = ((const TopTree::TRootJet*) G__getstructoffset())->getBtag_SFerr();
         pobj = new map<std::string,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootJet*) G__getstructoffset())->partonFlavour());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootJet*) G__getstructoffset())->isTopJet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TopTree::TRootJet*) G__getstructoffset())->getJetCorrFactor(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setJetType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setNConstituents((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setJetArea((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setMaxDistance((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_jetBProbabilityBJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_jetProbabilityBJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_trackCountingHighPurBJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_trackCountingHighEffBJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_simpleSecondaryVertexHighEffBJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_simpleSecondaryVertexHighPurBJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_combinedSecondaryVertexBJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_combinedSecondaryVertexRetrainedBJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_combinedSecondaryVertexMVABJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_softMuonBJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_softMuonByPtBJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_softMuonByIP3dBJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_softElectronByPtBJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_softElectronByIP3dBJetTags((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setPartonFlavour((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setIsTopJet((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setMistag_SF(*((map<std::string,float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_SF(*((map<std::string,float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setMistag_SFerr(*((map<std::string,float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setBtag_SFerr(*((map<std::string,float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->setJetCorrFactor((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootJet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootJet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootJet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootJet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootJet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootJet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootJet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_466_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootJet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootJet G__TTopTreecLcLTRootJet;
static int G__Dict_466_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootJet*) (soff+(sizeof(TopTree::TRootJet)*i)))->~G__TTopTreecLcLTRootJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootJet*) (soff))->~G__TTopTreecLcLTRootJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_466_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJet* dest = (TopTree::TRootJet*) G__getstructoffset();
   *dest = *(TopTree::TRootJet*) libp->para[0].ref;
   const TopTree::TRootJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootMuon */
static int G__Dict_467_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMuon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootMuon[n];
     } else {
       p = new((void*) gvp) TopTree::TRootMuon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootMuon;
     } else {
       p = new((void*) gvp) TopTree::TRootMuon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMuon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMuon(*(TopTree::TRootMuon*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootMuon(*(TopTree::TRootMuon*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMuon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMuon(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootMuon(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMuon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMuon(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TopTree::TRootMuon(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMuon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMuon(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) TopTree::TRootMuon(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMuon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMuon(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootMuon(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMuon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMuon(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootMuon(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->isoR03_emEt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->isoR03_hadEt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->isoR03_sumPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->relativeIso03());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->algo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->isGlobalMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->isTrackerMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->isStandAloneMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->isCaloMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->isPFMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idAllGlobalMuons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idAllTrackerMuons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idAllStandAloneMuons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idTrackerMuonArbitrated());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idAllArbitrated());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idGlobalMuonPromptTight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idTMLastStationLoose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idTMLastStationTight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idTMLastStationAngTight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idTMOneStationLoose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idTMOneStationTight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idTMLastStationOptimizedLowPtLoose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idTMLastStationOptimizedLowPtTight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idTM2DCompatibilityLoose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->idTM2DCompatibilityTight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->vetoEm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->vetoHad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->d0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->d0error());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->dz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->dzerror());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->chi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->nofValidHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->nofValidMuHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->nofValidPixelHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->nofMatchedStations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMuon*) G__getstructoffset())->nofTrackerLayersWithMeasurement());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->chargedHadronIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->puChargedHadronIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->photonIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMuon*) G__getstructoffset())->neutralHadronIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setIsoR03((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setAlgo((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setIsPFMuon((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setID(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]), (Int_t) G__int(libp->para[13])
, (Int_t) G__int(libp->para[14]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setVetoEm((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setVetoHad((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setD0((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setD0Error((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setDZ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setDZError((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setChi2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setNofValidHits((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setNofValidMuHits((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setNofValidPixelHits((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setNofMatchedStations((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setNofTrackerLayersWithMeasurement((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setChargedHadronIso((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setPuChargedHadronIso((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setPhotonIso((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->setNeutralHadronIso((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootMuon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootMuon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootMuon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootMuon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMuon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootMuon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootMuon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootMuon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootMuon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootMuon G__TTopTreecLcLTRootMuon;
static int G__Dict_467_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootMuon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootMuon*) (soff+(sizeof(TopTree::TRootMuon)*i)))->~G__TTopTreecLcLTRootMuon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootMuon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootMuon*) (soff))->~G__TTopTreecLcLTRootMuon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_467_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMuon* dest = (TopTree::TRootMuon*) G__getstructoffset();
   *dest = *(TopTree::TRootMuon*) libp->para[0].ref;
   const TopTree::TRootMuon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootGenEvent */
static int G__Dict_468_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootGenEvent[n];
     } else {
       p = new((void*) gvp) TopTree::TRootGenEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootGenEvent;
     } else {
       p = new((void*) gvp) TopTree::TRootGenEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootGenEvent(*(TopTree::TRootGenEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootGenEvent(*(TopTree::TRootGenEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootGenEvent*) G__getstructoffset())->isTtBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootGenEvent*) G__getstructoffset())->isFullHadronic());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootGenEvent*) G__getstructoffset())->isSemiLeptonic());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootGenEvent*) G__getstructoffset())->isFullLeptonic());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootGenEvent*) G__getstructoffset())->semiLeptonicChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootGenEvent*) G__getstructoffset())->isSemiLeptonic((TopTree::TRootGenEvent::LeptonType) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->neutrino();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->lepton();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->leptonicDecayW();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->leptonicDecayB();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->leptonicDecayTop();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->hadronicDecayW();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->hadronicDecayB();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->hadronicDecayTop();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->hadronicDecayQuark();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->hadronicDecayQuarkBar();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector>* pobj;
         const vector<TLorentzVector> xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->leptonicDecayTopRadiation();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector>* pobj;
         const vector<TLorentzVector> xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->hadronicDecayTopRadiation();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector>* pobj;
         const vector<TLorentzVector> xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->ISR();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenEvent*) G__getstructoffset())->SetBoolean((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenEvent*) G__getstructoffset())->SetSemiLeptonicChannel((TopTree::TRootGenEvent::LeptonType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenEvent*) G__getstructoffset())->SetTLorentzVector(
*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, *(TLorentzVector*) libp->para[2].ref, *(TLorentzVector*) libp->para[3].ref
, *(TLorentzVector*) libp->para[4].ref, *(TLorentzVector*) libp->para[5].ref
, *(TLorentzVector*) libp->para[6].ref, *(TLorentzVector*) libp->para[7].ref
, *(TLorentzVector*) libp->para[8].ref, *(TLorentzVector*) libp->para[9].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenEvent*) G__getstructoffset())->SetRadiation(*((vector<TLorentzVector>*) G__int(libp->para[0])), *((vector<TLorentzVector>*) G__int(libp->para[1]))
, *((vector<TLorentzVector>*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TopTree::TRootGenEvent*) G__getstructoffset())->typeName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootGenEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootGenEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootGenEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootGenEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootGenEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootGenEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootGenEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_468_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootGenEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootGenEvent G__TTopTreecLcLTRootGenEvent;
static int G__Dict_468_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootGenEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootGenEvent*) (soff+(sizeof(TopTree::TRootGenEvent)*i)))->~G__TTopTreecLcLTRootGenEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootGenEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootGenEvent*) (soff))->~G__TTopTreecLcLTRootGenEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_468_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenEvent* dest = (TopTree::TRootGenEvent*) G__getstructoffset();
   *dest = *(TopTree::TRootGenEvent*) libp->para[0].ref;
   const TopTree::TRootGenEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootMCParticle */
static int G__Dict_474_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMCParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootMCParticle[n];
     } else {
       p = new((void*) gvp) TopTree::TRootMCParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootMCParticle;
     } else {
       p = new((void*) gvp) TopTree::TRootMCParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMCParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMCParticle(*(TopTree::TRootMCParticle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootMCParticle(*(TopTree::TRootMCParticle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMCParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMCParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootMCParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMCParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMCParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TopTree::TRootMCParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMCParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMCParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) TopTree::TRootMCParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMCParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 18
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMCParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]), (Int_t) G__int(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Int_t) G__int(libp->para[15])
, (Int_t) G__int(libp->para[16]), (Int_t) G__int(libp->para[17]));
   } else {
     p = new((void*) gvp) TopTree::TRootMCParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]), (Int_t) G__int(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Int_t) G__int(libp->para[15])
, (Int_t) G__int(libp->para[16]), (Int_t) G__int(libp->para[17]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMCParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMCParticle(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootMCParticle(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMCParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMCParticle(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootMCParticle(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMCParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 13
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMCParticle(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]));
   } else {
     p = new((void*) gvp) TopTree::TRootMCParticle(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMCParticle*) G__getstructoffset())->status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMCParticle*) G__getstructoffset())->nDau());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMCParticle*) G__getstructoffset())->motherType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMCParticle*) G__getstructoffset())->grannyType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMCParticle*) G__getstructoffset())->dauOneId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMCParticle*) G__getstructoffset())->dauTwoId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMCParticle*) G__getstructoffset())->dauThreeId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMCParticle*) G__getstructoffset())->dauFourId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMCParticle*) G__getstructoffset())->setStatus((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMCParticle*) G__getstructoffset())->setnDau((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMCParticle*) G__getstructoffset())->setMotherType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMCParticle*) G__getstructoffset())->setGrannyType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMCParticle*) G__getstructoffset())->setDauOneId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMCParticle*) G__getstructoffset())->setDauTwoId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMCParticle*) G__getstructoffset())->setDauThreeId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMCParticle*) G__getstructoffset())->setDauFourId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootMCParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootMCParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootMCParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootMCParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMCParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootMCParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootMCParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootMCParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootMCParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootMCParticle G__TTopTreecLcLTRootMCParticle;
static int G__Dict_474_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootMCParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootMCParticle*) (soff+(sizeof(TopTree::TRootMCParticle)*i)))->~G__TTopTreecLcLTRootMCParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootMCParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootMCParticle*) (soff))->~G__TTopTreecLcLTRootMCParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_474_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMCParticle* dest = (TopTree::TRootMCParticle*) G__getstructoffset();
   *dest = *(TopTree::TRootMCParticle*) libp->para[0].ref;
   const TopTree::TRootMCParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootGenTop */
static int G__Dict_518_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenTop* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootGenTop[n];
     } else {
       p = new((void*) gvp) TopTree::TRootGenTop[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootGenTop;
     } else {
       p = new((void*) gvp) TopTree::TRootGenTop;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenTop* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootGenTop(*(TopTree::TRootMCParticle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootGenTop(*(TopTree::TRootMCParticle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenTop* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootGenTop(
(const bool) G__int(libp->para[0]), *(TopTree::TRootMCParticle*) libp->para[1].ref
, *(TopTree::TRootMCParticle*) libp->para[2].ref, *(TopTree::TRootMCParticle*) libp->para[3].ref
, *(TopTree::TRootMCParticle*) libp->para[4].ref, *(TopTree::TRootMCParticle*) libp->para[5].ref
, *((string*) G__int(libp->para[6])));
     } else {
       p = new((void*) gvp) TopTree::TRootGenTop(
(const bool) G__int(libp->para[0]), *(TopTree::TRootMCParticle*) libp->para[1].ref
, *(TopTree::TRootMCParticle*) libp->para[2].ref, *(TopTree::TRootMCParticle*) libp->para[3].ref
, *(TopTree::TRootMCParticle*) libp->para[4].ref, *(TopTree::TRootMCParticle*) libp->para[5].ref
, *((string*) G__int(libp->para[6])));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootGenTop(
(const bool) G__int(libp->para[0]), *(TopTree::TRootMCParticle*) libp->para[1].ref
, *(TopTree::TRootMCParticle*) libp->para[2].ref, *(TopTree::TRootMCParticle*) libp->para[3].ref
, *(TopTree::TRootMCParticle*) libp->para[4].ref, *(TopTree::TRootMCParticle*) libp->para[5].ref);
     } else {
       p = new((void*) gvp) TopTree::TRootGenTop(
(const bool) G__int(libp->para[0]), *(TopTree::TRootMCParticle*) libp->para[1].ref
, *(TopTree::TRootMCParticle*) libp->para[2].ref, *(TopTree::TRootMCParticle*) libp->para[3].ref
, *(TopTree::TRootMCParticle*) libp->para[4].ref, *(TopTree::TRootMCParticle*) libp->para[5].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenTop* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootGenTop(*(TopTree::TRootGenTop*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootGenTop(*(TopTree::TRootGenTop*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootGenTop*) G__getstructoffset())->isHadronic());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootGenTop*) G__getstructoffset())->isLeptonic());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootGenTop*) G__getstructoffset())->isLeptonicMu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootGenTop*) G__getstructoffset())->isLeptonicEl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootGenTop*) G__getstructoffset())->isLeptonicTau());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((const TopTree::TRootGenTop*) G__getstructoffset())->isHadronicWellSeparated((float) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((const TopTree::TRootGenTop*) G__getstructoffset())->isHadronicWellSeparated());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootGenTop*) G__getstructoffset())->DeltaRMinHadronicTop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenTop*) G__getstructoffset())->Production();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootGenTop*) G__getstructoffset())->From());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootGenTop*) G__getstructoffset())->FromGluino());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootGenTop*) G__getstructoffset())->FromStop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootGenTop*) G__getstructoffset())->FromSbottom());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TopTree::TRootMCParticle* pobj;
         const TopTree::TRootMCParticle xobj = ((const TopTree::TRootGenTop*) G__getstructoffset())->W();
         pobj = new TopTree::TRootMCParticle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TopTree::TRootMCParticle* pobj;
         const TopTree::TRootMCParticle xobj = ((const TopTree::TRootGenTop*) G__getstructoffset())->bquark();
         pobj = new TopTree::TRootMCParticle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TopTree::TRootMCParticle* pobj;
         const TopTree::TRootMCParticle xobj = ((const TopTree::TRootGenTop*) G__getstructoffset())->quark();
         pobj = new TopTree::TRootMCParticle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TopTree::TRootMCParticle* pobj;
         const TopTree::TRootMCParticle xobj = ((const TopTree::TRootGenTop*) G__getstructoffset())->quarkBar();
         pobj = new TopTree::TRootMCParticle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TopTree::TRootMCParticle* pobj;
         const TopTree::TRootMCParticle xobj = ((const TopTree::TRootGenTop*) G__getstructoffset())->lepton();
         pobj = new TopTree::TRootMCParticle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TopTree::TRootMCParticle* pobj;
         const TopTree::TRootMCParticle xobj = ((const TopTree::TRootGenTop*) G__getstructoffset())->neutrino();
         pobj = new TopTree::TRootMCParticle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootGenTop::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootGenTop::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootGenTop::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootGenTop::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenTop*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootGenTop::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootGenTop::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootGenTop::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_518_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootGenTop::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootGenTop G__TTopTreecLcLTRootGenTop;
static int G__Dict_518_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootGenTop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootGenTop*) (soff+(sizeof(TopTree::TRootGenTop)*i)))->~G__TTopTreecLcLTRootGenTop();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootGenTop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootGenTop*) (soff))->~G__TTopTreecLcLTRootGenTop();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_518_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenTop* dest = (TopTree::TRootGenTop*) G__getstructoffset();
   *dest = *(TopTree::TRootGenTop*) libp->para[0].ref;
   const TopTree::TRootGenTop& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootNPGenEvent */
static int G__Dict_519_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootNPGenEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootNPGenEvent[n];
     } else {
       p = new((void*) gvp) TopTree::TRootNPGenEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootNPGenEvent;
     } else {
       p = new((void*) gvp) TopTree::TRootNPGenEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootNPGenEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootNPGenEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootNPGenEvent(
(const Bool_t) G__int(libp->para[0]), *((const vector<TopTree::TRootGenTop>*) G__int(libp->para[1]))
, *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[2])), *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[3]))
, *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[4])), *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[5]))
, *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[6])), *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[7]))
, *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[8])));
   } else {
     p = new((void*) gvp) TopTree::TRootNPGenEvent(
(const Bool_t) G__int(libp->para[0]), *((const vector<TopTree::TRootGenTop>*) G__int(libp->para[1]))
, *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[2])), *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[3]))
, *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[4])), *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[5]))
, *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[6])), *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[7]))
, *((const vector<TopTree::TRootMCParticle>*) G__int(libp->para[8])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootNPGenEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootNPGenEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootNPGenEvent(*(TopTree::TRootNPGenEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootNPGenEvent(*(TopTree::TRootNPGenEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootNPGenEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->typeName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->isNewPhysics());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->isThereTop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->numberOfTops());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->numberOfLeptons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->numberOfQuarks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->numberOfBQuarks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->numberOfInvisibleParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->numberOfNeutrinos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->numberOfGluinos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->numberOfStops());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TopTree::TRootGenTop,allocator<TopTree::TRootGenTop> >* pobj;
         const vector<TopTree::TRootGenTop,allocator<TopTree::TRootGenTop> > xobj = ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->tops();
         pobj = new vector<TopTree::TRootGenTop,allocator<TopTree::TRootGenTop> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >* pobj;
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > xobj = ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->leptons();
         pobj = new vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >* pobj;
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > xobj = ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->quarks();
         pobj = new vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >* pobj;
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > xobj = ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->bquarks();
         pobj = new vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >* pobj;
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > xobj = ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->invisibleParticles();
         pobj = new vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >* pobj;
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > xobj = ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->neutrinos();
         pobj = new vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >* pobj;
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > xobj = ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->gluinos();
         pobj = new vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >* pobj;
         const vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> > xobj = ((const TopTree::TRootNPGenEvent*) G__getstructoffset())->stops();
         pobj = new vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootNPGenEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootNPGenEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootNPGenEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootNPGenEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootNPGenEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootNPGenEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootNPGenEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootNPGenEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_519_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootNPGenEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootNPGenEvent G__TTopTreecLcLTRootNPGenEvent;
static int G__Dict_519_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootNPGenEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootNPGenEvent*) (soff+(sizeof(TopTree::TRootNPGenEvent)*i)))->~G__TTopTreecLcLTRootNPGenEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootNPGenEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootNPGenEvent*) (soff))->~G__TTopTreecLcLTRootNPGenEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_519_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootNPGenEvent* dest = (TopTree::TRootNPGenEvent*) G__getstructoffset();
   *dest = *(TopTree::TRootNPGenEvent*) libp->para[0].ref;
   const TopTree::TRootNPGenEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootMET */
static int G__Dict_528_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootMET[n];
     } else {
       p = new((void*) gvp) TopTree::TRootMET[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootMET;
     } else {
       p = new((void*) gvp) TopTree::TRootMET;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMET(*(TopTree::TRootMET*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootMET(*(TopTree::TRootMET*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TopTree::TRootMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) TopTree::TRootMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMET(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootMET(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootMET(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootMET(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootMET*) G__getstructoffset())->METType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootMET*) G__getstructoffset())->sumEt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMET*) G__getstructoffset())->setMETType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMET*) G__getstructoffset())->setSumEt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootMET::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootMET::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootMET::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootMET::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootMET*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootMET::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootMET::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootMET::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_528_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootMET::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootMET G__TTopTreecLcLTRootMET;
static int G__Dict_528_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootMET*) (soff+(sizeof(TopTree::TRootMET)*i)))->~G__TTopTreecLcLTRootMET();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootMET*) (soff))->~G__TTopTreecLcLTRootMET();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_528_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootMET* dest = (TopTree::TRootMET*) G__getstructoffset();
   *dest = *(TopTree::TRootMET*) libp->para[0].ref;
   const TopTree::TRootMET& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AnalysisEnvironment */
static int G__Dict_604_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AnalysisEnvironment* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AnalysisEnvironment[n];
     } else {
       p = new((void*) gvp) AnalysisEnvironment[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AnalysisEnvironment;
     } else {
       p = new((void*) gvp) AnalysisEnvironment;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_AnalysisEnvironment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_604_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AnalysisEnvironment* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AnalysisEnvironment(*(AnalysisEnvironment*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) AnalysisEnvironment(*(AnalysisEnvironment*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_AnalysisEnvironment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_604_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((AnalysisEnvironment*) G__getstructoffset())->runOnObs((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_604_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((AnalysisEnvironment*) G__getstructoffset())->runOnObs(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_604_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalysisEnvironment*) G__getstructoffset())->ChecklistOfObs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_604_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AnalysisEnvironment::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_604_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AnalysisEnvironment::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_604_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AnalysisEnvironment::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_604_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AnalysisEnvironment::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_604_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalysisEnvironment*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_604_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AnalysisEnvironment::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_604_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AnalysisEnvironment::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_604_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AnalysisEnvironment::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_604_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AnalysisEnvironment::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AnalysisEnvironment G__TAnalysisEnvironment;
static int G__Dict_604_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AnalysisEnvironment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AnalysisEnvironment*) (soff+(sizeof(AnalysisEnvironment)*i)))->~G__TAnalysisEnvironment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AnalysisEnvironment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AnalysisEnvironment*) (soff))->~G__TAnalysisEnvironment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_604_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AnalysisEnvironment* dest = (AnalysisEnvironment*) G__getstructoffset();
   *dest = *(AnalysisEnvironment*) libp->para[0].ref;
   const AnalysisEnvironment& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BinningFirstGuess */
static int G__Dict_675_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BinningFirstGuess* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BinningFirstGuess[n];
     } else {
       p = new((void*) gvp) BinningFirstGuess[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BinningFirstGuess;
     } else {
       p = new((void*) gvp) BinningFirstGuess;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_BinningFirstGuess));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BinningFirstGuess* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BinningFirstGuess((Double_t) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) BinningFirstGuess((Double_t) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_BinningFirstGuess));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BinningFirstGuess* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BinningFirstGuess((Bool_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) BinningFirstGuess((Bool_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_BinningFirstGuess));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BinningFirstGuess* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BinningFirstGuess(*(BinningFirstGuess*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) BinningFirstGuess(*(BinningFirstGuess*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_BinningFirstGuess));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const BinningFirstGuess& obj = ((BinningFirstGuess*) G__getstructoffset())->operator=(*(BinningFirstGuess*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((BinningFirstGuess*) G__getstructoffset())->getBinningFirstGuess(*((string*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((BinningFirstGuess*) G__getstructoffset())->getBinningFirstGuess(*((string*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         map<string,TAxis*>* pobj;
         map<string,TAxis*> xobj = ((BinningFirstGuess*) G__getstructoffset())->getBinningsFirstGuess((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
         pobj = new map<string,TAxis*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         map<string,TAxis*>* pobj;
         map<string,TAxis*> xobj = ((BinningFirstGuess*) G__getstructoffset())->getBinningsFirstGuess((Double_t) G__double(libp->para[0]));
         pobj = new map<string,TAxis*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BinningFirstGuess*) G__getstructoffset())->Fill(*(Observables*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BinningFirstGuess*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BinningFirstGuess::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BinningFirstGuess::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BinningFirstGuess::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BinningFirstGuess::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BinningFirstGuess*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BinningFirstGuess::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BinningFirstGuess::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BinningFirstGuess::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_675_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BinningFirstGuess::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BinningFirstGuess G__TBinningFirstGuess;
static int G__Dict_675_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BinningFirstGuess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BinningFirstGuess*) (soff+(sizeof(BinningFirstGuess)*i)))->~G__TBinningFirstGuess();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BinningFirstGuess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BinningFirstGuess*) (soff))->~G__TBinningFirstGuess();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Container */
static int G__Dict_714_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Container* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Container[n];
     } else {
       p = new((void*) gvp) Container[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Container;
     } else {
       p = new((void*) gvp) Container;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Container));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Container* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Container(*(Container*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Container(*(Container*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Container));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Container*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((Container*) G__getstructoffset())->GetInt();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((Container*) G__getstructoffset())->GetFloat();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((Container*) G__getstructoffset())->GetDouble();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string>* pobj;
         vector<string> xobj = ((Container*) G__getstructoffset())->GetString();
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Container*) G__getstructoffset())->SetInt(*((vector<Int_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Container*) G__getstructoffset())->SetFloat(*((vector<Float_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Container*) G__getstructoffset())->SetDouble(*((vector<Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Container*) G__getstructoffset())->SetString(*((vector<string>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Container*) G__getstructoffset())->Add((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Container*) G__getstructoffset())->Add((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Container*) G__getstructoffset())->Add((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Container*) G__getstructoffset())->Add(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Container::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Container::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Container::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Container::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Container*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Container::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Container::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Container::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_714_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Container::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Container G__TContainer;
static int G__Dict_714_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Container*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Container*) (soff+(sizeof(Container)*i)))->~G__TContainer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Container*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Container*) (soff))->~G__TContainer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_714_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Container* dest = (Container*) G__getstructoffset();
   *dest = *(Container*) libp->para[0].ref;
   const Container& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Dataset */
static int G__Dict_715_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Dataset* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Dataset[n];
     } else {
       p = new((void*) gvp) Dataset[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Dataset;
     } else {
       p = new((void*) gvp) Dataset;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Dataset));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Dataset* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Dataset(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) Dataset(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Dataset));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Dataset* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Dataset(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7])
, *((vector<string>*) G__int(libp->para[8])));
   } else {
     p = new((void*) gvp) Dataset(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7])
, *((vector<string>*) G__int(libp->para[8])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Dataset));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Dataset* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Dataset(*(Dataset*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Dataset(*(Dataset*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Dataset));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const Dataset*) G__getstructoffset())->Name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const Dataset*) G__getstructoffset())->Title();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Dataset*) G__getstructoffset())->DoIt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Dataset*) G__getstructoffset())->Color());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Dataset*) G__getstructoffset())->LineStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Dataset*) G__getstructoffset())->LineWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const Dataset*) G__getstructoffset())->NormFactor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const Dataset*) G__getstructoffset())->Xsection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const Dataset*) G__getstructoffset())->XsectionError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const Dataset*) G__getstructoffset())->Mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const Dataset*) G__getstructoffset())->PreSelEfficiency());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const Dataset*) G__getstructoffset())->EquivalentLumi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Dataset*) G__getstructoffset())->NofEvtsToRunOver());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Dataset*) G__getstructoffset())->eventTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Dataset*) G__getstructoffset())->runTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string>* pobj;
         const vector<string> xobj = ((const Dataset*) G__getstructoffset())->Filenames();
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<int> >* pobj;
         const vector<vector<int> > xobj = ((const Dataset*) G__getstructoffset())->JSONInfo();
         pobj = new vector<vector<int> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dataset*) G__getstructoffset())->SetName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dataset*) G__getstructoffset())->SetTitle(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dataset*) G__getstructoffset())->SetEquivalentLuminosity((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dataset*) G__getstructoffset())->SetXsection((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dataset*) G__getstructoffset())->SetMass((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dataset*) G__getstructoffset())->SetOriginalNumberOfEvents((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dataset*) G__getstructoffset())->SetPreselEffAndNumberOfPreselEvents((float) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dataset*) G__getstructoffset())->SetXsectionError((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dataset*) G__getstructoffset())->ReadJSONFile(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dataset*) G__getstructoffset())->SetColor((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Dataset::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Dataset::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Dataset::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Dataset::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dataset*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Dataset::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Dataset::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Dataset::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_715_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Dataset::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Dataset G__TDataset;
static int G__Dict_715_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Dataset*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Dataset*) (soff+(sizeof(Dataset)*i)))->~G__TDataset();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Dataset*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Dataset*) (soff))->~G__TDataset();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_715_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Dataset* dest = (Dataset*) G__getstructoffset();
   *dest = *(Dataset*) libp->para[0].ref;
   const Dataset& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MCExpectation */
static int G__Dict_720_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCExpectation* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MCExpectation[n];
     } else {
       p = new((void*) gvp) MCExpectation[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MCExpectation;
     } else {
       p = new((void*) gvp) MCExpectation;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_MCExpectation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCExpectation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MCExpectation(
*((string*) G__int(libp->para[0])), (float) G__double(libp->para[1])
, *((pair<float,float>*) G__int(libp->para[2])), *((pair<float,float>*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) MCExpectation(
*((string*) G__int(libp->para[0])), (float) G__double(libp->para[1])
, *((pair<float,float>*) G__int(libp->para[2])), *((pair<float,float>*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_MCExpectation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCExpectation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MCExpectation(*(MCExpectation*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MCExpectation(*(MCExpectation*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_MCExpectation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((MCExpectation*) G__getstructoffset())->GetVJets();
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCExpectation*) G__getstructoffset())->SetLabel(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCExpectation*) G__getstructoffset())->SetLuminosity((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCExpectation*) G__getstructoffset())->SetEfficiencies(*((pair<float,float>*) G__int(libp->para[0])), *((pair<float,float>*) G__int(libp->para[1]))
, *((pair<float,float>*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCExpectation*) G__getstructoffset())->Fill(*(Dataset*) libp->para[0].ref, (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCExpectation*) G__getstructoffset())->Compute();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCExpectation*) G__getstructoffset())->FillEfficiencies(*(Dataset*) libp->para[0].ref, (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCExpectation*) G__getstructoffset())->AddBtagConditions(*((string*) G__int(libp->para[0])), (float) G__double(libp->para[1])
, *((pair<float,float>*) G__int(libp->para[2])), *((pair<float,float>*) G__int(libp->para[3]))
, *((pair<float,float>*) G__int(libp->para[4])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MCExpectation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCExpectation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MCExpectation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MCExpectation::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCExpectation*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCExpectation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MCExpectation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCExpectation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_720_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MCExpectation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MCExpectation G__TMCExpectation;
static int G__Dict_720_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MCExpectation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MCExpectation*) (soff+(sizeof(MCExpectation)*i)))->~G__TMCExpectation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MCExpectation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MCExpectation*) (soff))->~G__TMCExpectation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MCObsExpectation */
static int G__Dict_729_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCObsExpectation* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MCObsExpectation[n];
     } else {
       p = new((void*) gvp) MCObsExpectation[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MCObsExpectation;
     } else {
       p = new((void*) gvp) MCObsExpectation;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_MCObsExpectation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCObsExpectation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MCObsExpectation(
*((vector<Dataset*>*) G__int(libp->para[0])), (TAxis*) G__int(libp->para[1])
, *((string*) G__int(libp->para[2])), (float) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) MCObsExpectation(
*((vector<Dataset*>*) G__int(libp->para[0])), (TAxis*) G__int(libp->para[1])
, *((string*) G__int(libp->para[2])), (float) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_MCObsExpectation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCObsExpectation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MCObsExpectation(
*((vector<Dataset*>*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, *((string*) G__int(libp->para[4])), (float) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) MCObsExpectation(
*((vector<Dataset*>*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, *((string*) G__int(libp->para[4])), (float) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_MCObsExpectation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCObsExpectation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MCObsExpectation(*(MCObsExpectation*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MCObsExpectation(*(MCObsExpectation*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_MCObsExpectation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCObsExpectation*) G__getstructoffset())->SetColors(*((vector<Dataset*>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCObsExpectation*) G__getstructoffset())->Fill((Dataset*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCObsExpectation*) G__getstructoffset())->Compute();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MCObsExpectation*) G__getstructoffset())->GetHistogram(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MCObsExpectation*) G__getstructoffset())->Get_hNewPhysicsSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MCObsExpectation*) G__getstructoffset())->GetTHStackSMProcesses());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MCObsExpectation*) G__getstructoffset())->GetTHStackAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MCObsExpectation*) G__getstructoffset())->GetHistoSMProcesses());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MCObsExpectation*) G__getstructoffset())->GetHistoAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MCObsExpectation*) G__getstructoffset())->GetlegSMProcess());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MCObsExpectation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCObsExpectation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MCObsExpectation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MCObsExpectation::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCObsExpectation*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCObsExpectation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MCObsExpectation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCObsExpectation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_729_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MCObsExpectation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MCObsExpectation G__TMCObsExpectation;
static int G__Dict_729_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MCObsExpectation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MCObsExpectation*) (soff+(sizeof(MCObsExpectation)*i)))->~G__TMCObsExpectation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MCObsExpectation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MCObsExpectation*) (soff))->~G__TMCObsExpectation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_729_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCObsExpectation* dest = (MCObsExpectation*) G__getstructoffset();
   *dest = *(MCObsExpectation*) libp->para[0].ref;
   const MCObsExpectation& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootCaloJet */
static int G__Dict_734_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootCaloJet[n];
     } else {
       p = new((void*) gvp) TopTree::TRootCaloJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootCaloJet;
     } else {
       p = new((void*) gvp) TopTree::TRootCaloJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloJet(*(TopTree::TRootCaloJet*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootCaloJet(*(TopTree::TRootCaloJet*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloJet(*(TopTree::TRootJet*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootCaloJet(*(TopTree::TRootJet*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootCaloJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TopTree::TRootCaloJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) TopTree::TRootCaloJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloJet(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootCaloJet(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloJet(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootCaloJet(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloJet*) G__getstructoffset())->etaetaMoment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloJet*) G__getstructoffset())->phiphiMoment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloJet*) G__getstructoffset())->ecalEnergyFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloJet*) G__getstructoffset())->hcalEnergyFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloJet*) G__getstructoffset())->maxEInEmTowers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloJet*) G__getstructoffset())->maxEInHadTowers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloJet*) G__getstructoffset())->towersArea());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootCaloJet*) G__getstructoffset())->n90());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootCaloJet*) G__getstructoffset())->n60());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloJet*) G__getstructoffset())->fHPD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloJet*) G__getstructoffset())->fRBX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloJet*) G__getstructoffset())->n90Hits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootCaloJet*) G__getstructoffset())->nHCALTowers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootCaloJet*) G__getstructoffset())->nECALTowers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootCaloJet*) G__getstructoffset())->chargedMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setetaetaMoment((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setphiphiMoment((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setEcalEnergyFraction((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setHcalEnergyFraction((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setMaxEInEmTowers((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setMaxEInHadTowers((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setTowersArea((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setN90((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setN60((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setfHPD((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setfRBX((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setn90Hits((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setnHCALTowers((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setnECALTowers((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->setChargedMultiplicity((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootCaloJet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootCaloJet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootCaloJet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootCaloJet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloJet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootCaloJet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootCaloJet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootCaloJet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_734_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootCaloJet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootCaloJet G__TTopTreecLcLTRootCaloJet;
static int G__Dict_734_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootCaloJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootCaloJet*) (soff+(sizeof(TopTree::TRootCaloJet)*i)))->~G__TTopTreecLcLTRootCaloJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootCaloJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootCaloJet*) (soff))->~G__TTopTreecLcLTRootCaloJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_734_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloJet* dest = (TopTree::TRootCaloJet*) G__getstructoffset();
   *dest = *(TopTree::TRootCaloJet*) libp->para[0].ref;
   const TopTree::TRootCaloJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootCaloMET */
static int G__Dict_735_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootCaloMET[n];
     } else {
       p = new((void*) gvp) TopTree::TRootCaloMET[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootCaloMET;
     } else {
       p = new((void*) gvp) TopTree::TRootCaloMET;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloMET(*(TopTree::TRootCaloMET*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootCaloMET(*(TopTree::TRootCaloMET*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloMET(*(TopTree::TRootMET*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootCaloMET(*(TopTree::TRootMET*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootCaloMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TopTree::TRootCaloMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) TopTree::TRootCaloMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloMET(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootCaloMET(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootCaloMET(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootCaloMET(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->maxEtInEmTowers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->maxEtInHadTowers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->hadEtInHO());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->hadEtInHB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->hadEtInHF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->hadEtInHE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->emEtInEB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->emEtInEE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->emEtInHF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->etFractionHadronic());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->etFractionEm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->metSignificance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->caloMETInpHF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->caloMETInmHF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->caloSETInpHF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->caloSETInmHF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->caloMETPhiInpHF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootCaloMET*) G__getstructoffset())->caloMETPhiInmHF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setMaxEtInEmTowers((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setMaxEtInHadTowers((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setHadEtInHO((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setHadEtInHB((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setHadEtInHF((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setHadEtInHE((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setEmEtInEB((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setEmEtInEE((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setEmEtInHF((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setEtFractionHadronic((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setEtFractionEm((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setMETSignificance((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setCaloMETInpHF((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setCaloMETInmHF((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setCaloSETInpHF((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setCaloSETInmHF((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setCaloMETPhiInpHF((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setCaloMETPhiInmHF((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->setCaloMETFraction(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Float_t) G__double(libp->para[8]), (Float_t) G__double(libp->para[9])
, (Float_t) G__double(libp->para[10]), (Float_t) G__double(libp->para[11])
, (Float_t) G__double(libp->para[12]), (Float_t) G__double(libp->para[13])
, (Float_t) G__double(libp->para[14]), (Float_t) G__double(libp->para[15])
, (Float_t) G__double(libp->para[16]), (Float_t) G__double(libp->para[17]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootCaloMET::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootCaloMET::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootCaloMET::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootCaloMET::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootCaloMET*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootCaloMET::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootCaloMET::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootCaloMET::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_735_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootCaloMET::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootCaloMET G__TTopTreecLcLTRootCaloMET;
static int G__Dict_735_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootCaloMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootCaloMET*) (soff+(sizeof(TopTree::TRootCaloMET)*i)))->~G__TTopTreecLcLTRootCaloMET();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootCaloMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootCaloMET*) (soff))->~G__TTopTreecLcLTRootCaloMET();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_735_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootCaloMET* dest = (TopTree::TRootCaloMET*) G__getstructoffset();
   *dest = *(TopTree::TRootCaloMET*) libp->para[0].ref;
   const TopTree::TRootCaloMET& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootElectron */
static int G__Dict_736_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootElectron[n];
     } else {
       p = new((void*) gvp) TopTree::TRootElectron[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootElectron;
     } else {
       p = new((void*) gvp) TopTree::TRootElectron;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootElectron(*(TopTree::TRootElectron*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootElectron(*(TopTree::TRootElectron*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootElectron(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootElectron(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootElectron(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TopTree::TRootElectron(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootElectron(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) TopTree::TRootElectron(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootElectron(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootElectron(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootElectron(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootElectron(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootElectron*) G__getstructoffset())->isEcalDrivenSeed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootElectron*) G__getstructoffset())->isTrackerDrivenSeed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TopTree::TRootElectron*) G__getstructoffset())->ecalDrivenMomentum();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->eScOverP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->eEleClusterOverPout());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->eSeedClusterOverPout());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->deltaEtaIn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->deltaEtaOut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->deltaPhiIn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->deltaPhiOut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->deltaPhiScTrkOut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->deltaEtaScTrkOut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->ioEmIoP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->ioEmIoPgsf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootElectron*) G__getstructoffset())->trackPixelLayersWithMeasurement());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootElectron*) G__getstructoffset())->trackStripLayersWithMeasurement());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootElectron*) G__getstructoffset())->trackerLayersWithMeasurement());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootElectron*) G__getstructoffset())->trackNValidHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->ip3d());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->ip3dError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->d0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->d0Error());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->dz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootElectron*) G__getstructoffset())->missingHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->trackNormalizedChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->gsfTrackNormalizedChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->superClusterRawEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->superClusterEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->preshowerEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->sigmaIEtaIEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->sigmaIPhiIPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->sigmaIEtaIPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->e1x5());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->e5x5());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->hadronicOverEm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->hadronicDepth1OverEm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->hadronicDepth2OverEm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->etaWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->phiWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->r9());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->ecalIso((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->hcalIso((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->hcalIso_Dept1((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->hcalIso_Dept2((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->caloIso((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->trackerIso((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->combinedIso((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->chargedHadronIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->puChargedHadronIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->photonIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->neutralHadronIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->relativePfIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->fbrem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootElectron*) G__getstructoffset())->numberOfBrems());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->Dist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->DCot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootElectron*) G__getstructoffset())->passConversion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->mvaTrigId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootElectron*) G__getstructoffset())->mvaNonTrigId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setEcalSeeding((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setEcalDrivenMomentum(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setTrackerSeeding((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setDeltaEtaIn((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setDeltaEtaOut((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setDeltaEtaSuperClusterTrackAtCalo((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setDeltaPhiIn((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setDeltaPhiOut((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setDeltaPhiSuperClusterTrackAtCalo((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setEnergySuperClusterOverP((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setEnergyEleClusterOverPout((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setEnergySeedClusterOverPout((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setIoEmIoP((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setIoEmIoPgsf((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setIp3d((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setIp3dError((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setD0((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setD0Error((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setDz((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setTrackMissingHits((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setTrackNormalizedChi2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setGsfTrackNormalizedChi2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setPixelLayersWithMeasurement((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setStripLayersWithMeasurement((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setNValidHits((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setPreshowerEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setSuperClusterRawEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setSuperClusterEta((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setE1x5((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setE5x5((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setHoverEDepth1((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setHoverEDepth2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setSigmaIetaIeta((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setSigmaIphiIphi((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setSigmaIetaIphi((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setEtaWidth((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setPhiWidth((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setR9((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setIsoR03_emEt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setIsoR03_Depth1HadEt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setIsoR03_Depth2HadEt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setIsoR03_sumPt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setIsoR04_emEt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setIsoR04_Depth1HadEt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setIsoR04_Depth2HadEt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setIsoR04_sumPt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setChargedHadronIso((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setPuChargedHadronIso((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setPhotonIso((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setNeutralHadronIso((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setFbrem((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setNBrems((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setDist((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setDCot((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setPassConversion((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setMvaTrigId((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->setMvaNonTrigId((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootElectron::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootElectron::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootElectron::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootElectron::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootElectron*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootElectron::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootElectron::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootElectron::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_736_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootElectron::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootElectron G__TTopTreecLcLTRootElectron;
static int G__Dict_736_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootElectron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootElectron*) (soff+(sizeof(TopTree::TRootElectron)*i)))->~G__TTopTreecLcLTRootElectron();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootElectron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootElectron*) (soff))->~G__TTopTreecLcLTRootElectron();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_736_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootElectron* dest = (TopTree::TRootElectron*) G__getstructoffset();
   *dest = *(TopTree::TRootElectron*) libp->para[0].ref;
   const TopTree::TRootElectron& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::triggeredObject */
static int G__Dict_737_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::triggeredObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::triggeredObject[n];
     } else {
       p = new((void*) gvp) TopTree::triggeredObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::triggeredObject;
     } else {
       p = new((void*) gvp) TopTree::triggeredObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLtriggeredObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_737_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::triggeredObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_737_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::triggeredObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_737_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::triggeredObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_737_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::triggeredObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_737_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TopTree::triggeredObject*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_737_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::triggeredObject*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_737_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::triggeredObject*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_737_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::triggeredObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_737_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::triggeredObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_737_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::triggeredObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_737_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::triggeredObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_737_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::triggeredObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_737_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TopTree::triggeredObject* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TopTree::triggeredObject(*(TopTree::triggeredObject*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLtriggeredObject));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::triggeredObject G__TTopTreecLcLtriggeredObject;
static int G__Dict_737_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::triggeredObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::triggeredObject*) (soff+(sizeof(TopTree::triggeredObject)*i)))->~G__TTopTreecLcLtriggeredObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::triggeredObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::triggeredObject*) (soff))->~G__TTopTreecLcLtriggeredObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_737_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::triggeredObject* dest = (TopTree::triggeredObject*) G__getstructoffset();
   *dest = *(TopTree::triggeredObject*) libp->para[0].ref;
   const TopTree::triggeredObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootEvent */
static int G__Dict_738_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootEvent[n];
     } else {
       p = new((void*) gvp) TopTree::TRootEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootEvent;
     } else {
       p = new((void*) gvp) TopTree::TRootEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootEvent*) G__getstructoffset())->nb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootEvent*) G__getstructoffset())->eventId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootEvent*) G__getstructoffset())->runId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootEvent*) G__getstructoffset())->lumiBlockId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootEvent*) G__getstructoffset())->flavorHistoryPath());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootEvent*) G__getstructoffset())->kt6PFJets_rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootEvent*) G__getstructoffset())->kt6PFJetsForIsolation_rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootEvent*) G__getstructoffset())->nTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootEvent*) G__getstructoffset())->nHighPurityTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TopTree::TRootEvent*) G__getstructoffset())->nPu((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TopTree::TRootEvent*) G__getstructoffset())->nTruePU());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootEvent*) G__getstructoffset())->passGlobalHLT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TopTree::TRootEvent*) G__getstructoffset())->nHLTPaths());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Bool_t>* pobj;
         const vector<Bool_t> xobj = ((const TopTree::TRootEvent*) G__getstructoffset())->trigHLT();
         pobj = new vector<Bool_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootEvent*) G__getstructoffset())->trigHLT((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootEvent*) G__getstructoffset())->idParton1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootEvent*) G__getstructoffset())->xParton1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootEvent*) G__getstructoffset())->idParton2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootEvent*) G__getstructoffset())->xParton2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootEvent*) G__getstructoffset())->factorizationScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<std::string,std::vector<TopTree::triggeredObject> >* pobj;
         const map<std::string,std::vector<TopTree::triggeredObject> > xobj = ((const TopTree::TRootEvent*) G__getstructoffset())->getTriggerFilters();
         pobj = new map<std::string,std::vector<TopTree::triggeredObject> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setNb((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setEventId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setRunId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setLumiBlockId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setflavorHistoryPath((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setKt6PFJets_rho((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setKt6PFJetsForIsolation_rho((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setNTracks((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setNPu((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setNTruePU((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setNHighPurityTracks((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setGlobalHLT((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setTrigHLT(*((vector<Bool_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setIdParton1((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setXParton1((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setIdParton2((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setXParton2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->setFactorizationScale((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->AddTriggerObject(*((string*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_738_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_738_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TopTree::TRootEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TopTree::TRootEvent(*(TopTree::TRootEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootEvent G__TTopTreecLcLTRootEvent;
static int G__Dict_738_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootEvent*) (soff+(sizeof(TopTree::TRootEvent)*i)))->~G__TTopTreecLcLTRootEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootEvent*) (soff))->~G__TTopTreecLcLTRootEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_738_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootEvent* dest = (TopTree::TRootEvent*) G__getstructoffset();
   *dest = *(TopTree::TRootEvent*) libp->para[0].ref;
   const TopTree::TRootEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootGenJet */
static int G__Dict_750_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootGenJet[n];
     } else {
       p = new((void*) gvp) TopTree::TRootGenJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootGenJet;
     } else {
       p = new((void*) gvp) TopTree::TRootGenJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootGenJet(*(TopTree::TRootGenJet*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootGenJet(*(TopTree::TRootGenJet*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootGenJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootGenJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootGenJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TopTree::TRootGenJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootGenJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) TopTree::TRootGenJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootGenJet(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootGenJet(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootGenJet(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootGenJet(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootGenJet*) G__getstructoffset())->etaetaMoment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootGenJet*) G__getstructoffset())->phiphiMoment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootGenJet*) G__getstructoffset())->emEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootGenJet*) G__getstructoffset())->hadEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootGenJet*) G__getstructoffset())->invisibleEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootGenJet*) G__getstructoffset())->n90());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootGenJet*) G__getstructoffset())->n60());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootGenJet*) G__getstructoffset())->nConstituents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootGenJet*) G__getstructoffset())->maxDistance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenJet*) G__getstructoffset())->setetaetaMoment((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenJet*) G__getstructoffset())->setphiphiMoment((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenJet*) G__getstructoffset())->setEMEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenJet*) G__getstructoffset())->setHadEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenJet*) G__getstructoffset())->setInvisibleEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenJet*) G__getstructoffset())->setN90((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenJet*) G__getstructoffset())->setN60((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenJet*) G__getstructoffset())->setNConstituents((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenJet*) G__getstructoffset())->setMaxDistance((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootGenJet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootGenJet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootGenJet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootGenJet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootGenJet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootGenJet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootGenJet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootGenJet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_750_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootGenJet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootGenJet G__TTopTreecLcLTRootGenJet;
static int G__Dict_750_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootGenJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootGenJet*) (soff+(sizeof(TopTree::TRootGenJet)*i)))->~G__TTopTreecLcLTRootGenJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootGenJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootGenJet*) (soff))->~G__TTopTreecLcLTRootGenJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_750_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootGenJet* dest = (TopTree::TRootGenJet*) G__getstructoffset();
   *dest = *(TopTree::TRootGenJet*) libp->para[0].ref;
   const TopTree::TRootGenJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootHLTInfo */
static int G__Dict_751_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootHLTInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootHLTInfo[n];
     } else {
       p = new((void*) gvp) TopTree::TRootHLTInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootHLTInfo;
     } else {
       p = new((void*) gvp) TopTree::TRootHLTInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootHLTInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootHLTInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootHLTInfo(
(UInt_t) G__int(libp->para[0]), *((vector<std::string>*) G__int(libp->para[1]))
, *((vector<UInt_t>*) G__int(libp->para[2])), *((vector<UInt_t>*) G__int(libp->para[3]))
, *((vector<UInt_t>*) G__int(libp->para[4])));
   } else {
     p = new((void*) gvp) TopTree::TRootHLTInfo(
(UInt_t) G__int(libp->para[0]), *((vector<std::string>*) G__int(libp->para[1]))
, *((vector<UInt_t>*) G__int(libp->para[2])), *((vector<UInt_t>*) G__int(libp->para[3]))
, *((vector<UInt_t>*) G__int(libp->para[4])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootHLTInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const TopTree::TRootHLTInfo*) G__getstructoffset())->hltNames((UInt_t) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TopTree::TRootHLTInfo*) G__getstructoffset())->hltWasRun((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TopTree::TRootHLTInfo*) G__getstructoffset())->hltAccept((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TopTree::TRootHLTInfo*) G__getstructoffset())->hltErrors((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TopTree::TRootHLTInfo*) G__getstructoffset())->RunID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TopTree::TRootHLTInfo*) G__getstructoffset())->nHLTPaths());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TopTree::TRootHLTInfo*) G__getstructoffset())->hltPath(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootHLTInfo*) G__getstructoffset())->sethltWasRun((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootHLTInfo*) G__getstructoffset())->sethltAccept((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootHLTInfo*) G__getstructoffset())->sethltErrors((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootHLTInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootHLTInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootHLTInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootHLTInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootHLTInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootHLTInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootHLTInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootHLTInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_751_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootHLTInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_751_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TopTree::TRootHLTInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TopTree::TRootHLTInfo(*(TopTree::TRootHLTInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootHLTInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootHLTInfo G__TTopTreecLcLTRootHLTInfo;
static int G__Dict_751_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootHLTInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootHLTInfo*) (soff+(sizeof(TopTree::TRootHLTInfo)*i)))->~G__TTopTreecLcLTRootHLTInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootHLTInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootHLTInfo*) (soff))->~G__TTopTreecLcLTRootHLTInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_751_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootHLTInfo* dest = (TopTree::TRootHLTInfo*) G__getstructoffset();
   *dest = *(TopTree::TRootHLTInfo*) libp->para[0].ref;
   const TopTree::TRootHLTInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootJPTJet */
static int G__Dict_752_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJPTJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootJPTJet[n];
     } else {
       p = new((void*) gvp) TopTree::TRootJPTJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootJPTJet;
     } else {
       p = new((void*) gvp) TopTree::TRootJPTJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJPTJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootJPTJet(*(TopTree::TRootJPTJet*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootJPTJet(*(TopTree::TRootJPTJet*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJPTJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootJPTJet(*(TopTree::TRootJet*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootJPTJet(*(TopTree::TRootJet*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJPTJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootJPTJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootJPTJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJPTJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootJPTJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TopTree::TRootJPTJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJPTJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootJPTJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) TopTree::TRootJPTJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJPTJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootJPTJet(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootJPTJet(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJPTJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootJPTJet(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootJPTJet(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJPTJet*) G__getstructoffset())->etaetaMoment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJPTJet*) G__getstructoffset())->phiphiMoment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJPTJet*) G__getstructoffset())->ecalEnergyFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJPTJet*) G__getstructoffset())->hcalEnergyFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJPTJet*) G__getstructoffset())->maxEInEmTowers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJPTJet*) G__getstructoffset())->maxEInHadTowers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJPTJet*) G__getstructoffset())->towersArea());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootJPTJet*) G__getstructoffset())->n90());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootJPTJet*) G__getstructoffset())->n60());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJPTJet*) G__getstructoffset())->fHPD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJPTJet*) G__getstructoffset())->fRBX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJPTJet*) G__getstructoffset())->n90Hits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootJPTJet*) G__getstructoffset())->nHCALTowers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootJPTJet*) G__getstructoffset())->nECALTowers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootJPTJet*) G__getstructoffset())->chargedMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootJPTJet*) G__getstructoffset())->chargedHadronEnergyFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setetaetaMoment((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setphiphiMoment((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setEcalEnergyFraction((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setHcalEnergyFraction((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setMaxEInEmTowers((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setMaxEInHadTowers((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setTowersArea((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setN90((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setN60((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setfHPD((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setfRBX((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setn90Hits((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setnHCALTowers((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setnECALTowers((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setChargedMultiplicity((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->setchargedHadronEnergyFraction((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootJPTJet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootJPTJet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootJPTJet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootJPTJet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootJPTJet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootJPTJet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootJPTJet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootJPTJet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_752_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootJPTJet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootJPTJet G__TTopTreecLcLTRootJPTJet;
static int G__Dict_752_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootJPTJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootJPTJet*) (soff+(sizeof(TopTree::TRootJPTJet)*i)))->~G__TTopTreecLcLTRootJPTJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootJPTJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootJPTJet*) (soff))->~G__TTopTreecLcLTRootJPTJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_752_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootJPTJet* dest = (TopTree::TRootJPTJet*) G__getstructoffset();
   *dest = *(TopTree::TRootJPTJet*) libp->para[0].ref;
   const TopTree::TRootJPTJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootPFJet */
static int G__Dict_753_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootPFJet[n];
     } else {
       p = new((void*) gvp) TopTree::TRootPFJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootPFJet;
     } else {
       p = new((void*) gvp) TopTree::TRootPFJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFJet(*(TopTree::TRootPFJet*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootPFJet(*(TopTree::TRootPFJet*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFJet(*(TopTree::TRootJet*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootPFJet(*(TopTree::TRootJet*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootPFJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TopTree::TRootPFJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) TopTree::TRootPFJet(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFJet(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootPFJet(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFJet(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootPFJet(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootPFJet*) G__getstructoffset())->chargedHadronEnergyFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootPFJet*) G__getstructoffset())->neutralHadronEnergyFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootPFJet*) G__getstructoffset())->chargedEmEnergyFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootPFJet*) G__getstructoffset())->chargedMuEnergyFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootPFJet*) G__getstructoffset())->neutralEmEnergyFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootPFJet*) G__getstructoffset())->chargedMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootPFJet*) G__getstructoffset())->neutralMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootPFJet*) G__getstructoffset())->muonMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootPFJet*) G__getstructoffset())->setChargedHadronEnergyFraction((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootPFJet*) G__getstructoffset())->setNeutralHadronEnergyFraction((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootPFJet*) G__getstructoffset())->setChargedEmEnergyFraction((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootPFJet*) G__getstructoffset())->setChargedMuEnergyFraction((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootPFJet*) G__getstructoffset())->setNeutralEmEnergyFraction((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootPFJet*) G__getstructoffset())->setChargedMultiplicity((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootPFJet*) G__getstructoffset())->setNeutralMultiplicity((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootPFJet*) G__getstructoffset())->setMuonMultiplicity((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootPFJet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootPFJet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootPFJet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootPFJet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootPFJet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootPFJet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootPFJet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootPFJet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_753_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootPFJet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootPFJet G__TTopTreecLcLTRootPFJet;
static int G__Dict_753_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootPFJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootPFJet*) (soff+(sizeof(TopTree::TRootPFJet)*i)))->~G__TTopTreecLcLTRootPFJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootPFJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootPFJet*) (soff))->~G__TTopTreecLcLTRootPFJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_753_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFJet* dest = (TopTree::TRootPFJet*) G__getstructoffset();
   *dest = *(TopTree::TRootPFJet*) libp->para[0].ref;
   const TopTree::TRootPFJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootPFMET */
static int G__Dict_754_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootPFMET[n];
     } else {
       p = new((void*) gvp) TopTree::TRootPFMET[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootPFMET;
     } else {
       p = new((void*) gvp) TopTree::TRootPFMET;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFMET(*(TopTree::TRootPFMET*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootPFMET(*(TopTree::TRootPFMET*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFMET(*(TopTree::TRootMET*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootPFMET(*(TopTree::TRootMET*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootPFMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TopTree::TRootPFMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) TopTree::TRootPFMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFMET(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootPFMET(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootPFMET(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootPFMET(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootPFMET*) G__getstructoffset())->NeutralEMFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootPFMET*) G__getstructoffset())->NeutralHadEtFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootPFMET*) G__getstructoffset())->ChargedEMEtFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootPFMET*) G__getstructoffset())->ChargedHadEtFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootPFMET*) G__getstructoffset())->MuonEtFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootPFMET*) G__getstructoffset())->Type6EtFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootPFMET*) G__getstructoffset())->Type7EtFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootPFMET*) G__getstructoffset())->setPFMETFraction(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootPFMET::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootPFMET::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootPFMET::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootPFMET::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootPFMET*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootPFMET::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootPFMET::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootPFMET::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_754_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootPFMET::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootPFMET G__TTopTreecLcLTRootPFMET;
static int G__Dict_754_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootPFMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootPFMET*) (soff+(sizeof(TopTree::TRootPFMET)*i)))->~G__TTopTreecLcLTRootPFMET();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootPFMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootPFMET*) (soff))->~G__TTopTreecLcLTRootPFMET();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_754_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootPFMET* dest = (TopTree::TRootPFMET*) G__getstructoffset();
   *dest = *(TopTree::TRootPFMET*) libp->para[0].ref;
   const TopTree::TRootPFMET& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootRun */
static int G__Dict_755_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootRun[n];
     } else {
       p = new((void*) gvp) TopTree::TRootRun[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootRun;
     } else {
       p = new((void*) gvp) TopTree::TRootRun;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TopTree::TRootRun*) G__getstructoffset())->nHLTEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TopTree::TRootRun*) G__getstructoffset())->nHLTWasRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TopTree::TRootRun*) G__getstructoffset())->nHLTAccept());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TopTree::TRootRun*) G__getstructoffset())->nHLTErrors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const TopTree::TRootRun*) G__getstructoffset())->hltInputTag();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootRun*) G__getstructoffset())->setHLTInputTag(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootRun*) G__getstructoffset())->setNHLTEvents((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootRun*) G__getstructoffset())->setNHLTWasRun((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootRun*) G__getstructoffset())->setNHLTAccept((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootRun*) G__getstructoffset())->setNHLTErrors((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootRun*) G__getstructoffset())->setHLTinfos(*((vector<TopTree::TRootHLTInfo>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TopTree::TRootHLTInfo* pobj;
         TopTree::TRootHLTInfo xobj = ((TopTree::TRootRun*) G__getstructoffset())->getHLTinfo((UInt_t) G__int(libp->para[0]));
         pobj = new TopTree::TRootHLTInfo(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TopTree::TRootHLTInfo>* pobj;
         const vector<TopTree::TRootHLTInfo> xobj = ((const TopTree::TRootRun*) G__getstructoffset())->copyHLTinfos();
         pobj = new vector<TopTree::TRootHLTInfo>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootRun::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootRun::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootRun::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootRun::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootRun*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootRun::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootRun::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootRun::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_755_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootRun::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_755_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TopTree::TRootRun* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TopTree::TRootRun(*(TopTree::TRootRun*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootRun));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootRun G__TTopTreecLcLTRootRun;
static int G__Dict_755_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootRun*) (soff+(sizeof(TopTree::TRootRun)*i)))->~G__TTopTreecLcLTRootRun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootRun*) (soff))->~G__TTopTreecLcLTRootRun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_755_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootRun* dest = (TopTree::TRootRun*) G__getstructoffset();
   *dest = *(TopTree::TRootRun*) libp->para[0].ref;
   const TopTree::TRootRun& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootSpinCorrGen */
static int G__Dict_760_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootSpinCorrGen* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootSpinCorrGen[n];
     } else {
       p = new((void*) gvp) TopTree::TRootSpinCorrGen[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootSpinCorrGen;
     } else {
       p = new((void*) gvp) TopTree::TRootSpinCorrGen;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootSpinCorrGen));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootSpinCorrGen* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootSpinCorrGen(*(TopTree::TRootSpinCorrGen*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootSpinCorrGen(*(TopTree::TRootSpinCorrGen*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootSpinCorrGen));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootSpinCorrGen*) G__getstructoffset())->cosThetaTLHel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootSpinCorrGen*) G__getstructoffset())->cosThetaTBHel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootSpinCorrGen*) G__getstructoffset())->cosThetaTQHel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootSpinCorrGen*) G__getstructoffset())->cosPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TopTree::TRootSpinCorrGen*) G__getstructoffset())->topsZMFMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootSpinCorrGen*) G__getstructoffset())->setcosThetaTLHel((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootSpinCorrGen*) G__getstructoffset())->setcosThetaTBHel((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootSpinCorrGen*) G__getstructoffset())->setcosThetaTQHel((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootSpinCorrGen*) G__getstructoffset())->setcosPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootSpinCorrGen*) G__getstructoffset())->settopsZMFMass((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TopTree::TRootSpinCorrGen*) G__getstructoffset())->typeName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootSpinCorrGen::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootSpinCorrGen::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootSpinCorrGen::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootSpinCorrGen::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootSpinCorrGen*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootSpinCorrGen::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootSpinCorrGen::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootSpinCorrGen::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_760_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootSpinCorrGen::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootSpinCorrGen G__TTopTreecLcLTRootSpinCorrGen;
static int G__Dict_760_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootSpinCorrGen*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootSpinCorrGen*) (soff+(sizeof(TopTree::TRootSpinCorrGen)*i)))->~G__TTopTreecLcLTRootSpinCorrGen();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootSpinCorrGen*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootSpinCorrGen*) (soff))->~G__TTopTreecLcLTRootSpinCorrGen();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_760_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootSpinCorrGen* dest = (TopTree::TRootSpinCorrGen*) G__getstructoffset();
   *dest = *(TopTree::TRootSpinCorrGen*) libp->para[0].ref;
   const TopTree::TRootSpinCorrGen& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootTrackMET */
static int G__Dict_761_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootTrackMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootTrackMET[n];
     } else {
       p = new((void*) gvp) TopTree::TRootTrackMET[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootTrackMET;
     } else {
       p = new((void*) gvp) TopTree::TRootTrackMET;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootTrackMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootTrackMET(*(TopTree::TRootTrackMET*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootTrackMET(*(TopTree::TRootTrackMET*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootTrackMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootTrackMET(*(TopTree::TRootMET*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootTrackMET(*(TopTree::TRootMET*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootTrackMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootTrackMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootTrackMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootTrackMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootTrackMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TopTree::TRootTrackMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootTrackMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootTrackMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) TopTree::TRootTrackMET(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootTrackMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootTrackMET(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootTrackMET(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootTrackMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootTrackMET(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TopTree::TRootTrackMET(
*(TLorentzVector*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootTrackMET::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootTrackMET::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootTrackMET::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootTrackMET::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootTrackMET*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootTrackMET::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootTrackMET::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootTrackMET::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_761_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootTrackMET::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootTrackMET G__TTopTreecLcLTRootTrackMET;
static int G__Dict_761_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootTrackMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootTrackMET*) (soff+(sizeof(TopTree::TRootTrackMET)*i)))->~G__TTopTreecLcLTRootTrackMET();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootTrackMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootTrackMET*) (soff))->~G__TTopTreecLcLTRootTrackMET();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_761_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootTrackMET* dest = (TopTree::TRootTrackMET*) G__getstructoffset();
   *dest = *(TopTree::TRootTrackMET*) libp->para[0].ref;
   const TopTree::TRootTrackMET& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TopTree::TRootVertex */
static int G__Dict_762_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootVertex[n];
     } else {
       p = new((void*) gvp) TopTree::TRootVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TopTree::TRootVertex;
     } else {
       p = new((void*) gvp) TopTree::TRootVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootVertex(*(TopTree::TRootVertex*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TopTree::TRootVertex(*(TopTree::TRootVertex*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TopTree::TRootVertex(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) TopTree::TRootVertex(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootVertex*) G__getstructoffset())->isValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TopTree::TRootVertex*) G__getstructoffset())->isFake());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootVertex*) G__getstructoffset())->chi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootVertex*) G__getstructoffset())->ndof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootVertex*) G__getstructoffset())->normalizedChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TopTree::TRootVertex*) G__getstructoffset())->tracksSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootVertex*) G__getstructoffset())->xError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootVertex*) G__getstructoffset())->yError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TopTree::TRootVertex*) G__getstructoffset())->zError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootVertex*) G__getstructoffset())->setIsValid((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootVertex*) G__getstructoffset())->setIsFake((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootVertex*) G__getstructoffset())->setChi2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootVertex*) G__getstructoffset())->setNdof((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootVertex*) G__getstructoffset())->setTracksSize((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootVertex*) G__getstructoffset())->setXError((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootVertex*) G__getstructoffset())->setYError((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootVertex*) G__getstructoffset())->setZError((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TopTree::TRootVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TopTree::TRootVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TopTree::TRootVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TopTree::TRootVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TopTree::TRootVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_762_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TopTree::TRootVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TopTree::TRootVertex G__TTopTreecLcLTRootVertex;
static int G__Dict_762_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TopTree::TRootVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TopTree::TRootVertex*) (soff+(sizeof(TopTree::TRootVertex)*i)))->~G__TTopTreecLcLTRootVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TopTree::TRootVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TopTree::TRootVertex*) (soff))->~G__TTopTreecLcLTRootVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_762_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TopTree::TRootVertex* dest = (TopTree::TRootVertex*) G__getstructoffset();
   *dest = *(TopTree::TRootVertex*) libp->para[0].ref;
   const TopTree::TRootVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LightMonster */
static int G__Dict_770_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LightMonster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LightMonster[n];
     } else {
       p = new((void*) gvp) LightMonster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LightMonster;
     } else {
       p = new((void*) gvp) LightMonster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_LightMonster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LightMonster*) G__getstructoffset())->eventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LightMonster*) G__getstructoffset())->runID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LightMonster*) G__getstructoffset())->lumiBlockID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LightMonster*) G__getstructoffset())->idParton1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LightMonster*) G__getstructoffset())->xParton1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LightMonster*) G__getstructoffset())->idParton2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LightMonster*) G__getstructoffset())->xParton2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LightMonster*) G__getstructoffset())->factorizationScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LightMonster*) G__getstructoffset())->nPV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LightMonster*) G__getstructoffset())->nPUBXm1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LightMonster*) G__getstructoffset())->nPU());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LightMonster*) G__getstructoffset())->nPUBXp1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LightMonster*) G__getstructoffset())->nTruePU());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LightMonster*) G__getstructoffset())->topMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LightMonster*) G__getstructoffset())->antiTopMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const LightMonster*) G__getstructoffset())->selectedSemiMu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const LightMonster*) G__getstructoffset())->semiMuDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const LightMonster*) G__getstructoffset())->semiElDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const LightMonster*) G__getstructoffset())->topDecayedLept());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const LightMonster*) G__getstructoffset())->all4JetsMCMatched());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const LightMonster*) G__getstructoffset())->allHadronicJetsMCMatched());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((LightMonster*) G__getstructoffset())->mvaVals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LightMonster*) G__getstructoffset())->mvaVal((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((LightMonster*) G__getstructoffset())->mvaResult((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LightMonster*) G__getstructoffset())->eventWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((LightMonster*) G__getstructoffset())->mTopFit((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((LightMonster*) G__getstructoffset())->sigmaMTopFit((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((LightMonster*) G__getstructoffset())->chi2MTopFit((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LightMonster*) G__getstructoffset())->hadrBJet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LightMonster*) G__getstructoffset())->hadrLJet1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LightMonster*) G__getstructoffset())->hadrLJet2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LightMonster*) G__getstructoffset())->leptBJet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const LightMonster*) G__getstructoffset())->met();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector>* pobj;
         const vector<TLorentzVector> xobj = ((const LightMonster*) G__getstructoffset())->selectedJets();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const LightMonster*) G__getstructoffset())->selectedJet((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>* pobj;
         const vector<float> xobj = ((const LightMonster*) G__getstructoffset())->bTagCSV();
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const LightMonster*) G__getstructoffset())->lepton();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LightMonster*) G__getstructoffset())->leptonCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LightMonster*) G__getstructoffset())->leptonPFRelIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const LightMonster*) G__getstructoffset())->hadrBQuark();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const LightMonster*) G__getstructoffset())->hadrLQuark1();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const LightMonster*) G__getstructoffset())->hadrLQuark2();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const LightMonster*) G__getstructoffset())->leptBQuark();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setEventID((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setRunID((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setLumiBlockID((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setIdParton1((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setXParton1((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setIdParton2((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setXParton2((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setFactorizationScale((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setNPV((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setNPUBXm1((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setNPU((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setNPUBXp1((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setNTruePU((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setTopMass((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setAntiTopMass((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setSelectedSemiMu((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setSemiMuDecay((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setSemiElDecay((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setTopDecayedLept((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setAll4JetsMCMatched((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setAllHadronicJetsMCMatched((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setMvaVals(*((vector<float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setMvaResults(*((vector<vector<unsigned int> >*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setEventWeight((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setMTopFitResults(*((vector<vector<float> >*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setHadrBJet((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setHadrLJet1((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setHadrLJet2((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setLeptBJet((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setMET(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setSelectedJets(*((vector<TLorentzVector>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setBTagCSV(*((vector<float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setLepton(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setLeptonCharge((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setLeptonPFRelIso((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setHadrBQuark(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setHadrLQuark1(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setHadrLQuark2(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->setLeptBQuark(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LightMonster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LightMonster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LightMonster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LightMonster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LightMonster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LightMonster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LightMonster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LightMonster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_770_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LightMonster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_770_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LightMonster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LightMonster(*(LightMonster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_LightMonster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LightMonster G__TLightMonster;
static int G__Dict_770_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LightMonster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LightMonster*) (soff+(sizeof(LightMonster)*i)))->~G__TLightMonster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LightMonster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LightMonster*) (soff))->~G__TLightMonster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_770_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LightMonster* dest = (LightMonster*) G__getstructoffset();
   *dest = *(LightMonster*) libp->para[0].ref;
   const LightMonster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WTree */
static int G__Dict_775_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WTree[n];
     } else {
       p = new((void*) gvp) WTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WTree;
     } else {
       p = new((void*) gvp) WTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_WTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const WTree*) G__getstructoffset())->eventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const WTree*) G__getstructoffset())->runID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const WTree*) G__getstructoffset())->lumiBlockID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const WTree*) G__getstructoffset())->nPV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const WTree*) G__getstructoffset())->nPUBXm1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const WTree*) G__getstructoffset())->nPU());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const WTree*) G__getstructoffset())->nPUBXp1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WTree*) G__getstructoffset())->eventWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((WTree*) G__getstructoffset())->chi2KinFit((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedLepton((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedNeutrino((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedLeptB((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedHadrB((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedLight1((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedLight2((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((WTree*) G__getstructoffset())->chi2FullKinFit((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedFullLepton((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedFullNeutrino((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedFullLeptB((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedFullHadrB((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedFullLight1((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedFullLight2((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((WTree*) G__getstructoffset())->chi2KinFitMassFit((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedLeptonMassFit((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedNeutrinoMassFit((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedLeptBMassFit((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedHadrBMassFit((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedLight1MassFit((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedLight2MassFit((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((WTree*) G__getstructoffset())->chi2FullKinFitMassFit((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedFullLeptonMassFit((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedFullNeutrinoMassFit((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedFullLeptBMassFit((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedFullHadrBMassFit((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedFullLight1MassFit((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((WTree*) G__getstructoffset())->fittedFullLight2MassFit((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WTree*) G__getstructoffset())->hadrBJet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WTree*) G__getstructoffset())->hadrLJet1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WTree*) G__getstructoffset())->hadrLJet2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WTree*) G__getstructoffset())->leptBJet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const WTree*) G__getstructoffset())->met();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector>* pobj;
         const vector<TLorentzVector> xobj = ((const WTree*) G__getstructoffset())->selectedJets();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const WTree*) G__getstructoffset())->selectedJet((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>* pobj;
         const vector<float> xobj = ((const WTree*) G__getstructoffset())->bTagTCHE();
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>* pobj;
         const vector<float> xobj = ((const WTree*) G__getstructoffset())->bTagTCHP();
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>* pobj;
         const vector<float> xobj = ((const WTree*) G__getstructoffset())->bTagSSVHE();
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>* pobj;
         const vector<float> xobj = ((const WTree*) G__getstructoffset())->bTagSSVHP();
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>* pobj;
         const vector<float> xobj = ((const WTree*) G__getstructoffset())->bTagCSV();
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const WTree*) G__getstructoffset())->muon();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const WTree*) G__getstructoffset())->hadrBQuark();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const WTree*) G__getstructoffset())->hadrLQuark1();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const WTree*) G__getstructoffset())->hadrLQuark2();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const WTree*) G__getstructoffset())->leptBQuark();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WTree*) G__getstructoffset())->standardCosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const WTree*) G__getstructoffset())->standardNeutrino();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const WTree*) G__getstructoffset())->standardLepton();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setEventID((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setRunID((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setLumiBlockID((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setNPV((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setNPUBXm1((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setNPU((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setNPUBXp1((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setEventWeight((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setKinFitResults(
*((vector<float>*) G__int(libp->para[0])), *((vector<TLorentzVector>*) G__int(libp->para[1]))
, *((vector<TLorentzVector>*) G__int(libp->para[2])), *((vector<TLorentzVector>*) G__int(libp->para[3]))
, *((vector<TLorentzVector>*) G__int(libp->para[4])), *((vector<TLorentzVector>*) G__int(libp->para[5]))
, *((vector<TLorentzVector>*) G__int(libp->para[6])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setFullKinFitResults(
*((vector<float>*) G__int(libp->para[0])), *((vector<TLorentzVector>*) G__int(libp->para[1]))
, *((vector<TLorentzVector>*) G__int(libp->para[2])), *((vector<TLorentzVector>*) G__int(libp->para[3]))
, *((vector<TLorentzVector>*) G__int(libp->para[4])), *((vector<TLorentzVector>*) G__int(libp->para[5]))
, *((vector<TLorentzVector>*) G__int(libp->para[6])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setKinFitResultsMassFit(
*((vector<float>*) G__int(libp->para[0])), *((vector<TLorentzVector>*) G__int(libp->para[1]))
, *((vector<TLorentzVector>*) G__int(libp->para[2])), *((vector<TLorentzVector>*) G__int(libp->para[3]))
, *((vector<TLorentzVector>*) G__int(libp->para[4])), *((vector<TLorentzVector>*) G__int(libp->para[5]))
, *((vector<TLorentzVector>*) G__int(libp->para[6])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setFullKinFitResultsMassFit(
*((vector<float>*) G__int(libp->para[0])), *((vector<TLorentzVector>*) G__int(libp->para[1]))
, *((vector<TLorentzVector>*) G__int(libp->para[2])), *((vector<TLorentzVector>*) G__int(libp->para[3]))
, *((vector<TLorentzVector>*) G__int(libp->para[4])), *((vector<TLorentzVector>*) G__int(libp->para[5]))
, *((vector<TLorentzVector>*) G__int(libp->para[6])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setHadrBJet((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setHadrLJet1((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setHadrLJet2((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setLeptBJet((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setMET(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setSelectedJets(*((vector<TLorentzVector>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setBTagTCHE(*((vector<float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setBTagTCHP(*((vector<float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setBTagSSVHE(*((vector<float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setBTagSSVHP(*((vector<float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setBTagCSV(*((vector<float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setMuon(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setHadrBQuark(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setHadrLQuark1(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setHadrLQuark2(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setLeptBQuark(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setStandardCosTheta((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setStandardNeutrino(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->setStandardLepton(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_775_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_775_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WTree(*(WTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_WTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WTree G__TWTree;
static int G__Dict_775_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WTree*) (soff+(sizeof(WTree)*i)))->~G__TWTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WTree*) (soff))->~G__TWTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_775_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WTree* dest = (WTree*) G__getstructoffset();
   *dest = *(WTree*) libp->para[0].ref;
   const WTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* InclFourthGenTree */
static int G__Dict_776_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   InclFourthGenTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new InclFourthGenTree[n];
     } else {
       p = new((void*) gvp) InclFourthGenTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new InclFourthGenTree;
     } else {
       p = new((void*) gvp) InclFourthGenTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_InclFourthGenTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const InclFourthGenTree*) G__getstructoffset())->eventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const InclFourthGenTree*) G__getstructoffset())->runID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const InclFourthGenTree*) G__getstructoffset())->lumiBlockID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const InclFourthGenTree*) G__getstructoffset())->nPV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const InclFourthGenTree*) G__getstructoffset())->nPUBXm1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const InclFourthGenTree*) G__getstructoffset())->nPU());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const InclFourthGenTree*) G__getstructoffset())->nPUBXp1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const InclFourthGenTree*) G__getstructoffset())->flavorHistoryPath());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->SelectedSingleLepton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->SelectedSingleMu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->SelectedSingleEl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->SelectedSSLepton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->SelectedSSMu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->SelectedSSEl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->SelectedSSMuEl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->SelectedTriLepton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->SelectedMuMuMu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->SelectedMuMuEl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->SelectedMuElEl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->SelectedElElEl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->isEE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->isEB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->isEEEE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->isEBEE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->isEBEB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->semiMuDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->semiElDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const InclFourthGenTree*) G__getstructoffset())->Wbosonpartonsmatched());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const InclFourthGenTree*) G__getstructoffset())->WMassmatched());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((InclFourthGenTree*) G__getstructoffset())->eventWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const InclFourthGenTree*) G__getstructoffset())->met();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector>* pobj;
         const vector<TLorentzVector> xobj = ((const InclFourthGenTree*) G__getstructoffset())->selectedJets();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const InclFourthGenTree*) G__getstructoffset())->selectedJet((int) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>* pobj;
         const vector<float> xobj = ((const InclFourthGenTree*) G__getstructoffset())->bTagTCHE();
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>* pobj;
         const vector<float> xobj = ((const InclFourthGenTree*) G__getstructoffset())->bTagTCHP();
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const InclFourthGenTree*) G__getstructoffset())->partonFlavourJet();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector>* pobj;
         const vector<TLorentzVector> xobj = ((const InclFourthGenTree*) G__getstructoffset())->selectedForwardJets();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector>* pobj;
         const vector<TLorentzVector> xobj = ((const InclFourthGenTree*) G__getstructoffset())->InitJets();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>* pobj;
         const vector<float> xobj = ((const InclFourthGenTree*) G__getstructoffset())->InitJetsbTagTCHE();
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>* pobj;
         const vector<float> xobj = ((const InclFourthGenTree*) G__getstructoffset())->InitJetsbTagTCHP();
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector>* pobj;
         const vector<TLorentzVector> xobj = ((const InclFourthGenTree*) G__getstructoffset())->selectedMuons();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector>* pobj;
         const vector<TLorentzVector> xobj = ((const InclFourthGenTree*) G__getstructoffset())->selectedElectrons();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>* pobj;
         const vector<float> xobj = ((const InclFourthGenTree*) G__getstructoffset())->selectedMuonsRelIso();
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>* pobj;
         const vector<float> xobj = ((const InclFourthGenTree*) G__getstructoffset())->selectedElectronsRelIso();
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector>* pobj;
         const vector<TLorentzVector> xobj = ((const InclFourthGenTree*) G__getstructoffset())->mcQuarksForMatching();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((InclFourthGenTree*) G__getstructoffset())->chargeMisIdRateBarrel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((InclFourthGenTree*) G__getstructoffset())->chargeMisIdRateEndcap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector>* pobj;
         const vector<TLorentzVector> xobj = ((const InclFourthGenTree*) G__getstructoffset())->quarksFromW();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setEventID((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setRunID((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setLumiBlockID((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setNPV((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setNPUBXm1((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setNPU((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setNPUBXp1((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setFlavorHistoryPath((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedSingleLepton((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedSingleMu((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedSingleEl((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedSSLepton((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedSSMu((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedSSEl((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedSSMuEl((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedTriLepton((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedMuMuMu((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedMuMuEl((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedMuElEl((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedElElEl((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedEE((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedEB((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedEEEE((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedEBEE((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedEBEB((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSemiMuDecay((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSemiElDecay((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setWbosonpartonsmatched((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setWMassmatched((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setEventWeight((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setMET(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedJets(*((vector<TLorentzVector>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setBTagTCHE(*((vector<float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setBTagTCHP(*((vector<float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setpartonFlavourJet(*((vector<int>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setSelectedForwardJets(*((vector<TLorentzVector>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setInitJets(*((vector<TLorentzVector>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setInitJetsBTagTCHE(*((vector<float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setInitJetsBTagTCHP(*((vector<float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setMuons(*((vector<TLorentzVector>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setElectrons(*((vector<TLorentzVector>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setMuonsRelIso(*((vector<float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setElectronsRelIso(*((vector<float>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setmcQuarksForMatching(*((vector<TLorentzVector>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setChargeMisIdRateBarrel((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setChargeMisIdRateEndcap((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->setQuarksFromW(*((vector<TLorentzVector>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) InclFourthGenTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) InclFourthGenTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) InclFourthGenTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      InclFourthGenTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InclFourthGenTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) InclFourthGenTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) InclFourthGenTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) InclFourthGenTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_776_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) InclFourthGenTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_776_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   InclFourthGenTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new InclFourthGenTree(*(InclFourthGenTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_InclFourthGenTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef InclFourthGenTree G__TInclFourthGenTree;
static int G__Dict_776_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (InclFourthGenTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((InclFourthGenTree*) (soff+(sizeof(InclFourthGenTree)*i)))->~G__TInclFourthGenTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (InclFourthGenTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((InclFourthGenTree*) (soff))->~G__TInclFourthGenTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_776_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   InclFourthGenTree* dest = (InclFourthGenTree*) G__getstructoffset();
   *dest = *(InclFourthGenTree*) libp->para[0].ref;
   const InclFourthGenTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* VJetEstimation */
static int G__Dict_1366_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VJetEstimation* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VJetEstimation[n];
     } else {
       p = new((void*) gvp) VJetEstimation[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VJetEstimation;
     } else {
       p = new((void*) gvp) VJetEstimation;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_VJetEstimation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VJetEstimation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new VJetEstimation(
(UInt_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, *((vector<Dataset>*) G__int(libp->para[4])), *((vector<std::string>*) G__int(libp->para[5]))
, *((vector<std::string>*) G__int(libp->para[6])), *((vector<std::string>*) G__int(libp->para[7])));
   } else {
     p = new((void*) gvp) VJetEstimation(
(UInt_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, *((vector<Dataset>*) G__int(libp->para[4])), *((vector<std::string>*) G__int(libp->para[5]))
, *((vector<std::string>*) G__int(libp->para[6])), *((vector<std::string>*) G__int(libp->para[7])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_VJetEstimation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VJetEstimation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new VJetEstimation(
(UInt_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Double_t**) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, *((vector<Int_t>*) G__int(libp->para[6])), *((vector<Int_t>*) G__int(libp->para[7]))
, *((vector<Int_t>*) G__int(libp->para[8])));
   } else {
     p = new((void*) gvp) VJetEstimation(
(UInt_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Double_t**) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, *((vector<Int_t>*) G__int(libp->para[6])), *((vector<Int_t>*) G__int(libp->para[7]))
, *((vector<Int_t>*) G__int(libp->para[8])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_VJetEstimation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VJetEstimation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new VJetEstimation(*(VJetEstimation*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) VJetEstimation(*(VJetEstimation*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_VJetEstimation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((VJetEstimation*) G__getstructoffset())->Fill(*(vector<TopTree::TRootJet*>*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Double_t (*)(TopTree::TRootJet*)) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((VJetEstimation*) G__getstructoffset())->Fill(*(vector<TopTree::TRootJet*>*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Double_t (*)(TopTree::TRootJet*)) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->FillInputs(*((vector<vector<vector<vector<Double_t> > > >*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->FillInputs(*((vector<vector<vector<vector<Double_t> > > >*) G__int(libp->para[0])), *((vector<vector<vector<Double_t> > >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->ReScaleInputs((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((VJetEstimation*) G__getstructoffset())->WilsonScoreIntervalLow((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((VJetEstimation*) G__getstructoffset())->WilsonScoreIntervalHigh((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((VJetEstimation*) G__getstructoffset())->WilsonScoreIntervalMean((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetProcesses(*((vector<Bool_t>*) G__int(libp->para[0])), *((vector<std::string>*) G__int(libp->para[1]))
, *((vector<std::string>*) G__int(libp->para[2])), *((vector<std::string>*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SumOverAllInputs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->ComputeEffbqFromMC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->ComputeEffFromMC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->FillSummaryHistos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->BckgdSubstraction(*(vector<MCObsExpectation*>*) libp->para[0].ref, *(vector<string>*) libp->para[1].ref
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetInitialValues_Nttlike(*((vector<Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetInitialValues_Nttlike((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetInitialValues_Nttlike((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetInitialValues_Nvlike(*((vector<Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetInitialValues_Nvlike((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetInitialValues_Nvlike((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetInitialValues_Eb(*((vector<vector<Double_t> >*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetInitialValues_Eb((UInt_t) G__int(libp->para[0]), *((vector<Double_t>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetInitialValues_Eb((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetInitialValues_Eb((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetInitialValues_Eudsc(*((vector<vector<Double_t> >*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetInitialValues_Eudsc((UInt_t) G__int(libp->para[0]), *((vector<Double_t>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetInitialValues_Eudsc((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetInitialValues_Eudsc((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetInitialValues_Euds(*((vector<vector<Double_t> >*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetInitialValues_Euds((UInt_t) G__int(libp->para[0]), *((vector<Double_t>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetInitialValues_Euds((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->UnBinnedMaximumLikelihoodEst((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, *(vector<Int_t>*) libp->para[2].ref, (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->UnBinnedMaximumLikelihoodEst((UInt_t) G__int(libp->para[0]), *(vector<Int_t>*) libp->para[1].ref
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->UnBinnedMaximumLikelihoodEst(*(vector<Int_t>*) libp->para[0].ref, (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->UnBinnedMaximumJointWPLikelihoodEst((UInt_t) G__int(libp->para[0]), *(vector<Int_t>*) libp->para[1].ref
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->UnBinnedMaximumJointWPLikelihoodEst(*(vector<Int_t>*) libp->para[0].ref, (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->PrintInputs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->PrintInputs((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->PrintResults();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->PrintResults((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((VJetEstimation*) G__getstructoffset())->PrintResults_LatexFormat(*(ostream*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((VJetEstimation*) G__getstructoffset())->PrintResults_LatexFormat(*(ostream*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((VJetEstimation*) G__getstructoffset())->PrintResults_LatexFormat(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((VJetEstimation*) G__getstructoffset())->PrintResults_LatexFormat((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((VJetEstimation*) G__getstructoffset())->PrintResults_LatexFormat((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((VJetEstimation*) G__getstructoffset())->PrintResults_LatexFormat();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((VJetEstimation*) G__getstructoffset())->CheckEstimation((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((VJetEstimation*) G__getstructoffset())->CheckEstimation((Double_t) G__double(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->CheckEstimationLinearity(*(vector<Int_t>*) libp->para[0].ref, (bool) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t**) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const VJetEstimation*) G__getstructoffset())->GetNbOfBtagWorkingPoint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const VJetEstimation*) G__getstructoffset())->GetNbOfDatasets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const VJetEstimation*) G__getstructoffset())->GetNbOfBJetsBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const VJetEstimation*) G__getstructoffset())->GetNbOfJetsBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const VJetEstimation*) G__getstructoffset())->GetNjets((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Dataset>* pobj;
         const vector<Dataset> xobj = ((const VJetEstimation*) G__getstructoffset())->GetDatasets();
         pobj = new vector<Dataset>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Int_t>* pobj;
         const vector<Int_t> xobj = ((const VJetEstimation*) G__getstructoffset())->GetiDatasetsTTLike();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Int_t>* pobj;
         const vector<Int_t> xobj = ((const VJetEstimation*) G__getstructoffset())->GetiDatasetsVLike();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Int_t>* pobj;
         const vector<Int_t> xobj = ((const VJetEstimation*) G__getstructoffset())->GetiDatasetsVbLike();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<vector<vector<Double_t> > > >* pobj;
         const vector<vector<vector<vector<Double_t> > > > xobj = ((const VJetEstimation*) G__getstructoffset())->GetN();
         pobj = new vector<vector<vector<vector<Double_t> > > >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<vector<Double_t> > >* pobj;
         const vector<vector<vector<Double_t> > > xobj = ((const VJetEstimation*) G__getstructoffset())->GetN((UInt_t) G__int(libp->para[0]));
         pobj = new vector<vector<vector<Double_t> > >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<Double_t> >* pobj;
         const vector<vector<Double_t> > xobj = ((const VJetEstimation*) G__getstructoffset())->GetN((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new vector<vector<Double_t> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const VJetEstimation*) G__getstructoffset())->GetN((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetN((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<vector<Double_t> > >* pobj;
         const vector<vector<vector<Double_t> > > xobj = ((const VJetEstimation*) G__getstructoffset())->GetNbjets();
         pobj = new vector<vector<vector<Double_t> > >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<Double_t> >* pobj;
         const vector<vector<Double_t> > xobj = ((const VJetEstimation*) G__getstructoffset())->GetNbjets((UInt_t) G__int(libp->para[0]));
         pobj = new vector<vector<Double_t> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const VJetEstimation*) G__getstructoffset())->GetNbjets((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetNbjets((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetMinLL((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredEb((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredEb((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredEbErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredEbErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetPredEb((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredEudsc((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredEudsc((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredEudscErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredEudscErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetPredEudsc((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredEuds((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredEuds((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredEudsErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredEudsErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->SetPredEuds((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNv((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNv((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNv((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNvErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNvErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNvErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNvb((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNvb((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNvb((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNvbErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNvbErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNvbErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNtt((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNtt((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNtt((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNttErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNttErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNttErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNtotal((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNtotal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredNtotal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredN((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetPredN((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEb((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEb((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEbErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEbErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEbErrHigh((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEbErrLow((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEudsc((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEudsc((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEudscErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEudscErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEudscErrHigh((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEudscErrLow((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEuds((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEuds((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEudsErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEudsErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEudsErrHigh((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstEudsErrLow((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNv((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNv((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNv((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNvErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNvErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNvErrUp((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNvErrDown((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNvErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNvb((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNvb((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNvb((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNvbErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNvbErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNvbErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNtt((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNtt((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNtt((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNttErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNttErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNttErrUp((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNttErrDown((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNttErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNtotal((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNtotal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetEstNtotal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetTTEff2bq((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const VJetEstimation*) G__getstructoffset())->SetTTEff2bq((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetTTEff1bq((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_152(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const VJetEstimation*) G__getstructoffset())->SetTTEff1bq((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetTTEff0bq((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const VJetEstimation*) G__getstructoffset())->SetTTEff0bq((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const VJetEstimation*) G__getstructoffset())->GetBtagWorkingPoint((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_156(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const VJetEstimation*) G__getstructoffset())->SetBtagWorkingPoint((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_187(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) VJetEstimation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_188(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VJetEstimation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_189(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) VJetEstimation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_190(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      VJetEstimation::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_194(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VJetEstimation*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_195(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VJetEstimation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_196(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) VJetEstimation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_197(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VJetEstimation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_1366_0_198(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) VJetEstimation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef VJetEstimation G__TVJetEstimation;
static int G__Dict_1366_0_199(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (VJetEstimation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((VJetEstimation*) (soff+(sizeof(VJetEstimation)*i)))->~G__TVJetEstimation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (VJetEstimation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((VJetEstimation*) (soff))->~G__TVJetEstimation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_1366_0_200(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VJetEstimation* dest = (VJetEstimation*) G__getstructoffset();
   *dest = *(VJetEstimation*) libp->para[0].ref;
   const VJetEstimation& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TopTree::TRootParticle */

/* TopTree::TRootJet */

/* TopTree::TRootMuon */

/* TopTree::TRootGenEvent */

/* TopTree::TRootMCParticle */

/* TopTree::TRootGenTop */

/* TopTree::TRootNPGenEvent */

/* TopTree::TRootMET */

/* AnalysisEnvironment */

/* BinningFirstGuess */

/* Container */

/* Dataset */

/* MCExpectation */

/* MCObsExpectation */

/* TopTree::TRootCaloJet */

/* TopTree::TRootCaloMET */

/* TopTree::TRootElectron */

/* TopTree::triggeredObject */

/* TopTree::TRootEvent */

/* TopTree::TRootGenJet */

/* TopTree::TRootHLTInfo */

/* TopTree::TRootJPTJet */

/* TopTree::TRootPFJet */

/* TopTree::TRootPFMET */

/* TopTree::TRootRun */

/* TopTree::TRootSpinCorrGen */

/* TopTree::TRootTrackMET */

/* TopTree::TRootVertex */

/* LightMonster */

/* WTree */

/* InclFourthGenTree */

/* VJetEstimation */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDict {
 public:
  G__Sizep2memfuncDict(): p(&G__Sizep2memfuncDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDict::*p)();
};

size_t G__get_sizep2memfuncDict()
{
  G__Sizep2memfuncDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle))) {
     TopTree::TRootParticle *G__Lderived;
     G__Lderived=(TopTree::TRootParticle*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet))) {
     TopTree::TRootJet *G__Lderived;
     G__Lderived=(TopTree::TRootJet*)0x1000;
     {
       TopTree::TRootParticle *G__Lpbase=(TopTree::TRootParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon))) {
     TopTree::TRootMuon *G__Lderived;
     G__Lderived=(TopTree::TRootMuon*)0x1000;
     {
       TopTree::TRootParticle *G__Lpbase=(TopTree::TRootParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEvent))) {
     TopTree::TRootGenEvent *G__Lderived;
     G__Lderived=(TopTree::TRootGenEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEvent),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle))) {
     TopTree::TRootMCParticle *G__Lderived;
     G__Lderived=(TopTree::TRootMCParticle*)0x1000;
     {
       TopTree::TRootParticle *G__Lpbase=(TopTree::TRootParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop))) {
     TopTree::TRootGenTop *G__Lderived;
     G__Lderived=(TopTree::TRootGenTop*)0x1000;
     {
       TopTree::TRootMCParticle *G__Lpbase=(TopTree::TRootMCParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TopTree::TRootParticle *G__Lpbase=(TopTree::TRootParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootNPGenEvent))) {
     TopTree::TRootNPGenEvent *G__Lderived;
     G__Lderived=(TopTree::TRootNPGenEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootNPGenEvent),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET))) {
     TopTree::TRootMET *G__Lderived;
     G__Lderived=(TopTree::TRootMET*)0x1000;
     {
       TopTree::TRootParticle *G__Lpbase=(TopTree::TRootParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_AnalysisEnvironment))) {
     AnalysisEnvironment *G__Lderived;
     G__Lderived=(AnalysisEnvironment*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_AnalysisEnvironment),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_BinningFirstGuess))) {
     BinningFirstGuess *G__Lderived;
     G__Lderived=(BinningFirstGuess*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_BinningFirstGuess),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_Container))) {
     Container *G__Lderived;
     G__Lderived=(Container*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_Container),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_Dataset))) {
     Dataset *G__Lderived;
     G__Lderived=(Dataset*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_Dataset),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_MCExpectation))) {
     MCExpectation *G__Lderived;
     G__Lderived=(MCExpectation*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_MCExpectation),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_MCObsExpectation))) {
     MCObsExpectation *G__Lderived;
     G__Lderived=(MCObsExpectation*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_MCObsExpectation),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet))) {
     TopTree::TRootCaloJet *G__Lderived;
     G__Lderived=(TopTree::TRootCaloJet*)0x1000;
     {
       TopTree::TRootJet *G__Lpbase=(TopTree::TRootJet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TopTree::TRootParticle *G__Lpbase=(TopTree::TRootParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET))) {
     TopTree::TRootCaloMET *G__Lderived;
     G__Lderived=(TopTree::TRootCaloMET*)0x1000;
     {
       TopTree::TRootMET *G__Lpbase=(TopTree::TRootMET*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TopTree::TRootParticle *G__Lpbase=(TopTree::TRootParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron))) {
     TopTree::TRootElectron *G__Lderived;
     G__Lderived=(TopTree::TRootElectron*)0x1000;
     {
       TopTree::TRootParticle *G__Lpbase=(TopTree::TRootParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootEvent))) {
     TopTree::TRootEvent *G__Lderived;
     G__Lderived=(TopTree::TRootEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootEvent),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet))) {
     TopTree::TRootGenJet *G__Lderived;
     G__Lderived=(TopTree::TRootGenJet*)0x1000;
     {
       TopTree::TRootParticle *G__Lpbase=(TopTree::TRootParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootHLTInfo))) {
     TopTree::TRootHLTInfo *G__Lderived;
     G__Lderived=(TopTree::TRootHLTInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootHLTInfo),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet))) {
     TopTree::TRootJPTJet *G__Lderived;
     G__Lderived=(TopTree::TRootJPTJet*)0x1000;
     {
       TopTree::TRootJet *G__Lpbase=(TopTree::TRootJet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TopTree::TRootParticle *G__Lpbase=(TopTree::TRootParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet))) {
     TopTree::TRootPFJet *G__Lderived;
     G__Lderived=(TopTree::TRootPFJet*)0x1000;
     {
       TopTree::TRootJet *G__Lpbase=(TopTree::TRootJet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TopTree::TRootParticle *G__Lpbase=(TopTree::TRootParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET))) {
     TopTree::TRootPFMET *G__Lderived;
     G__Lderived=(TopTree::TRootPFMET*)0x1000;
     {
       TopTree::TRootMET *G__Lpbase=(TopTree::TRootMET*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TopTree::TRootParticle *G__Lpbase=(TopTree::TRootParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootRun))) {
     TopTree::TRootRun *G__Lderived;
     G__Lderived=(TopTree::TRootRun*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootRun),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootSpinCorrGen))) {
     TopTree::TRootSpinCorrGen *G__Lderived;
     G__Lderived=(TopTree::TRootSpinCorrGen*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootSpinCorrGen),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET))) {
     TopTree::TRootTrackMET *G__Lderived;
     G__Lderived=(TopTree::TRootTrackMET*)0x1000;
     {
       TopTree::TRootMET *G__Lpbase=(TopTree::TRootMET*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TopTree::TRootParticle *G__Lpbase=(TopTree::TRootParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET),G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET),G__get_linked_tagnum(&G__DictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootVertex))) {
     TopTree::TRootVertex *G__Lderived;
     G__Lderived=(TopTree::TRootVertex*)0x1000;
     {
       TVector3 *G__Lpbase=(TVector3*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootVertex),G__get_linked_tagnum(&G__DictLN_TVector3),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootVertex),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_LightMonster))) {
     LightMonster *G__Lderived;
     G__Lderived=(LightMonster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_LightMonster),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_WTree))) {
     WTree *G__Lderived;
     G__Lderived=(WTree*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_WTree),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_InclFourthGenTree))) {
     InclFourthGenTree *G__Lderived;
     G__Lderived=(InclFourthGenTree*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_InclFourthGenTree),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_VJetEstimation))) {
     VJetEstimation *G__Lderived;
     G__Lderived=(VJetEstimation*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_VJetEstimation),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,float>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TLorentzVector>",117,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TopTree::TRootGenTop>",117,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TopTree::TRootMCParticle>",117,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TRootGenTop>",117,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgR),0,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootNPGenEvent));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TRootMCParticle>",117,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR),0,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootNPGenEvent));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TRootJet>",117,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootJetcOallocatorlETopTreecLcLTRootJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootJetcOallocatorlETopTreecLcLTRootJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootJetcOallocatorlETopTreecLcLTRootJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootJetcOallocatorlETopTreecLcLTRootJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootJetcOallocatorlETopTreecLcLTRootJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TopTree::TRootJet>",117,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootJetcOallocatorlETopTreecLcLTRootJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TRootJet*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootJetmUcOallocatorlETopTreecLcLTRootJetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootJetmUcOallocatorlETopTreecLcLTRootJetmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootJetmUcOallocatorlETopTreecLcLTRootJetmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootJetmUcOallocatorlETopTreecLcLTRootJetmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootJetmUcOallocatorlETopTreecLcLTRootJetmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TopTree::TRootJet*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootJetmUcOallocatorlETopTreecLcLTRootJetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,float> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<float,float> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<float> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TAxis*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTAxismUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTAxismUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TAxis*,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTAxismUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTAxismUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Dataset*>",117,G__get_linked_tagnum(&G__DictLN_vectorlEDatasetmUcOallocatorlEDatasetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEDatasetmUcOallocatorlEDatasetmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEDatasetmUcOallocatorlEDatasetmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEDatasetmUcOallocatorlEDatasetmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEDatasetmUcOallocatorlEDatasetmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Bool_t>",117,G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TopTree::triggeredObject>",117,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<TopTree::triggeredObject> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<TopTree::triggeredObject,allocator<TopTree::triggeredObject> > >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<TopTree::triggeredObject,allocator<TopTree::triggeredObject> >,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,Int_t>",117,G__get_linked_tagnum(&G__DictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TopTree::TRootHLTInfo>",117,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootHLTInfocOallocatorlETopTreecLcLTRootHLTInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootHLTInfocOallocatorlETopTreecLcLTRootHLTInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootHLTInfocOallocatorlETopTreecLcLTRootHLTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootHLTInfocOallocatorlETopTreecLcLTRootHLTInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootHLTInfocOallocatorlETopTreecLcLTRootHLTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned int> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned int,allocator<unsigned int> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::complex<double> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<complex<double> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Double_t,Double_t>",117,G__get_linked_tagnum(&G__DictLN_pairlEdoublecOdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<Double_t,Double_t> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<double,double> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::string>",117,G__get_linked_tagnum(&G__DictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__DictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__DictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*>,less<pair<RooAbsArg*,RooAbsArg*> > >",117,G__get_linked_tagnum(&G__DictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<RooAbsCache*>",117,G__get_linked_tagnum(&G__DictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooCurve*>",117,G__get_linked_tagnum(&G__DictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Double_t>",117,G__get_linked_tagnum(&G__DictLN_listlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TH1*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooDataHist*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooDataSet*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooAbsData*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<EvalError>",117,G__get_linked_tagnum(&G__DictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<RooAbsReal::EvalError>",117,G__get_linked_tagnum(&G__DictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,std::list<EvalError> >",117,G__get_linked_tagnum(&G__DictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,std::pair<std::string,std::list<EvalError> > >",117,G__get_linked_tagnum(&G__DictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > > >",117,G__get_linked_tagnum(&G__DictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >,less<const RooAbsArg*> >",117,G__get_linked_tagnum(&G__DictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::string>",117,G__get_linked_tagnum(&G__DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string>",117,G__get_linked_tagnum(&G__DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string,less<int> >",117,G__get_linked_tagnum(&G__DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StreamConfig>",117,G__get_linked_tagnum(&G__DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooMsgService::StreamConfig>",117,G__get_linked_tagnum(&G__DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > >",117,G__get_linked_tagnum(&G__DictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<std::vector<StreamConfig> >",117,G__get_linked_tagnum(&G__DictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > >",117,G__get_linked_tagnum(&G__DictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::ostream*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,basic_ostream<char,char_traits<char> >*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,basic_ostream<char,char_traits<char> >*,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<RooArgSet*>",117,G__get_linked_tagnum(&G__DictLN_listlERooArgSetmUcOallocatorlERooArgSetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<RooDataSet*>",117,G__get_linked_tagnum(&G__DictLN_listlERooDataSetmUcOallocatorlERooDataSetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooAbsPdf*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooAbsPdfmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsPdfmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsPdf*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooAbsPdfmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsPdfmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsPdf*,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooAbsPdfmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsPdfmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,Double_t>",117,G__get_linked_tagnum(&G__DictLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,double>",117,G__get_linked_tagnum(&G__DictLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,double,less<TString> >",117,G__get_linked_tagnum(&G__DictLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,Int_t>",117,G__get_linked_tagnum(&G__DictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int>",117,G__get_linked_tagnum(&G__DictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int,less<TString> >",117,G__get_linked_tagnum(&G__DictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,ExpensiveObject*>",117,G__get_linked_tagnum(&G__DictLN_maplETStringcORooExpensiveObjectCachecLcLExpensiveObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooExpensiveObjectCachecLcLExpensiveObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,RooExpensiveObjectCache::ExpensiveObject*>",117,G__get_linked_tagnum(&G__DictLN_maplETStringcORooExpensiveObjectCachecLcLExpensiveObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooExpensiveObjectCachecLcLExpensiveObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,RooExpensiveObjectCache::ExpensiveObject*,less<TString> >",117,G__get_linked_tagnum(&G__DictLN_maplETStringcORooExpensiveObjectCachecLcLExpensiveObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooExpensiveObjectCachecLcLExpensiveObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<RooAbsData*>",117,G__get_linked_tagnum(&G__DictLN_listlERooAbsDatamUcOallocatorlERooAbsDatamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TObject*>",117,G__get_linked_tagnum(&G__DictLN_listlETObjectmUcOallocatorlETObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,ClassRelInfo>",117,G__get_linked_tagnum(&G__DictLN_maplETStringcORooWorkspacecLcLCodeRepocLcLClassRelInfocOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooWorkspacecLcLCodeRepocLcLClassRelInfogRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,RooWorkspace::CodeRepo::ClassRelInfo>",117,G__get_linked_tagnum(&G__DictLN_maplETStringcORooWorkspacecLcLCodeRepocLcLClassRelInfocOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooWorkspacecLcLCodeRepocLcLClassRelInfogRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,RooWorkspace::CodeRepo::ClassRelInfo,less<TString> >",117,G__get_linked_tagnum(&G__DictLN_maplETStringcORooWorkspacecLcLCodeRepocLcLClassRelInfocOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooWorkspacecLcLCodeRepocLcLClassRelInfogRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,ClassFiles>",117,G__get_linked_tagnum(&G__DictLN_maplETStringcORooWorkspacecLcLCodeRepocLcLClassFilescOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooWorkspacecLcLCodeRepocLcLClassFilesgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,RooWorkspace::CodeRepo::ClassFiles>",117,G__get_linked_tagnum(&G__DictLN_maplETStringcORooWorkspacecLcLCodeRepocLcLClassFilescOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooWorkspacecLcLCodeRepocLcLClassFilesgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,RooWorkspace::CodeRepo::ClassFiles,less<TString> >",117,G__get_linked_tagnum(&G__DictLN_maplETStringcORooWorkspacecLcLCodeRepocLcLClassFilescOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooWorkspacecLcLCodeRepocLcLClassFilesgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<std::string>",117,G__get_linked_tagnum(&G__DictLN_listlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooArgSet>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooArgSetcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooArgSetgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooArgSet>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooArgSetcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooArgSetgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooArgSet,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcORooArgSetcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooArgSetgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<RooAbsMCStudyModule*>",117,G__get_linked_tagnum(&G__DictLN_listlERooAbsMCStudyModulemUcOallocatorlERooAbsMCStudyModulemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::Fit::ParameterSettings>",117,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,std::pair<double,double> >",117,G__get_linked_tagnum(&G__DictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,pair<double,double> >",117,G__get_linked_tagnum(&G__DictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,pair<double,double>,less<unsigned int> >",117,G__get_linked_tagnum(&G__DictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("auto_ptr<ROOT::Math::IMultiGenFunction>",117,G__get_linked_tagnum(&G__DictLN_auto_ptrlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Dataset>",117,G__get_linked_tagnum(&G__DictLN_vectorlEDatasetcOallocatorlEDatasetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEDatasetcOallocatorlEDatasetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEDatasetcOallocatorlEDatasetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEDatasetcOallocatorlEDatasetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEDatasetcOallocatorlEDatasetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Double_t (*)(TopTree::TRootJet*)",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Double_t> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<Double_t> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<vector<Double_t> > > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCObsExpectation*>",117,G__get_linked_tagnum(&G__DictLN_vectorlEMCObsExpectationmUcOallocatorlEMCObsExpectationmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEMCObsExpectationmUcOallocatorlEMCObsExpectationmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEMCObsExpectationmUcOallocatorlEMCObsExpectationmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEMCObsExpectationmUcOallocatorlEMCObsExpectationmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEMCObsExpectationmUcOallocatorlEMCObsExpectationmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH1F>",117,G__get_linked_tagnum(&G__DictLN_vectorlETH1FcOallocatorlETH1FgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETH1FcOallocatorlETH1FgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETH1FcOallocatorlETH1FgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TH1F> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TH1F,allocator<TH1F> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH3F>",117,G__get_linked_tagnum(&G__DictLN_vectorlETH3FcOallocatorlETH3FgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETH3FcOallocatorlETH3FgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETH3FcOallocatorlETH3FgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETH3FcOallocatorlETH3FgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETH3FcOallocatorlETH3FgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TH3F> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TH3F,allocator<TH3F> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TEfficiency*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TEfficiency*> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TEfficiency*,allocator<TEfficiency*> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGraphAsymmErrors*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<TH1F> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<THStack*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETHStackmUcOallocatorlETHStackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETHStackmUcOallocatorlETHStackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETHStackmUcOallocatorlETHStackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<THStack*> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<THStack*,allocator<THStack*> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TCanvas*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TCanvas*> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TCanvas*,allocator<TCanvas*> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TopTree::TRootParticle */
static void G__setup_memvarTopTreecLcLTRootParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle));
   { TopTree::TRootParticle *p; p=(TopTree::TRootParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TVector3),-1,-1,2,"vertex_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"type_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"charge_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"genParticleIndex_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootJet */
static void G__setup_memvarTopTreecLcLTRootJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet));
   { TopTree::TRootJet *p; p=(TopTree::TRootJet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"jetType_=",0,"0 = Unknown ; 1 = CaloJet ; 2 = PFJet");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nConstituents_=",0,"Number of constituents of the jet (calotowers for CaloJet / PFParticles for PFJet)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"jetArea_=",0,"Jet area");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxDistance_=",0,"Maximum distance from jet to constituent");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"JetCorrName_[4]=",0,"check in JetAnalyzer.cc that size is big enough to store all corrections!");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"JetCorrValue_[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_jetBProbabilityBJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_jetProbabilityBJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_trackCountingHighPurBJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_trackCountingHighEffBJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_simpleSecondaryVertexHighEffBJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_simpleSecondaryVertexHighPurBJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_combinedSecondaryVertexBJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_combinedSecondaryVertexRetrainedBJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_combinedSecondaryVertexMVABJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_softMuonBJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_softMuonByPtBJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_softMuonByIP3dBJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_softElectronByPtBJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"btag_softElectronByIP3dBJetTags_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("map<std::string,float>"),-1,4,"mistag_SF_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("map<std::string,float>"),-1,4,"btag_SF_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("map<std::string,float>"),-1,4,"mistag_SFerr_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("map<std::string,float>"),-1,4,"btag_SFerr_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"partonFlavour_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isTopJet_=",0,"Is parton matched to the jet a decay product of the top quark ?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootMuon */
static void G__setup_memvarTopTreecLcLTRootMuon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon));
   { TopTree::TRootMuon *p; p=(TopTree::TRootMuon*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"isoR03_emEt_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"isoR03_hadEt_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"isoR03_sumPt_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"vetoEm_=",0,"veto conesize is 0.07  in the ecal");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"vetoHad_=",0,"veto conesize is 0.1  in the hcal");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"d0_=",0,"d0 of Muon innertrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"d0error_=",0,"d0 error of Muon innertrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"dz_=",0,"dZ of Muon innertrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"dzerror_=",0,"dZ error of Muon innertrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"chi2_=",0,"chi2 of global Muon");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nofValidHits_=",0,"nof hits of inner track");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nofValidMuHits_=",0,"nof hits on the global fit");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nofValidPixelHits_=",0,"nof pixel hits of inner track");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nofMatchedStations_=",0,"number of stations with matched segments");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nofTrackerLayersWithMeasurement_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"algo_=",0,"binary => GlobalMuon=00010 , TrackerMuon=00100 , StandAloneMuon=01000 , CaloMuon=10000");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id_=",0,"MuonId coded in binary word id_ ==> TrackerMuonArbitrated=0000001 , AllArbitrated=0000010 , GlobalMuonPromptTight=0000100 ,");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isPFMuon_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"chargedHadronIso_=",0,"charged hadron isolation value computed in the PF2PAT sequence, and stored in the pat muon");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"puChargedHadronIso_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"photonIso_=",0,"photon isolation value computed in the PF2PAT sequence, and stored in the pat muon");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"neutralHadronIso_=",0,"neutral hadron isolation value computed in the PF2PAT sequence, and stored in the pat muon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootGenEvent */
static void G__setup_memvarTopTreecLcLTRootGenEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEvent));
   { TopTree::TRootGenEvent *p; p=(TopTree::TRootGenEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEventcLcLLeptonType),-1,-2,1,G__FastAllocString(2048).Format("kNone=%lldLL",(long long)TopTree::TRootGenEvent::kNone).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEventcLcLLeptonType),-1,-2,1,G__FastAllocString(2048).Format("kElec=%lldLL",(long long)TopTree::TRootGenEvent::kElec).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEventcLcLLeptonType),-1,-2,1,G__FastAllocString(2048).Format("kMuon=%lldLL",(long long)TopTree::TRootGenEvent::kMuon).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEventcLcLLeptonType),-1,-2,1,G__FastAllocString(2048).Format("kTau=%lldLL",(long long)TopTree::TRootGenEvent::kTau).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEventcLcLLeptonType),-1,-1,4,"semiLeptonicChannel_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isTtBar_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isFullHadronic_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isSemiLeptonic_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isFullLeptonic_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,4,"lepton_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,4,"neutrino_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,4,"leptonicDecayW_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,4,"leptonicDecayB_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,4,"leptonicDecayTop_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,4,"hadronicDecayW_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,4,"hadronicDecayB_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,4,"hadronicDecayTop_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,4,"hadronicDecayQuark_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,4,"hadronicDecayQuarkBar_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,4,"ISR_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,4,"leptonicDecayTopRadiation_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,4,"hadronicDecayTopRadiation_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootMCParticle */
static void G__setup_memvarTopTreecLcLTRootMCParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle));
   { TopTree::TRootMCParticle *p; p=(TopTree::TRootMCParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"status_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nDau_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"motherType_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"grannyType_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"dauOneId_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"dauTwoId_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"dauThreeId_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"dauFourId_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootGenTop */
static void G__setup_memvarTopTreecLcLTRootGenTop(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop));
   { TopTree::TRootGenTop *p; p=(TopTree::TRootGenTop*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isHadronic_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isLeptonic_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle),-1,-1,4,"W_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle),-1,-1,4,"bquark_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle),-1,-1,4,"quark_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle),-1,-1,4,"quarkBar_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle),-1,-1,4,"lepton_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle),-1,-1,4,"neutrino_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"production_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootNPGenEvent */
static void G__setup_memvarTopTreecLcLTRootNPGenEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootNPGenEvent));
   { TopTree::TRootNPGenEvent *p; p=(TopTree::TRootNPGenEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isNewPhysics_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgR),-1,-1,4,"tops_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR),-1,-1,4,"leptons_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR),-1,-1,4,"quarks_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR),-1,-1,4,"bquarks_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR),-1,-1,4,"invisibleParticles_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR),-1,-1,4,"neutrinos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR),-1,-1,4,"gluinos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR),-1,-1,4,"stops_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootMET */
static void G__setup_memvarTopTreecLcLTRootMET(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET));
   { TopTree::TRootMET *p; p=(TopTree::TRootMET*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"METType_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"sumEt_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AnalysisEnvironment */
static void G__setup_memvarAnalysisEnvironment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_AnalysisEnvironment));
   { AnalysisEnvironment *p; p=(AnalysisEnvironment*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->allObsDefined)-(long)(p)),103,0,0,-1,-1,-1,1,"allObsDefined=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->runOnObsByString)-(long)(p)),105,0,0,-1,-1,-1,1,"runOnObsByString=",0,"* 0 means run on observables by integer, 1 means run on observables by string */");
   G__memvar_setup((void*)((long)(&p->listOfObsInts)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"listOfObsInts=",0,"* the list of observable integers, as specified in the xml file*/");
   G__memvar_setup((void*)((long)(&p->listOfObsStrings)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,1,"listOfObsStrings=",0,"* the list of observable string names, as specified in the xml file*/");
   G__memvar_setup((void*)((long)(&p->listOfObs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"listOfObs=",0,"* the list of observable integers, corresponding to listOfObsInts or listOfObsStrings, according to the value of runOnObsByString*/");
   G__memvar_setup((void*)((long)(&p->loadGenJetCollection)-(long)(p)),103,0,0,-1,-1,-1,1,"loadGenJetCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->loadGenEventCollection)-(long)(p)),103,0,0,-1,-1,-1,1,"loadGenEventCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->loadNPGenEventCollection)-(long)(p)),103,0,0,-1,-1,-1,1,"loadNPGenEventCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->loadMCParticles)-(long)(p)),103,0,0,-1,-1,-1,1,"loadMCParticles=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->loadTrackMETCollection)-(long)(p)),103,0,0,-1,-1,-1,1,"loadTrackMETCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JetType)-(long)(p)),105,0,0,-1,-1,-1,1,"JetType=",0,"0: TRootJet - 1: CaloJet - 2: PFJet - 3: JPTJet");
   G__memvar_setup((void*)((long)(&p->METType)-(long)(p)),105,0,0,-1,-1,-1,1,"METType=",0,"0: TRootMET - 1: CaloMET - 2: PFMET - 3: TCMET");
   G__memvar_setup((void*)((long)(&p->PrimaryVertexCollection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"PrimaryVertexCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JetCollection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"JetCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->METCollection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"METCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrackMETCollection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"TrackMETCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonCollection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"MuonCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ElectronCollection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"ElectronCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GenJetCollection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"GenJetCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GenEventCollection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"GenEventCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NPGenEventCollection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"NPGenEventCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MCParticlesCollection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"MCParticlesCollection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isMC)-(long)(p)),103,0,0,-1,-1,-1,1,"isMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isSMPseudo)-(long)(p)),103,0,0,-1,-1,-1,1,"isSMPseudo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vars_ByFile)-(long)(p)),103,0,0,-1,-1,-1,1,"Vars_ByFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MCRound)-(long)(p)),105,0,0,-1,-1,-1,1,"MCRound=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Verbose)-(long)(p)),105,0,0,-1,-1,-1,1,"Verbose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Luminosity)-(long)(p)),102,0,0,-1,-1,-1,1,"Luminosity=",0,"in pb-1");
   G__memvar_setup((void*)((long)(&p->JES)-(long)(p)),102,0,0,-1,-1,-1,1,"JES=",0,"must be 1 nominaly: 0.9 means -10%, 1.1 means +10%");
   G__memvar_setup((void*)((long)(&p->doABCD)-(long)(p)),103,0,0,-1,-1,-1,1,"doABCD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->doVJEstim)-(long)(p)),103,0,0,-1,-1,-1,1,"doVJEstim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->doVJEstPE)-(long)(p)),103,0,0,-1,-1,-1,1,"doVJEstPE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->doTtJEstim)-(long)(p)),103,0,0,-1,-1,-1,1,"doTtJEstim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->doTemplComp)-(long)(p)),103,0,0,-1,-1,-1,1,"doTemplComp=",0,"comparison of template");
   G__memvar_setup((void*)((long)(&p->nPseudoExp)-(long)(p)),105,0,0,-1,-1,-1,1,"nPseudoExp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->VarsFile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"VarsFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IntToCut)-(long)(p)),105,0,0,-1,-1,-1,1,"IntToCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MCExpFilename)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"MCExpFilename=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->LuminosityError)-(long)(p)),102,0,0,-1,-1,-1,1,"LuminosityError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TriggerEff)-(long)(p)),102,0,0,-1,-1,-1,1,"TriggerEff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TriggerEffError)-(long)(p)),102,0,0,-1,-1,-1,1,"TriggerEffError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SkimEff)-(long)(p)),102,0,0,-1,-1,-1,1,"SkimEff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SkimEffError)-(long)(p)),102,0,0,-1,-1,-1,1,"SkimEffError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonSelEff)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonSelEff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonSelEffError)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonSelEffError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SecondLeptonVetoEff)-(long)(p)),102,0,0,-1,-1,-1,1,"SecondLeptonVetoEff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SecondLeptonVetoEffError)-(long)(p)),102,0,0,-1,-1,-1,1,"SecondLeptonVetoEffError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JetSelEff)-(long)(p)),102,0,0,-1,-1,-1,1,"JetSelEff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JetSelEffError)-(long)(p)),102,0,0,-1,-1,-1,1,"JetSelEffError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NofSingleTopEvts)-(long)(p)),102,0,0,-1,-1,-1,1,"NofSingleTopEvts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NofSingleTopEvtsError)-(long)(p)),102,0,0,-1,-1,-1,1,"NofSingleTopEvtsError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->runonTTrees)-(long)(p)),103,0,0,-1,-1,-1,1,"runonTTrees=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Systematics)-(long)(p)),105,0,0,-1,-1,-1,1,"Systematics=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->doBkgEstim)-(long)(p)),103,0,0,-1,-1,-1,1,"doBkgEstim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->doDumpPseudoExpInfoInTTree)-(long)(p)),103,0,0,-1,-1,-1,1,"doDumpPseudoExpInfoInTTree=",0,"Write a TTree with all the info (obs) per events per pseudo-exp - reuse by another program*/");
   G__memvar_setup((void*)((long)(&p->DumpTreeName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"DumpTreeName=",0,"* Name of the file produced containg the above mentionned TTree*/");
   G__memvar_setup((void*)((long)(&p->FractionHWEvts)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"FractionHWEvts=",0,"Fraction of High Weight events used in the statistical procedure*/");
   G__memvar_setup((void*)((long)(&p->PVertexNdofCut)-(long)(p)),105,0,0,-1,-1,-1,1,"PVertexNdofCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PVertexZCut)-(long)(p)),102,0,0,-1,-1,-1,1,"PVertexZCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PVertexRhoCut)-(long)(p)),102,0,0,-1,-1,-1,1,"PVertexRhoCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ElectronPtCut)-(long)(p)),102,0,0,-1,-1,-1,1,"ElectronPtCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ElectronEtaCut)-(long)(p)),102,0,0,-1,-1,-1,1,"ElectronEtaCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ElectronRelIsoCut)-(long)(p)),102,0,0,-1,-1,-1,1,"ElectronRelIsoCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonPtCutSR)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonPtCutSR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonEtaCutSR)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonEtaCutSR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonRelIsoCutSR)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonRelIsoCutSR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonNHitsCutSR)-(long)(p)),105,0,0,-1,-1,-1,1,"MuonNHitsCutSR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonChi2CutSR)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonChi2CutSR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonECALVetoSR)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonECALVetoSR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonHCALVetoSR)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonHCALVetoSR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonD0CutSR)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonD0CutSR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonDRJetsCut)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonDRJetsCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonPtCutVetoSR)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonPtCutVetoSR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonEtaCutVetoSR)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonEtaCutVetoSR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonRelIsoCutVetoSR)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonRelIsoCutVetoSR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JetsPtCutSR)-(long)(p)),102,0,0,-1,-1,-1,1,"JetsPtCutSR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JetsEtaCutSR)-(long)(p)),102,0,0,-1,-1,-1,1,"JetsEtaCutSR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->applyJetID)-(long)(p)),103,0,0,-1,-1,-1,1,"applyJetID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JetEMFCut)-(long)(p)),102,0,0,-1,-1,-1,1,"JetEMFCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->n90HitsCut)-(long)(p)),105,0,0,-1,-1,-1,1,"n90HitsCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHPDCut)-(long)(p)),102,0,0,-1,-1,-1,1,"fHPDCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NofJets)-(long)(p)),105,0,0,-1,-1,-1,1,"NofJets=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NofJetBins)-(long)(p)),105,0,0,-1,-1,-1,1,"NofJetBins=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonPtCutCR)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonPtCutCR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonEtaCutCR)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonEtaCutCR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonRelIsoCutCR)-(long)(p)),102,0,0,-1,-1,-1,1,"MuonRelIsoCutCR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JetsPtCutCR)-(long)(p)),102,0,0,-1,-1,-1,1,"JetsPtCutCR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JetsEtaCutCR)-(long)(p)),102,0,0,-1,-1,-1,1,"JetsEtaCutCR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MblCut)-(long)(p)),102,0,0,-1,-1,-1,1,"MblCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DRBBCut)-(long)(p)),102,0,0,-1,-1,-1,1,"DRBBCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HTBBCut)-(long)(p)),102,0,0,-1,-1,-1,1,"HTBBCut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BtagAlgo_ttjEst)-(long)(p)),105,0,0,-1,-1,-1,1,"BtagAlgo_ttjEst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BtagDiscriCut_ttjEst)-(long)(p)),102,0,0,-1,-1,-1,1,"BtagDiscriCut_ttjEst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NREvtFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"NREvtFraction=",0,"[0,1]");
   G__memvar_setup((void*)((long)(&p->BtagAlgo_vjEst)-(long)(p)),105,0,0,-1,-1,-1,1,"BtagAlgo_vjEst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NofBtagWorkingPoint_vjEst)-(long)(p)),105,0,0,-1,-1,-1,1,"NofBtagWorkingPoint_vjEst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BtagWorkingPoint_vjEst)-(long)(p)),70,0,0,-1,-1,-1,1,"BtagWorkingPoint_vjEst=",0,"[NofBtagWorkingPoint_vjEst]");
   G__memvar_setup((void*)((long)(&p->useMJLE)-(long)(p)),103,0,0,-1,-1,-1,1,"useMJLE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->useUnBinMLE)-(long)(p)),103,0,0,-1,-1,-1,1,"useUnBinMLE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MinMethod)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"MinMethod=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MinOption)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"MinOption=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->VJEstFixParam)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"VJEstFixParam=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EffEbsel)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<vector<float> >"),-1,1,"EffEbsel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NVlikeInit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"NVlikeInit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NTTlikeInit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"NTTlikeInit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TagEffInit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<float> > >"),-1,1,"TagEffInit=",0,"dimensions: #jets, btag working point, vector of efficiencies:eb/eudsc/euds");
   G__memvar_setup((void*)((long)(&p->NVJetPE)-(long)(p)),105,0,0,-1,-1,-1,1,"NVJetPE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NofIterationsVJestShapeEstim)-(long)(p)),105,0,0,-1,-1,-1,1,"NofIterationsVJestShapeEstim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NXbinsABCD)-(long)(p)),105,0,0,-1,-1,-1,1,"NXbinsABCD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NYbinsABCD)-(long)(p)),105,0,0,-1,-1,-1,1,"NYbinsABCD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->XbinMinABCD)-(long)(p)),102,0,0,-1,-1,-1,1,"XbinMinABCD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->XbinMaxABCD)-(long)(p)),102,0,0,-1,-1,-1,1,"XbinMaxABCD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->YbinMinABCD)-(long)(p)),102,0,0,-1,-1,-1,1,"YbinMinABCD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->YbinMaxABCD)-(long)(p)),102,0,0,-1,-1,-1,1,"YbinMaxABCD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cutXmin)-(long)(p)),102,0,0,-1,-1,-1,1,"cutXmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cutX0)-(long)(p)),102,0,0,-1,-1,-1,1,"cutX0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cutX1)-(long)(p)),102,0,0,-1,-1,-1,1,"cutX1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cutXmax)-(long)(p)),102,0,0,-1,-1,-1,1,"cutXmax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cutYmin)-(long)(p)),102,0,0,-1,-1,-1,1,"cutYmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cutY0)-(long)(p)),102,0,0,-1,-1,-1,1,"cutY0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cutY1)-(long)(p)),102,0,0,-1,-1,-1,1,"cutY1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cutYmax)-(long)(p)),102,0,0,-1,-1,-1,1,"cutYmax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->region)-(long)(p)),105,0,0,-1,-1,-1,1,"region=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->binningFile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"binningFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nbins)-(long)(p)),105,0,0,-1,-1,-1,1,"nbins=",0,"used only if binning for a given observable is not found");
   G__memvar_setup((void*)((long)(&p->eventsperbin)-(long)(p)),105,0,0,-1,-1,-1,1,"eventsperbin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EpsilonValue)-(long)(p)),102,0,0,-1,-1,-1,1,"EpsilonValue=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Correl_cut)-(long)(p)),102,0,0,-1,-1,-1,1,"Correl_cut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nPseudoSession)-(long)(p)),105,0,0,-1,-1,-1,1,"nPseudoSession=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BinningFirstGuess */
static void G__setup_memvarBinningFirstGuess(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_BinningFirstGuess));
   { BinningFirstGuess *p; p=(BinningFirstGuess*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isOnMC_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"intLumi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TMap),-1,-1,4,"fineHistos_=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Container */
static void G__setup_memvarContainer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_Container));
   { Container *p; p=(Container*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"int_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"float_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"double_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,4,"string_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Dataset */
static void G__setup_memvarDataset(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_Dataset));
   { Dataset *p; p=(Dataset*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"Name_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"Title_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"DotIt_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Color_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"LineStyle_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"LineWidth_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"NormFactor_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Xsection_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"XsectionError_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mass_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"PreSelEfficiency_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"EqLumi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TChain),-1,-1,4,"eventTree_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TChain),-1,-1,4,"runTree_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NofEvtsToRunOver_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,4,"Filenames_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<vector<int> >"),-1,4,"JSONInfo_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MCExpectation */
static void G__setup_memvarMCExpectation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_MCExpectation));
   { MCExpectation *p; p=(MCExpectation*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Luminosity)-(long)(p)),102,0,0,-1,-1,-1,1,"Luminosity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"Name=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->computed)-(long)(p)),103,0,0,-1,-1,-1,1,"computed=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EfficienciesGiven)-(long)(p)),103,0,0,-1,-1,-1,1,"EfficienciesGiven=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->btag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR),G__defined_typename("vector<pair<string,float> >"),-1,1,"btag=",0,"algo name & bdisc cut under several conditions");
   G__memvar_setup((void*)((long)(&p->Eb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),G__defined_typename("vector<pair<float,float> >"),-1,1,"Eb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Eudsc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),G__defined_typename("vector<pair<float,float> >"),-1,1,"Eudsc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Eudsc_vj)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),G__defined_typename("vector<pair<float,float> >"),-1,1,"Eudsc_vj=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TriggerEff)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"TriggerEff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SkimEff)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"SkimEff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonSelEff)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"MuonSelEff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SecondLeptonVetoEff)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"SecondLeptonVetoEff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JetSelEff)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"JetSelEff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NAll)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NAll=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NTtJets)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NTtJets=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NWlj)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NWlj=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NWb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NWb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NWc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NWc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NWbb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NWbb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NWcc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NWcc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NZlj)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NZlj=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NZb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NZb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NZc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NZc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NZbb)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NZbb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NZcc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NZcc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NQCD)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NQCD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NSingleTop)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NSingleTop=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NVV)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR),-1,-1,1,"NVV=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MCObsExpectation */
static void G__setup_memvarMCObsExpectation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_MCObsExpectation));
   { MCObsExpectation *p; p=(MCObsExpectation*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->datasetNames)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,1,"datasetNames=",0,"make public so that he won't try to write this non-writable (???) members in a file when MCObsExp is written in file??*/");
   G__memvar_setup((void*)((long)(&p->datasetTitles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,1,"datasetTitles=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Luminosity=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"Name=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TLegend),-1,-1,4,"legSMProcess=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TLegend),-1,-1,4,"legAll=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_THStack),-1,-1,4,"hstSMProcess=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_THStack),-1,-1,4,"hstAll=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1F),-1,-1,4,"hSMProcess=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1F),-1,-1,4,"hAll=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TObjArray),-1,-1,4,"hSMSubProcesses=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1F),-1,-1,4,"hNewPhysicsSignal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootCaloJet */
static void G__setup_memvarTopTreecLcLTRootCaloJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet));
   { TopTree::TRootCaloJet *p; p=(TopTree::TRootCaloJet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"etaetaMoment_=",0,"Added to CaloJet since they seem to be empty for PF");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"phiphiMoment_=",0,"Added to CaloJet since they seem to be empty for PF");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ecalEnergyFraction_=",0,"ECAL Energy Fraction");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"hcalEnergyFraction_=",0,"HCAL Energy Fraction");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxEInEmTowers_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxEInHadTowers_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"towersArea_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"n90_=",0,"Number of constituents of the jet carrying 90% of tje jet energy");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"n60_=",0,"Number of constituents of the jet carrying 60% of tje jet energy");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fHPD_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRBX_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"n90Hits_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nHCALTowers_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nECALTowers_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"chargedMultiplicity_=",0,"Number of tracks associated to the jet. Not available for reco::CaloJet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootCaloMET */
static void G__setup_memvarTopTreecLcLTRootCaloMET(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET));
   { TopTree::TRootCaloMET *p; p=(TopTree::TRootCaloMET*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxEtInEmTowers_=",0,"Maximum ET in EM towers");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxEtInHadTowers_=",0,"Maximum ET in HCAL towers");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"hadEtInHO_=",0,"Hadronic ET fraction in HO");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"hadEtInHB_=",0,"Hadronic ET in HB");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"hadEtInHF_=",0,"Hadronic ET in HF");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"hadEtInHE_=",0,"Hadronic ET in HE");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"emEtInEB_=",0,"Em ET in EB");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"emEtInEE_=",0,"Em ET in EE");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"emEtInHF_=",0,"Em ET in HF");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"etFractionHadronic_=",0,"Hadronic ET fraction");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"etFractionEm_=",0,"Em ET fraction");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"metSignificance_=",0,"Em ET fraction");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"caloMETInpHF_=",0,"CaloMET in HF+");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"caloMETInmHF_=",0,"CaloMET in HF-");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"caloSETInpHF_=",0,"CaloSET in HF+");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"caloSETInmHF_=",0,"CaloSET in HF-");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"caloMETPhiInpHF_=",0,"CaloMET-phi in HF+");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"caloMETPhiInmHF_=",0,"CaloMET-phi in HF-");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootElectron */
static void G__setup_memvarTopTreecLcLTRootElectron(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron));
   { TopTree::TRootElectron *p; p=(TopTree::TRootElectron*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"trackerDrivenSeed_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"ecalDrivenSeed_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,4,"ecalDrivenMomentum_=",0,"ecal driven momentum, equivalent to gsf electron momentum.");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eSuperClusterOverPin_=",0,"the supercluster energy / track momentum at the PCA to the beam spot");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eEleClusterOverPout_=",0,"the electron cluster energy / track momentum at calo extrapolated from the outermost track state");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eSeedClusterOverPout_=",0,"the seed cluster energy / track momentum at calo extrapolated from the outermost track state");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"deltaEtaIn_=",0,"the supercluster eta - track eta position at calo extrapolated from innermost track state");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"deltaEtaOut_=",0,"the seed cluster eta - track eta position at calo extrapolated from the outermost track state");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"deltaPhiIn_=",0,"the supercluster phi - track phi position at calo extrapolated from the innermost track state");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"deltaPhiOut_=",0,"the seed cluster phi - track phi position at calo extrapolated from the outermost track state");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"deltaPhiSuperClusterTrackAtCalo_=",0,"the electron cluster phi - track phi position at calo extrapolated from the outermost track state");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"deltaEtaSuperClusterTrackAtCalo_=",0,"the electron cluster eta - t");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ioEmIoP_=",0,"(1.0/(ele.superCluster()->energy())) - (1.0 / ele.p())");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ioEmIoPgsf_=",0,"(1.0/(ele.superCluster()->energy())) - (1.0 / ele.gsfTrack()->p())");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"pixelLayersWithMeasurement_=",0,"number of pixel layers with at least one valid hit");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"stripLayersWithMeasurement_=",0,"number of strip layers with at least one valid hit");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nValidHits_=",0,"number of valid hits");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ip3d_=",0,"3D impact parameter");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ip3dErr_=",0,"error on ip3d_");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"d0_=",0,"transverse impact parameter (wrt to PV)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"d0Error_=",0,"error on d0_");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"dz_=",0,"longitudinal impact parameter (wrt to PV)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"missingHits_=",0,"Conversion Rejection: number of missing hits near beginning of track (also rejects really bad tracks)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"normalizedChi2_=",0,"chi-squared divided by n.d.o.f. of track fit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"normalizedChi2gsf_=",0,"chi2 / ndf from gsfTrack");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"superClusterRawEnergy_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"superClusterEta_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"preshowerEnergy_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"sigmaIetaIeta_=",0,"weighted cluster rms along eta and inside 5x5 (new, Xtal eta)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"sigmaIphiIphi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"sigmaIetaIphi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"e1x5_=",0,"energy inside 1x5 in etaxphi around the seed Xtal");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"e5x5_=",0,"energy inside 5x5 in etaxphi around the seed Xtal");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"hcalDepth1OverEcal_=",0,"hcal over ecal seed cluster energy using first hcal depth (hcal is energy of towers within dR=015)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"hcalDepth2OverEcal_=",0,"hcal over ecal seed cluster energy using 2nd hcal depth (hcal is energy of towers within dR=015)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"etaWidth_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"phiWidth_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"r9_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tkSumPt03_=",0,"track iso deposit with electron footprint removed");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ecalRecHitSumEt03_=",0,"ecal iso deposit with electron footprint removed");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"hcalDepth1TowerSumEt03_=",0,"hcal depht 1 iso deposit with electron footprint removed");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"hcalDepth2TowerSumEt03_=",0,"hcal depht 2 iso deposit with electron footprint removed");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tkSumPt04_=",0,"track iso deposit with electron footprint removed");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ecalRecHitSumEt04_=",0,"ecal iso deposit with electron footprint removed");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"hcalDepth1TowerSumEt04_=",0,"hcal depht 1 iso deposit with electron footprint removed");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"hcalDepth2TowerSumEt04_=",0,"hcal depht 2 iso deposit with electron footprint removed");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"chargedHadronIso_=",0,"isolation calculated with only the charged hadron candidates");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"puChargedHadronIso_=",0,"isolation calculated with only the pile-up charged hadron candidates");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"photonIso_=",0,"isolation calculated with only the gamma candidates");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"neutralHadronIso_=",0,"isolation calculated with only the neutral hadron candidates");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fBrem_=",0,"brem fraction from gsf fit: (track momentum in - track momentum out) / track momentum in");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nBrems_=",0,"number of basic clusters inside the supercluster - 1");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Dist_=",0,"distance to the conversion partner");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"DCot_=",0,"difference of cot(angle) with the conversion partner track");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"passConversion_=",0,"boolean to flag converted candidates");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mvaTrigId_=",0,"MVA value");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mvaNonTrigId_=",0,"MVA value");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::triggeredObject */
static void G__setup_memvarTopTreecLcLtriggeredObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLtriggeredObject));
   { TopTree::triggeredObject *p; p=(TopTree::triggeredObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootEvent */
static void G__setup_memvarTopTreecLcLTRootEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootEvent));
   { TopTree::TRootEvent *p; p=(TopTree::TRootEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nb_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eventId_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"runId_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"lumiBlockId_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"flavHistPath_=",0,"flavor history path, see https://twiki.cern.ch/twiki/bin/view/CMSPublic/SWGuideFlavorHistory");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"kt6PFJets_rho_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"kt6PFJetsForIsolation_rho_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nTracks_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nHighPurityTracks_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<Int_t,Int_t>"),-1,4,"nPu_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"nTruePU_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"passGlobalHLT_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<Bool_t>"),-1,4,"trigHLT_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"idParton1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xParton1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"idParton2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xParton2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"factorizationScale_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_maplEstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::vector<TopTree::triggeredObject> >"),-1,4,"triggerFilters_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootGenJet */
static void G__setup_memvarTopTreecLcLTRootGenJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet));
   { TopTree::TRootGenJet *p; p=(TopTree::TRootGenJet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"etaetaMoment_=",0,"Added to CaloJet since they seem to be empty for PF");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"phiphiMoment_=",0,"Added to CaloJet since they seem to be empty for PF");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"emEnergy_=",0,"EM Energy ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"hadEnergy_=",0,"Hadronic Energy");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"invisibleEnergy_=",0,"Invisible Energy");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"n90_=",0,"Number of constituents of the genJet carrying 90% of tje genJet energy");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"n60_=",0,"Number of constituents of the genJet carrying 60% of tje genJet energy");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nConstituents_=",0,"Number of constituents of the jet");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxDistance_=",0,"Maximum distance from jet to constituent");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootHLTInfo */
static void G__setup_memvarTopTreecLcLTRootHLTInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootHLTInfo));
   { TopTree::TRootHLTInfo *p; p=(TopTree::TRootHLTInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"RunID_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"hltNames_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,4,"hltWasRun_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,4,"hltErrors_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,4,"hltAccept_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootJPTJet */
static void G__setup_memvarTopTreecLcLTRootJPTJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet));
   { TopTree::TRootJPTJet *p; p=(TopTree::TRootJPTJet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"etaetaMoment_=",0,"Added to CaloJet since they seem to be empty for PF");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"phiphiMoment_=",0,"Added to CaloJet since they seem to be empty for PF");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ecalEnergyFraction_=",0,"ECAL Energy Fraction");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"hcalEnergyFraction_=",0,"HCAL Energy Fraction");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxEInEmTowers_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxEInHadTowers_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"towersArea_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"n90_=",0,"Number of constituents of the jet carrying 90% of tje jet energy");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"n60_=",0,"Number of constituents of the jet carrying 60% of tje jet energy");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fHPD_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRBX_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"n90Hits_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nHCALTowers_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nECALTowers_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"chargedMultiplicity_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"chargedHadronEnergyFraction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootPFJet */
static void G__setup_memvarTopTreecLcLTRootPFJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet));
   { TopTree::TRootPFJet *p; p=(TopTree::TRootPFJet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"chargedHadronEnergyFraction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"neutralHadronEnergyFraction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"chargedEmEnergyFraction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"chargedMuEnergyFraction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"neutralEmEnergyFraction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"chargedMultiplicity_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"neutralMultiplicity_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"muonMultiplicity_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootPFMET */
static void G__setup_memvarTopTreecLcLTRootPFMET(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET));
   { TopTree::TRootPFMET *p; p=(TopTree::TRootPFMET*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"NeutralEMFraction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"NeutralHadEtFraction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ChargedEMEtFraction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ChargedHadEtFraction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"MuonEtFraction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Type6EtFraction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Type7EtFraction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootRun */
static void G__setup_memvarTopTreecLcLTRootRun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootRun));
   { TopTree::TRootRun *p; p=(TopTree::TRootRun*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootHLTInfocOallocatorlETopTreecLcLTRootHLTInfogRsPgR),G__defined_typename("vector<TopTree::TRootHLTInfo>"),-1,4,"hltInfos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nHLTEvents_=",0,"Nb of events");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nHLTWasRun_=",0,"Nb of events where at least one HLT was run");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nHLTAccept_=",0,"Nb of accepted events");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nHLTErrors_=",0,"Nb of events where at least one HLT had error");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"hltInputTag_=",0,"name of the HLT inputtag provided in the TopTreeProducer config");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootSpinCorrGen */
static void G__setup_memvarTopTreecLcLTRootSpinCorrGen(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootSpinCorrGen));
   { TopTree::TRootSpinCorrGen *p; p=(TopTree::TRootSpinCorrGen*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"cosThetaTLHel_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"cosThetaTBHel_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"cosThetaTQHel_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"cosPhi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"topsZMFMass_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootTrackMET */
static void G__setup_memvarTopTreecLcLTRootTrackMET(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET));
   { TopTree::TRootTrackMET *p; p=(TopTree::TRootTrackMET*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TopTree::TRootVertex */
static void G__setup_memvarTopTreecLcLTRootVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootVertex));
   { TopTree::TRootVertex *p; p=(TopTree::TRootVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isValid_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isFake_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"chi2_=",0,"Not divided by ndof");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ndof_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"tracksSize_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xError_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yError_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"zError_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LightMonster */
static void G__setup_memvarLightMonster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_LightMonster));
   { LightMonster *p; p=(LightMonster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"eventID_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"runID_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"lumiBlockID_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"idParton1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"xParton1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"idParton2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"xParton2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"factorizationScale_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"nPV_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"nPUBXm1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"nPU_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"nPUBXp1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"nTruePU_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"topMass_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"antiTopMass_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"selectedSemiMu_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"semiMuDecay_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"semiElDecay_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"topDecayedLept_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"all4JetsMCMatched_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"allHadronicJetsMCMatched_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"mvaVals_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"mvaResults_[12][4]=",0,"jet indices");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"eventWeight_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"mTopFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"sigmaMTopFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"chi2MTopFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"hadrBJet_=",0,"index according to MC");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"hadrLJet1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"hadrLJet2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"leptBJet_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"MET_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,2,"selectedJets_=",0,"all selected jets");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"bTagCSV_=",0,"indices like selectedJets indices");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"lepton_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"leptonCharge_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"leptonPFRelIso_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"hadrBQuark_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"hadrLQuark1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"hadrLQuark2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"leptBQuark_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WTree */
static void G__setup_memvarWTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_WTree));
   { WTree *p; p=(WTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"eventID_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"runID_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"lumiBlockID_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"nPV_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"nPUBXm1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"nPU_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"nPUBXp1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"eventWeight_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"chi2KinFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedLepton_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedNeutrino_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedLeptB_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedHadrB_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedLight1_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedLight2_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"chi2FullKinFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedFullLepton_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedFullNeutrino_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedFullLeptB_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedFullHadrB_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedFullLight1_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedFullLight2_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"chi2KinFitMassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedLeptonMassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedNeutrinoMassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedLeptBMassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedHadrBMassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedLight1MassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedLight2MassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"chi2FullKinFitMassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedFullLeptonMassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedFullNeutrinoMassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedFullLeptBMassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedFullHadrBMassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedFullLight1MassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"fittedFullLight2MassFit_[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"hadrBJet_=",0,"index according to MC");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"hadrLJet1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"hadrLJet2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"leptBJet_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"MET_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,2,"selectedJets_=",0,"all selected jets");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"bTagTCHE_=",0,"indices like selectedJets indices");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"bTagTCHP_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"bTagSSVHE_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"bTagSSVHP_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"bTagCSV_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"muon_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"hadrBQuark_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"hadrLQuark1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"hadrLQuark2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"leptBQuark_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"standardCosTheta_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"standardNeutrino_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"standardLepton_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* InclFourthGenTree */
static void G__setup_memvarInclFourthGenTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_InclFourthGenTree));
   { InclFourthGenTree *p; p=(InclFourthGenTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"eventID_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"runID_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"lumiBlockID_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"nPV_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"nPUBXm1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"nPU_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"nPUBXp1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"flavorHistoryPath_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"SelectedSingleLepton_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"SelectedSingleMu_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"SelectedSingleEl_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"SelectedSSLepton_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"SelectedSSMu_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"SelectedSSEl_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"SelectedSSMuEl_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"SelectedTriLepton_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"SelectedMuMuMu_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"SelectedMuMuEl_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"SelectedMuElEl_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"SelectedElElEl_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"EE_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"EB_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"EEEE_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"EBEE_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"EBEB_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"semiMuDecay_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"semiElDecay_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"Wbosonpartonsmatched_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"WMassmatched_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"eventWeight_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TLorentzVector),-1,-1,2,"MET_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,2,"selectedJets_=",0,"all selected jet");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"bTagTCHE_=",0,"indices like selectedJets indices");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"bTagTCHP_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"partonFlavourJet_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,2,"selectedForwardJets_=",0,"all selected forward jet");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,2,"InitJets_=",0,"all initial jets, needed for MC trigger efficiency reweighting");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"InitJetsbTagTCHE_=",0,"indices like InitJets indices");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"InitJetsbTagTCHP_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,2,"selectedMuons_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,2,"selectedElectrons_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"selectedMuonsRelIso_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"selectedElectronsRelIso_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"chargeMisIdRateBarrel_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"chargeMisIdRateEndcap_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,2,"mcQuarksForMatching_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,2,"quarksFromW_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* VJetEstimation */
static void G__setup_memvarVJetEstimation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_VJetEstimation));
   { VJetEstimation *p; p=(VJetEstimation*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"MCdata_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEDatasetcOallocatorlEDatasetgRsPgR),G__defined_typename("vector<Dataset>"),-1,4,"vDatasets_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<Bool_t>"),-1,4,"processMask_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"NbOfDatasets_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"iDatasetsTTLike_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"iDatasetsVLike_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"iDatasetsVbLike_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"NbOfBJetsBins_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"NbOfJetsBins_=",0,(char*)NULL);
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"Njets_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"NbOfBtagWorkingPoint_=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,4,"BtagWorkingPoint_=",0,"[NbOfBtagWorkingPoint_]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<vector<Double_t> > > >"),-1,4,"N_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<vector<Double_t> > > >"),-1,4,"N_err_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<vector<Double_t> > > >"),-1,4,"N_err_hi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<vector<Double_t> > > >"),-1,4,"N_err_lo_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<Double_t> > >"),-1,4,"Nbjets_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<Double_t> > >"),-1,4,"MultiJet_Est_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"eb_mc_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"eb_err_mc_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"eudsc_mc_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"eudsc_err_mc_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"euds_mc_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"euds_err_mc_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"eb_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"eb_err_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"eb_err_up_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"eb_err_down_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"eudsc_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"eudsc_err_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"eudsc_err_up_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"eudsc_err_down_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"euds_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"euds_err_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"euds_err_up_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"euds_err_down_=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Ntt_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Ntt_err_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Ntt_err_up_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Ntt_err_down_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Nv_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Nv_err_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Nv_err_up_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Nv_err_down_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Nvb_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Nvb_err_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"ebq_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"e0bq_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"e1bq_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"e2bq_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"init_Nttlike_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"init_Nvlike_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"init_Eb_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"init_Eudsc_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"init_Euds_=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"minValue_=",0,"[NbOfJetsBins_]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGraphErrors),-1,-1,4,"RescaledTTLikeEstimation=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGraphErrors),-1,-1,4,"RescaledVLikeEstimation=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGraphErrors),-1,-1,4,"RescaledVbLikeEstimation=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TCanvas),-1,-1,4,"tCanva_RescaledTTLikeEstimation=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TCanvas),-1,-1,4,"tCanva_RescaledVLikeEstimation=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TCanvas),-1,-1,4,"tCanva_RescaledVbLikeEstimation=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgR),G__defined_typename("vector<vector<TH1F> >"),-1,4,"hNbOfBGenJets_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETH3FcOallocatorlETH3FgRsPgR),G__defined_typename("vector<TH3F>"),-1,4,"hNbOfBGenJets_vs_JetPt_vs_JetEta_vs_Njets_=",0,"size : (NbOfDatasets_)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgR),G__defined_typename("vector<vector<TH3F> >"),-1,4,"hNbOfBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_=",0,"size : (NbOfDatasets_)(NbOfBtagWorkingPoint_)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETH3FcOallocatorlETH3FgRsPgR),G__defined_typename("vector<TH3F>"),-1,4,"hNbOfCGenJets_vs_JetPt_vs_JetEta_vs_Njets_=",0,"size : (NbOfDatasets_)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgR),G__defined_typename("vector<vector<TH3F> >"),-1,4,"hNbOfCGenBJets_vs_JetPt_vs_JetEta_vs_Njets_=",0,"size : (NbOfDatasets_)(NbOfBtagWorkingPoint_)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETH3FcOallocatorlETH3FgRsPgR),G__defined_typename("vector<TH3F>"),-1,4,"hNbOfUDSGenJets_vs_JetPt_vs_JetEta_vs_Njets_=",0,"size : (NbOfDatasets_)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgR),G__defined_typename("vector<vector<TH3F> >"),-1,4,"hNbOfUDSGenBJets_vs_JetPt_vs_JetEta_vs_Njets_=",0,"size : (NbOfDatasets_)(NbOfBtagWorkingPoint_)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETH3FcOallocatorlETH3FgRsPgR),G__defined_typename("vector<TH3F>"),-1,4,"hNbOfNonBGenJets_vs_JetPt_vs_JetEta_vs_Njets_=",0,"size : (NbOfDatasets_)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgR),G__defined_typename("vector<vector<TH3F> >"),-1,4,"hNbOfNonBGenBJets_vs_JetPt_vs_JetEta_vs_Njets_=",0,"size : (NbOfDatasets_)(NbOfBtagWorkingPoint_)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgR),G__defined_typename("vector<vector<TEfficiency*> >"),-1,4,"bTagEff_vs_Njets_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgR),G__defined_typename("vector<vector<TEfficiency*> >"),-1,4,"cTagEff_vs_Njets_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgR),G__defined_typename("vector<vector<TEfficiency*> >"),-1,4,"udsTagEff_vs_Njets_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgR),G__defined_typename("vector<vector<TEfficiency*> >"),-1,4,"misTagEff_vs_Njets_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgR),G__defined_typename("vector<TGraphAsymmErrors*>"),-1,4,"bTagEff_vs_Njets_TTlike_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgR),G__defined_typename("vector<TGraphAsymmErrors*>"),-1,4,"misTagEff_vs_Njets_TTlike_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgR),G__defined_typename("vector<TGraphAsymmErrors*>"),-1,4,"misTagEff_vs_Njets_Vlike_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<TH1F> > >"),-1,4,"hNbjets_mc_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<TH1F> > >"),-1,4,"hNbjets_pdf_mc_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<TH1F> > >"),-1,4,"hNbjets_pdf_est_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<TH1F> > >"),-1,4,"hNjetsEstSummary=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<TH1F> > >"),-1,4,"hNbjetsEstSummary=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<TH1F> > >"),-1,4,"hNjetsMCSummary=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<TH1F> > >"),-1,4,"hNbjetsMCSummary=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TLegend),-1,-1,4,"MyLeg=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgR),G__defined_typename("vector<vector<THStack*> >"),-1,4,"hsNbjets_MC=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgR),G__defined_typename("vector<vector<THStack*> >"),-1,4,"hsNbjets_Est=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgR),G__defined_typename("vector<vector<TCanvas*> >"),-1,4,"tCanva_Njets_Summary=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgR),G__defined_typename("vector<vector<TCanvas*> >"),-1,4,"tCanva_Nbjets_Summary=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTopTreecLcLTRootParticle(void) {
   /* TopTree::TRootParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle));
   G__memfunc_setup("TRootParticle",1324,G__Dict_224_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootParticle",1324,G__Dict_224_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootParticle' - 11 - particle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootParticle",1324,G__Dict_224_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootParticle",1324,G__Dict_224_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootParticle",1324,G__Dict_224_0_5, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootParticle",1324,G__Dict_224_0_6, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootParticle",1324,G__Dict_224_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle), -1, 0, 2, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootParticle",1324,G__Dict_224_0_8, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle), -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vx",238,G__Dict_224_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vy",239,G__Dict_224_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vz",240,G__Dict_224_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("type",450,G__Dict_224_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__Dict_224_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("genParticleIndex",1638,G__Dict_224_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,G__Dict_224_0_15, 117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setVx",538,G__Dict_224_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - vx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVy",539,G__Dict_224_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - vy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVz",540,G__Dict_224_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - vz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setType",750,G__Dict_224_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCharge",918,G__Dict_224_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setGenParticleIndex",1938,G__Dict_224_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - genParticleIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_224_0_22, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_224_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_224_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_224_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_224_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_224_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_224_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_224_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_224_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootParticle", 1450, G__Dict_224_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_224_0_35, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootParticle), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootJet(void) {
   /* TopTree::TRootJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet));
   G__memfunc_setup("TRootJet",795,G__Dict_466_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootJet",795,G__Dict_466_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootJet' - 11 - jet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootJet",795,G__Dict_466_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootJet",795,G__Dict_466_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootJet",795,G__Dict_466_0_5, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootJet",795,G__Dict_466_0_6, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootJet",795,G__Dict_466_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet), -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("jetType",741,G__Dict_466_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nConstituents",1409,G__Dict_466_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("jetArea",700,G__Dict_466_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxDistance",1137,G__Dict_466_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_jetBProbabilityBJetTags",2807,G__Dict_466_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_jetProbabilityBJetTags",2741,G__Dict_466_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_trackCountingHighPurBJetTags",3332,G__Dict_466_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_trackCountingHighEffBJetTags",3294,G__Dict_466_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_simpleSecondaryVertexHighEffBJetTags",4146,G__Dict_466_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_simpleSecondaryVertexHighPurBJetTags",4184,G__Dict_466_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_combinedSecondaryVertexBJetTags",3672,G__Dict_466_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_combinedSecondaryVertexRetrainedBJetTags",4598,G__Dict_466_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_combinedSecondaryVertexMVABJetTags",3900,G__Dict_466_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_softMuonBJetTags",2124,G__Dict_466_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_softMuonByPtBJetTags",2507,G__Dict_466_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_softMuonByIP3dBJetTags",2615,G__Dict_466_0_23, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_softElectronByPtBJetTags",2920,G__Dict_466_0_24, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btag_softElectronByIP3dBJetTags",3028,G__Dict_466_0_25, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMistag_SF",1181,G__Dict_466_0_26, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR), G__defined_typename("map<std::string,float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBtag_SF",950,G__Dict_466_0_27, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR), G__defined_typename("map<std::string,float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMistag_SFerr",1510,G__Dict_466_0_28, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR), G__defined_typename("map<std::string,float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBtag_SFerr",1279,G__Dict_466_0_29, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR), G__defined_typename("map<std::string,float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("partonFlavour",1395,G__Dict_466_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTopJet",818,G__Dict_466_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getJetCorrFactor",1624,G__Dict_466_0_32, 102, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setJetType",1041,G__Dict_466_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - jetType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNConstituents",1709,G__Dict_466_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nConstituents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setJetArea",1000,G__Dict_466_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - jetArea", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxDistance",1437,G__Dict_466_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - maxDistance", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_jetBProbabilityBJetTags",3107,G__Dict_466_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_jetBProbabilityBJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_jetProbabilityBJetTags",3041,G__Dict_466_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_jetProbabilityBJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_trackCountingHighPurBJetTags",3632,G__Dict_466_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_trackCountingHighPurBJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_trackCountingHighEffBJetTags",3594,G__Dict_466_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_trackCountingHighEffBJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_simpleSecondaryVertexHighEffBJetTags",4446,G__Dict_466_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_simpleSecondaryVertexHighEffBJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_simpleSecondaryVertexHighPurBJetTags",4484,G__Dict_466_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_simpleSecondaryVertexHighPurBJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_combinedSecondaryVertexBJetTags",3972,G__Dict_466_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_combinedSecondaryVertexBJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_combinedSecondaryVertexRetrainedBJetTags",4898,G__Dict_466_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_combinedSecondaryVertexBJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_combinedSecondaryVertexMVABJetTags",4200,G__Dict_466_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_combinedSecondaryVertexMVABJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_softMuonBJetTags",2424,G__Dict_466_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_softMuonBJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_softMuonByPtBJetTags",2807,G__Dict_466_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_softMuonByPtBJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_softMuonByIP3dBJetTags",2915,G__Dict_466_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_softMuonByIP3dBJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_softElectronByPtBJetTags",3220,G__Dict_466_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_softElectronByPtBJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_softElectronByIP3dBJetTags",3328,G__Dict_466_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - btag_softElectronByIP3dBJetTags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPartonFlavour",1695,G__Dict_466_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - partonFlavour", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsTopJet",1118,G__Dict_466_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - isTopJet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMistag_SF",1193,G__Dict_466_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,float,less<string>,allocator<pair<const string,float> > >' 'map<std::string,float>' 0 - mistag_SF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_SF",962,G__Dict_466_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,float,less<string>,allocator<pair<const string,float> > >' 'map<std::string,float>' 0 - btag_SF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMistag_SFerr",1522,G__Dict_466_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,float,less<string>,allocator<pair<const string,float> > >' 'map<std::string,float>' 0 - mistag_SFerr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtag_SFerr",1291,G__Dict_466_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,float,less<string>,allocator<pair<const string,float> > >' 'map<std::string,float>' 0 - btag_SFerr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setJetCorrFactor",1636,G__Dict_466_0_58, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - pos u 'string' - 0 - name "
"f - - 0 - factor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_466_0_59, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootJet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_466_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootJet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_466_0_61, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootJet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_466_0_62, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootJet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_466_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_466_0_67, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootJet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_466_0_68, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootJet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_466_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootJet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_466_0_70, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootJet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootJet", 921, G__Dict_466_0_71, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_466_0_72, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJet), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootMuon(void) {
   /* TopTree::TRootMuon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon));
   G__memfunc_setup("TRootMuon",919,G__Dict_467_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMuon",919,G__Dict_467_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootMuon' - 11 - muon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMuon",919,G__Dict_467_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMuon",919,G__Dict_467_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMuon",919,G__Dict_467_0_5, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMuon",919,G__Dict_467_0_6, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMuon",919,G__Dict_467_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon), -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isoR03_emEt",1002,G__Dict_467_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isoR03_hadEt",1093,G__Dict_467_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isoR03_sumPt",1144,G__Dict_467_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("relativeIso03",1258,G__Dict_467_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("algo",419,G__Dict_467_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGlobalMuon",1228,G__Dict_467_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTrackerMuon",1351,G__Dict_467_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isStandAloneMuon",1636,G__Dict_467_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isCaloMuon",1018,G__Dict_467_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isPFMuon",785,G__Dict_467_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id",205,G__Dict_467_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idAllGlobalMuons",1609,G__Dict_467_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idAllTrackerMuons",1732,G__Dict_467_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idAllStandAloneMuons",2017,G__Dict_467_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idTrackerMuonArbitrated",2362,G__Dict_467_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idAllArbitrated",1512,G__Dict_467_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idGlobalMuonPromptTight",2367,G__Dict_467_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idTMLastStationLoose",2022,G__Dict_467_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idTMLastStationTight",2020,G__Dict_467_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idTMLastStationAngTight",2298,G__Dict_467_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idTMOneStationLoose",1908,G__Dict_467_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idTMOneStationTight",1906,G__Dict_467_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idTMLastStationOptimizedLowPtLoose",3473,G__Dict_467_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idTMLastStationOptimizedLowPtTight",3471,G__Dict_467_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idTM2DCompatibilityLoose",2368,G__Dict_467_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idTM2DCompatibilityTight",2366,G__Dict_467_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vetoEm",624,G__Dict_467_0_34, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vetoHad",715,G__Dict_467_0_35, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("d0",148,G__Dict_467_0_36, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("d0error",702,G__Dict_467_0_37, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dz",222,G__Dict_467_0_38, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dzerror",776,G__Dict_467_0_39, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chi2",358,G__Dict_467_0_40, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nofValidHits",1227,G__Dict_467_0_41, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nofValidMuHits",1421,G__Dict_467_0_42, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nofValidPixelHits",1741,G__Dict_467_0_43, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nofMatchedStations",1870,G__Dict_467_0_44, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nofTrackerLayersWithMeasurement",3233,G__Dict_467_0_45, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargedHadronIso",1621,G__Dict_467_0_46, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("puChargedHadronIso",1818,G__Dict_467_0_47, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("photonIso",963,G__Dict_467_0_48, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("neutralHadronIso",1666,G__Dict_467_0_49, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setIsoR03",812,G__Dict_467_0_51, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - isoR03_emEt f - 'Float_t' 0 - isoR03_hadEt "
"f - 'Float_t' 0 - isoR03_sumPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAlgo",719,G__Dict_467_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - algo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsPFMuon",1085,G__Dict_467_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - isPFMuon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setID",473,G__Dict_467_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setID",473,G__Dict_467_0_55, 121, -1, -1, 0, 15, 1, 1, 0, 
"i - 'Int_t' 0 - AllGlobalMuons i - 'Int_t' 0 - AllTrackerMuons "
"i - 'Int_t' 0 - AllStandAloneMuons i - 'Int_t' 0 - TrackerMuonArbitrated "
"i - 'Int_t' 0 - AllArbitrated i - 'Int_t' 0 - GlobalMuonPromptTight "
"i - 'Int_t' 0 - TMLastStationLoose i - 'Int_t' 0 - TMLastStationTight "
"i - 'Int_t' 0 - TMLastStationAngTight i - 'Int_t' 0 - TMOneStationLoose "
"i - 'Int_t' 0 - TMOneStationTight i - 'Int_t' 0 - TMLastStationOptimizedLowPtLoose "
"i - 'Int_t' 0 - TMLastStationOptimizedLowPtTight i - 'Int_t' 0 - TM2DCompatibilityLoose "
"i - 'Int_t' 0 - TM2DCompatibilityTight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVetoEm",924,G__Dict_467_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - vetoEm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVetoHad",1015,G__Dict_467_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - vetoHad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setD0",448,G__Dict_467_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - d0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setD0Error",970,G__Dict_467_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - d0Error", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDZ",490,G__Dict_467_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - dz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDZError",1012,G__Dict_467_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - dzError", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChi2",658,G__Dict_467_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNofValidHits",1527,G__Dict_467_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nofValidHits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNofValidMuHits",1721,G__Dict_467_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNofValidPixelHits",2041,G__Dict_467_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNofMatchedStations",2170,G__Dict_467_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNofTrackerLayersWithMeasurement",3533,G__Dict_467_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChargedHadronIso",1921,G__Dict_467_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - chargedHadronIso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPuChargedHadronIso",2118,G__Dict_467_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - iso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhotonIso",1263,G__Dict_467_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - photonIso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNeutralHadronIso",1966,G__Dict_467_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - neutralHadronIso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_467_0_72, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootMuon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_467_0_73, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootMuon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_467_0_74, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootMuon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_467_0_75, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootMuon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_467_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_467_0_80, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootMuon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_467_0_81, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootMuon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_467_0_82, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootMuon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_467_0_83, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootMuon::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootMuon", 1045, G__Dict_467_0_84, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_467_0_85, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMuon), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootMuon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootGenEvent(void) {
   /* TopTree::TRootGenEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEvent));
   G__memfunc_setup("TRootGenEvent",1300,G__Dict_468_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootGenEvent",1300,G__Dict_468_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEvent), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootGenEvent' - 11 - gevt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTtBar",697,G__Dict_468_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isFullHadronic",1431,G__Dict_468_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSemiLeptonic",1448,G__Dict_468_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isFullLeptonic",1453,G__Dict_468_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("semiLeptonicChannel",1957,G__Dict_468_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEventcLcLLeptonType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSemiLeptonic",1448,G__Dict_468_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i 'TopTree::TRootGenEvent::LeptonType' - 0 - typeA", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("neutrino",884,G__Dict_468_0_9, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lepton",658,G__Dict_468_0_10, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("leptonicDecayW",1435,G__Dict_468_0_11, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("leptonicDecayB",1414,G__Dict_468_0_12, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("leptonicDecayTop",1655,G__Dict_468_0_13, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadronicDecayW",1413,G__Dict_468_0_14, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadronicDecayB",1392,G__Dict_468_0_15, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadronicDecayTop",1633,G__Dict_468_0_16, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadronicDecayQuark",1842,G__Dict_468_0_17, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadronicDecayQuarkBar",2119,G__Dict_468_0_18, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("leptonicDecayTopRadiation",2578,G__Dict_468_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadronicDecayTopRadiation",2556,G__Dict_468_0_20, 117, G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ISR",238,G__Dict_468_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBoolean",1004,G__Dict_468_0_22, 121, -1, -1, 0, 4, 1, 1, 0, 
"g - 'Bool_t' 0 - isTtBar g - 'Bool_t' 0 - isFullHadronic "
"g - 'Bool_t' 0 - isSemiLeptonic g - 'Bool_t' 0 - isFullLeptonic", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSemiLeptonicChannel",2225,G__Dict_468_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TopTree::TRootGenEvent::LeptonType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTLorentzVector",1761,G__Dict_468_0_24, 121, -1, -1, 0, 10, 1, 1, 0, 
"u 'TLorentzVector' - 1 - lepton u 'TLorentzVector' - 1 - neutrino "
"u 'TLorentzVector' - 1 - leptonicDecayW u 'TLorentzVector' - 1 - leptonicDecayB "
"u 'TLorentzVector' - 1 - leptonicDecayTop u 'TLorentzVector' - 1 - hadronicDecayW "
"u 'TLorentzVector' - 1 - hadronicDecayB u 'TLorentzVector' - 1 - hadronicDecayTop "
"u 'TLorentzVector' - 1 - hadronicDecayQuark u 'TLorentzVector' - 1 - hadronicDecayQuarkBar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRadiation",1223,G__Dict_468_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - leptonicDecayTopRadiation u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - hadronicDecayTopRadiation "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - ISR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,G__Dict_468_0_26, 117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__Dict_468_0_27, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootGenEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_468_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootGenEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_468_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootGenEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_468_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootGenEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_468_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_468_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootGenEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_468_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootGenEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_468_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootGenEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_468_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootGenEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootGenEvent", 1426, G__Dict_468_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_468_0_40, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenEvent), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootGenEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootMCParticle(void) {
   /* TopTree::TRootMCParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle));
   G__memfunc_setup("TRootMCParticle",1468,G__Dict_474_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMCParticle",1468,G__Dict_474_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootMCParticle' - 11 - particle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMCParticle",1468,G__Dict_474_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMCParticle",1468,G__Dict_474_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMCParticle",1468,G__Dict_474_0_5, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMCParticle",1468,G__Dict_474_0_6, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 18, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"f - 'Float_t' 0 - charge i - 'Int_t' 0 - status "
"i - 'Int_t' 0 - nDau i - 'Int_t' 0 - motherType "
"i - 'Int_t' 0 - grannyType i - 'Int_t' 0 - dauOneId "
"i - 'Int_t' 0 - dauTwoId i - 'Int_t' 0 - dauThreeId "
"i - 'Int_t' 0 - dauFourId i - 'Int_t' 0 - genParticleIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMCParticle",1468,G__Dict_474_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMCParticle",1468,G__Dict_474_0_8, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMCParticle",1468,G__Dict_474_0_9, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 13, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge "
"i - 'Int_t' 0 - status i - 'Int_t' 0 - nDau "
"i - 'Int_t' 0 - motherType i - 'Int_t' 0 - grannyType "
"i - 'Int_t' 0 - dauOneId i - 'Int_t' 0 - dauTwoId "
"i - 'Int_t' 0 - dauThreeId i - 'Int_t' 0 - dauFourId "
"i - 'Int_t' 0 - genParticleIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__Dict_474_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nDau",392,G__Dict_474_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("motherType",1073,G__Dict_474_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("grannyType",1073,G__Dict_474_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dauOneId",777,G__Dict_474_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dauTwoId",801,G__Dict_474_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dauThreeId",991,G__Dict_474_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dauFourId",899,G__Dict_474_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setStatus",976,G__Dict_474_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setnDau",724,G__Dict_474_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nDau", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMotherType",1373,G__Dict_474_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - motherType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setGrannyType",1373,G__Dict_474_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - grannyType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDauOneId",1077,G__Dict_474_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - dauOneId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDauTwoId",1101,G__Dict_474_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - dauTwoId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDauThreeId",1291,G__Dict_474_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - dauThreeId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDauFourId",1199,G__Dict_474_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - dauFourId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_474_0_27, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootMCParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_474_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootMCParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_474_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootMCParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_474_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootMCParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_474_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_474_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootMCParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_474_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootMCParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_474_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootMCParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_474_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootMCParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootMCParticle", 1594, G__Dict_474_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_474_0_40, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootMCParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootGenTop(void) {
   /* TopTree::TRootGenTop */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop));
   G__memfunc_setup("TRootGenTop",1093,G__Dict_518_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootGenTop",1093,G__Dict_518_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootMCParticle' - 11 - top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootGenTop",1093,G__Dict_518_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop), -1, 0, 7, 1, 1, 0, 
"g - - 10 - isLeptonic u 'TopTree::TRootMCParticle' - 1 - top "
"u 'TopTree::TRootMCParticle' - 1 - W u 'TopTree::TRootMCParticle' - 1 - b "
"u 'TopTree::TRootMCParticle' - 1 - prod1 u 'TopTree::TRootMCParticle' - 1 - prod2 "
"u 'string' - 0 'string(\"\")' production", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootGenTop",1093,G__Dict_518_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootGenTop' - 11 - top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHadronic",1028,G__Dict_518_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLeptonic",1050,G__Dict_518_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLeptonicMu",1244,G__Dict_518_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLeptonicEl",1227,G__Dict_518_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLeptonicTau",1348,G__Dict_518_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHadronicWellSeparated",2353,G__Dict_518_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "f - - 0 '1.0' deltaMin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaRMinHadronicTop",1979,G__Dict_518_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Production",1063,G__Dict_518_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("From",404,G__Dict_518_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromGluino",1026,G__Dict_518_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromStop",826,G__Dict_518_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FromSbottom",1148,G__Dict_518_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("W",87,G__Dict_518_0_17, 117, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bquark",646,G__Dict_518_0_18, 117, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("quark",548,G__Dict_518_0_19, 117, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("quarkBar",825,G__Dict_518_0_20, 117, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lepton",658,G__Dict_518_0_21, 117, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("neutrino",884,G__Dict_518_0_22, 117, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMCParticle), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_518_0_23, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootGenTop::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_518_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootGenTop::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_518_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootGenTop::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_518_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootGenTop::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_518_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_518_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootGenTop::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_518_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootGenTop::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_518_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootGenTop::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_518_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootGenTop::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootGenTop", 1219, G__Dict_518_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_518_0_36, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenTop), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootGenTop' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootNPGenEvent(void) {
   /* TopTree::TRootNPGenEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootNPGenEvent));
   G__memfunc_setup("TRootNPGenEvent",1458,G__Dict_519_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootNPGenEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootNPGenEvent",1458,G__Dict_519_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootNPGenEvent), -1, 0, 9, 1, 1, 0, 
"g - 'Bool_t' 10 - isNewPhysics u 'vector<TopTree::TRootGenTop,allocator<TopTree::TRootGenTop> >' 'vector<TopTree::TRootGenTop>' 10 - tops "
"u 'vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >' 'vector<TopTree::TRootMCParticle>' 10 - leptons u 'vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >' 'vector<TopTree::TRootMCParticle>' 10 - quarks "
"u 'vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >' 'vector<TopTree::TRootMCParticle>' 10 - bquarks u 'vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >' 'vector<TopTree::TRootMCParticle>' 10 - invisibleParticles "
"u 'vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >' 'vector<TopTree::TRootMCParticle>' 10 - neutrinos u 'vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >' 'vector<TopTree::TRootMCParticle>' 10 - gluinos "
"u 'vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >' 'vector<TopTree::TRootMCParticle>' 10 - stops", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootNPGenEvent",1458,G__Dict_519_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootNPGenEvent), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootNPGenEvent' - 11 - gevt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,G__Dict_519_0_4, 117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isNewPhysics",1257,G__Dict_519_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isThereTop",1031,G__Dict_519_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfTops",1252,G__Dict_519_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfLeptons",1571,G__Dict_519_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfQuarks",1461,G__Dict_519_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfBQuarks",1527,G__Dict_519_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfInvisibleParticles",2698,G__Dict_519_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfNeutrinos",1797,G__Dict_519_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfGluinos",1567,G__Dict_519_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfStops",1367,G__Dict_519_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tops",454,G__Dict_519_0_15, 117, G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("leptons",773,G__Dict_519_0_16, 117, G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("quarks",663,G__Dict_519_0_17, 117, G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bquarks",761,G__Dict_519_0_18, 117, G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("invisibleParticles",1900,G__Dict_519_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("neutrinos",999,G__Dict_519_0_20, 117, G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gluinos",769,G__Dict_519_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("stops",569,G__Dict_519_0_22, 117, G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_519_0_23, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootNPGenEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_519_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootNPGenEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_519_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootNPGenEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_519_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootNPGenEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_519_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_519_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootNPGenEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_519_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootNPGenEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_519_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootNPGenEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_519_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootNPGenEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootNPGenEvent", 1584, G__Dict_519_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_519_0_36, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootNPGenEvent), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootNPGenEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootMET(void) {
   /* TopTree::TRootMET */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET));
   G__memfunc_setup("TRootMET",734,G__Dict_528_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMET",734,G__Dict_528_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootMET' - 11 - met", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMET",734,G__Dict_528_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMET",734,G__Dict_528_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMET",734,G__Dict_528_0_5, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMET",734,G__Dict_528_0_6, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootMET",734,G__Dict_528_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET), -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METType",648,G__Dict_528_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumEt",526,G__Dict_528_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setMETType",980,G__Dict_528_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - METType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSumEt",826,G__Dict_528_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - sumEt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_528_0_13, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootMET::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_528_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootMET::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_528_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootMET::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_528_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootMET::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_528_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_528_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootMET::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_528_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootMET::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_528_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootMET::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_528_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootMET::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootMET", 860, G__Dict_528_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_528_0_26, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootMET), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootMET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAnalysisEnvironment(void) {
   /* AnalysisEnvironment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_AnalysisEnvironment));
   G__memfunc_setup("AnalysisEnvironment",2009,G__Dict_604_0_1, 105, G__get_linked_tagnum(&G__DictLN_AnalysisEnvironment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AnalysisEnvironment",2009,G__Dict_604_0_2, 105, G__get_linked_tagnum(&G__DictLN_AnalysisEnvironment), -1, 0, 1, 1, 1, 0, "u 'AnalysisEnvironment' - 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runOnObs",822,G__Dict_604_0_3, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iobs", "* return true if it should run on obs iobs*/", (void*) NULL, 0);
   G__memfunc_setup("runOnObs",822,G__Dict_604_0_4, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - strobs", "* return true if it should run on obs strobs*/", (void*) NULL, 0);
   G__memfunc_setup("ChecklistOfObs",1395,G__Dict_604_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "* check whether observables in listOfObs are defined in the Observables class*/", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_604_0_6, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AnalysisEnvironment::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_604_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AnalysisEnvironment::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_604_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AnalysisEnvironment::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_604_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AnalysisEnvironment::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_604_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_604_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AnalysisEnvironment::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_604_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AnalysisEnvironment::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_604_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AnalysisEnvironment::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_604_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AnalysisEnvironment::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AnalysisEnvironment", 2135, G__Dict_604_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_604_0_19, (int) ('u'), G__get_linked_tagnum(&G__DictLN_AnalysisEnvironment), -1, 1, 1, 1, 1, 0, "u 'AnalysisEnvironment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBinningFirstGuess(void) {
   /* BinningFirstGuess */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_BinningFirstGuess));
   G__memfunc_setup("BinningFirstGuess",1748,G__Dict_675_0_1, 105, G__get_linked_tagnum(&G__DictLN_BinningFirstGuess), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BinningFirstGuess",1748,G__Dict_675_0_2, 105, G__get_linked_tagnum(&G__DictLN_BinningFirstGuess), -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - intLumi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BinningFirstGuess",1748,G__Dict_675_0_3, 105, G__get_linked_tagnum(&G__DictLN_BinningFirstGuess), -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 - isOnMC d - 'Double_t' 0 - intLumi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BinningFirstGuess",1748,G__Dict_675_0_4, 105, G__get_linked_tagnum(&G__DictLN_BinningFirstGuess), -1, 0, 1, 1, 1, 0, "u 'BinningFirstGuess' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_675_0_5, 117, G__get_linked_tagnum(&G__DictLN_BinningFirstGuess), -1, 1, 1, 1, 1, 1, "u 'BinningFirstGuess' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBinningFirstGuess",2068,G__Dict_675_0_6, 85, G__get_linked_tagnum(&G__DictLN_TAxis), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - varname d - 'Double_t' 0 - intLumiEstim "
"i - 'Int_t' 0 '10' minEntries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBinningsFirstGuess",2183,G__Dict_675_0_7, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOTAxismUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTAxismUgRsPgRsPgR), G__defined_typename("map<string,TAxis*>"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - intLumiEstim i - 'Int_t' 0 '10' minEntries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__Dict_675_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Observables' - 11 - obs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__Dict_675_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_675_0_10, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BinningFirstGuess::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_675_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BinningFirstGuess::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_675_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BinningFirstGuess::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_675_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BinningFirstGuess::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_675_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_675_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BinningFirstGuess::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_675_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BinningFirstGuess::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_675_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BinningFirstGuess::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_675_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BinningFirstGuess::DeclFileLine) ), 0);
   G__memfunc_setup("getBinningFirstGuess",2068,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__DictLN_TAxis), -1, 0, 3, 1, 4, 0, 
"U 'TH1D' - 0 - h d - 'Double_t' 0 - intLumiEstim "
"i - 'Int_t' 0 '10' minEntries", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BinningFirstGuess", 1874, G__Dict_675_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncContainer(void) {
   /* Container */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_Container));
   G__memfunc_setup("Container",931,G__Dict_714_0_1, 105, G__get_linked_tagnum(&G__DictLN_Container), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Container",931,G__Dict_714_0_2, 105, G__get_linked_tagnum(&G__DictLN_Container), -1, 0, 1, 1, 1, 0, "u 'Container' - 11 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__Dict_714_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInt",587,G__Dict_714_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFloat",790,G__Dict_714_0_5, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDouble",891,G__Dict_714_0_6, 117, G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__Dict_714_0_7, 117, G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInt",599,G__Dict_714_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFloat",802,G__Dict_714_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDouble",903,G__Dict_714_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetString",931,G__Dict_714_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'vector<string>' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__Dict_714_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__Dict_714_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__Dict_714_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__Dict_714_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_714_0_16, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Container::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_714_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Container::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_714_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Container::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_714_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Container::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_714_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_714_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Container::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_714_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Container::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_714_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Container::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_714_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Container::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Container", 1057, G__Dict_714_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_714_0_29, (int) ('u'), G__get_linked_tagnum(&G__DictLN_Container), -1, 1, 1, 1, 1, 0, "u 'Container' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataset(void) {
   /* Dataset */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_Dataset));
   G__memfunc_setup("Dataset",710,G__Dict_715_0_1, 105, G__get_linked_tagnum(&G__DictLN_Dataset), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dataset",710,G__Dict_715_0_2, 105, G__get_linked_tagnum(&G__DictLN_Dataset), -1, 0, 8, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - title "
"g - - 0 - doIt i - - 0 - color "
"i - - 0 - lineStyle i - - 0 - lineWidth "
"f - - 0 - normFactor f - - 0 - xsection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dataset",710,G__Dict_715_0_3, 105, G__get_linked_tagnum(&G__DictLN_Dataset), -1, 0, 9, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - title "
"g - - 0 - doIt i - - 0 - color "
"i - - 0 - lineStyle i - - 0 - lineWidth "
"f - - 0 - normFactor f - - 0 - xsection "
"u 'vector<string,allocator<string> >' 'vector<string>' 0 - filenames", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dataset",710,G__Dict_715_0_4, 105, G__get_linked_tagnum(&G__DictLN_Dataset), -1, 0, 1, 1, 1, 0, "u 'Dataset' - 11 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Name",385,G__Dict_715_0_5, 117, G__get_linked_tagnum(&G__DictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Title",514,G__Dict_715_0_6, 117, G__get_linked_tagnum(&G__DictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoIt",368,G__Dict_715_0_7, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Color",511,G__Dict_715_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LineStyle",921,G__Dict_715_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LineWidth",904,G__Dict_715_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NormFactor",1019,G__Dict_715_0_11, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Xsection",845,G__Dict_715_0_12, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XsectionError",1367,G__Dict_715_0_13, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mass",404,G__Dict_715_0_14, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreSelEfficiency",1600,G__Dict_715_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EquivalentLumi",1461,G__Dict_715_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NofEvtsToRunOver",1625,G__Dict_715_0_17, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventTree",946,G__Dict_715_0_18, 85, G__get_linked_tagnum(&G__DictLN_TChain), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runTree",741,G__Dict_715_0_19, 85, G__get_linked_tagnum(&G__DictLN_TChain), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Filenames",916,G__Dict_715_0_20, 117, G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JSONInfo",710,G__Dict_715_0_21, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), G__defined_typename("vector<vector<int> >"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__Dict_715_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitle",814,G__Dict_715_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEquivalentLuminosity",2439,G__Dict_715_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - EqLumi", "* will recompute NormFactor = 1/EqLumi*/", (void*) NULL, 0);
   G__memfunc_setup("SetXsection",1145,G__Dict_715_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Xsection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMass",704,G__Dict_715_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOriginalNumberOfEvents",2548,G__Dict_715_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - NofEvts", "* will compute NormFactor = Xsection/TNofEvts */", (void*) NULL, 0);
   G__memfunc_setup("SetPreselEffAndNumberOfPreselEvents",3513,G__Dict_715_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - PreselEff i - - 0 - NofSEvts", "* will compute NormFactor = Xsection*PreselEff/NofPreselEvts */", (void*) NULL, 0);
   G__memfunc_setup("SetXsectionError",1667,G__Dict_715_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - xsectionError", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadJSONFile",1078,G__Dict_715_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - JSONFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColor",811,G__Dict_715_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - Color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_715_0_32, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Dataset::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_715_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Dataset::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_715_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Dataset::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_715_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Dataset::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_715_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_715_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Dataset::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_715_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Dataset::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_715_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Dataset::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_715_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Dataset::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Dataset", 836, G__Dict_715_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_715_0_45, (int) ('u'), G__get_linked_tagnum(&G__DictLN_Dataset), -1, 1, 1, 1, 1, 0, "u 'Dataset' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMCExpectation(void) {
   /* MCExpectation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_MCExpectation));
   G__memfunc_setup("MCExpectation",1300,G__Dict_720_0_1, 105, G__get_linked_tagnum(&G__DictLN_MCExpectation), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCExpectation",1300,G__Dict_720_0_2, 105, G__get_linked_tagnum(&G__DictLN_MCExpectation), -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - Label f - - 0 - Luminosity "
"u 'pair<float,float>' - 0 - TriggEff u 'pair<float,float>' - 0 - SkimEff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCExpectation",1300,G__Dict_720_0_3, 105, G__get_linked_tagnum(&G__DictLN_MCExpectation), -1, 0, 1, 1, 1, 0, "u 'MCExpectation' - 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVJets",780,G__Dict_720_0_4, 117, G__get_linked_tagnum(&G__DictLN_pairlEfloatcOfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLabel",780,G__Dict_720_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - Label", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLuminosity",1385,G__Dict_720_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Lumi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEfficiencies",1513,G__Dict_720_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'pair<float,float>' - 0 - MuonSelEff u 'pair<float,float>' - 0 - SecondLeptonVetoEff "
"u 'pair<float,float>' - 0 - JetSelEff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__Dict_720_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'Dataset' - 11 - d f - - 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compute",733,G__Dict_720_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillEfficiencies",1604,G__Dict_720_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'Dataset' - 11 - d g - - 0 - isMuonSelected "
"g - - 0 - isPassVeto g - - 0 - isJetSelected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBtagConditions",1697,G__Dict_720_0_11, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - algo f - - 0 - bdisCut "
"u 'pair<float,float>' - 0 - Eb u 'pair<float,float>' - 0 - Eusdc "
"u 'pair<float,float>' - 0 - Eudsc_vj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_720_0_12, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MCExpectation::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_720_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCExpectation::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_720_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MCExpectation::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_720_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MCExpectation::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_720_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_720_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCExpectation::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_720_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MCExpectation::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_720_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCExpectation::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_720_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MCExpectation::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MCExpectation", 1426, G__Dict_720_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMCObsExpectation(void) {
   /* MCObsExpectation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_MCObsExpectation));
   G__memfunc_setup("MCObsExpectation",1592,G__Dict_729_0_1, 105, G__get_linked_tagnum(&G__DictLN_MCObsExpectation), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCObsExpectation",1592,G__Dict_729_0_2, 105, G__get_linked_tagnum(&G__DictLN_MCObsExpectation), -1, 0, 4, 1, 1, 0, 
"u 'vector<Dataset*,allocator<Dataset*> >' 'vector<Dataset*>' 0 - datasets U 'TAxis' - 0 - axis "
"u 'string' - 0 - VarLabel f - - 0 - Luminosity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCObsExpectation",1592,G__Dict_729_0_3, 105, G__get_linked_tagnum(&G__DictLN_MCObsExpectation), -1, 0, 6, 1, 1, 0, 
"u 'vector<Dataset*,allocator<Dataset*> >' 'vector<Dataset*>' 0 - datasets i - - 0 - nbins "
"f - - 0 - min f - - 0 - max "
"u 'string' - 0 - VarLabel f - - 0 - Luminosity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCObsExpectation",1592,G__Dict_729_0_4, 105, G__get_linked_tagnum(&G__DictLN_MCObsExpectation), -1, 0, 1, 1, 1, 0, "u 'MCObsExpectation' - 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColors",926,G__Dict_729_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Dataset*,allocator<Dataset*> >' 'vector<Dataset*>' 0 - datasets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__Dict_729_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'Dataset' - 0 - dataset f - - 0 - variable "
"f - - 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compute",733,G__Dict_729_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistogram",1230,G__Dict_729_0_8, 85, G__get_linked_tagnum(&G__DictLN_TH1F), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - hname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_hNewPhysicsSignal",2130,G__Dict_729_0_9, 85, G__get_linked_tagnum(&G__DictLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTHStackSMProcesses",2057,G__Dict_729_0_10, 85, G__get_linked_tagnum(&G__DictLN_THStack), -1, 0, 0, 1, 1, 0, "", "return the sum of all SM processes*/", (void*) NULL, 0);
   G__memfunc_setup("GetTHStackAll",1227,G__Dict_729_0_11, 85, G__get_linked_tagnum(&G__DictLN_THStack), -1, 0, 0, 1, 1, 0, "", "return the sum of all processes including new physics*/", (void*) NULL, 0);
   G__memfunc_setup("GetHistoSMProcesses",1918,G__Dict_729_0_12, 85, G__get_linked_tagnum(&G__DictLN_TH1F), -1, 0, 0, 1, 1, 0, "", "return the sum of all SM processes*/", (void*) NULL, 0);
   G__memfunc_setup("GetHistoAll",1088,G__Dict_729_0_13, 85, G__get_linked_tagnum(&G__DictLN_TH1F), -1, 0, 0, 1, 1, 0, "", "return the sum of all processes including new physics*/", (void*) NULL, 0);
   G__memfunc_setup("GetlegSMProcess",1495,G__Dict_729_0_14, 85, G__get_linked_tagnum(&G__DictLN_TLegend), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_729_0_15, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MCObsExpectation::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_729_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCObsExpectation::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_729_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MCObsExpectation::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_729_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MCObsExpectation::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_729_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_729_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCObsExpectation::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_729_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MCObsExpectation::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_729_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCObsExpectation::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_729_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MCObsExpectation::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MCObsExpectation", 1718, G__Dict_729_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_729_0_28, (int) ('u'), G__get_linked_tagnum(&G__DictLN_MCObsExpectation), -1, 1, 1, 1, 1, 0, "u 'MCObsExpectation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootCaloJet(void) {
   /* TopTree::TRootCaloJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet));
   G__memfunc_setup("TRootCaloJet",1178,G__Dict_734_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloJet",1178,G__Dict_734_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootCaloJet' - 11 - jet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloJet",1178,G__Dict_734_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootJet' - 11 - jet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloJet",1178,G__Dict_734_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloJet",1178,G__Dict_734_0_5, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloJet",1178,G__Dict_734_0_6, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloJet",1178,G__Dict_734_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloJet",1178,G__Dict_734_0_8, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet), -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("etaetaMoment",1252,G__Dict_734_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phiphiMoment",1266,G__Dict_734_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ecalEnergyFraction",1845,G__Dict_734_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hcalEnergyFraction",1848,G__Dict_734_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxEInEmTowers",1400,G__Dict_734_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxEInHadTowers",1491,G__Dict_734_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("towersArea",1053,G__Dict_734_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("n90",215,G__Dict_734_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("n60",212,G__Dict_734_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fHPD",322,G__Dict_734_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fRBX",338,G__Dict_734_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("n90Hits",623,G__Dict_734_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHCALTowers",1034,G__Dict_734_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nECALTowers",1031,G__Dict_734_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargedMultiplicity",2007,G__Dict_734_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setetaetaMoment",1584,G__Dict_734_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - etaetaMoment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setphiphiMoment",1598,G__Dict_734_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - phiphiMoment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEcalEnergyFraction",2145,G__Dict_734_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - ecalEnergyFraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHcalEnergyFraction",2148,G__Dict_734_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - hcalEnergyFraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxEInEmTowers",1700,G__Dict_734_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - maxEInEmTowers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxEInHadTowers",1791,G__Dict_734_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - maxEInHadTowers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTowersArea",1353,G__Dict_734_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - towersArea", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setN90",515,G__Dict_734_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n90", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setN60",512,G__Dict_734_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n60", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setfHPD",654,G__Dict_734_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - fHPD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setfRBX",670,G__Dict_734_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - fRBX", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setn90Hits",955,G__Dict_734_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - n90Hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setnHCALTowers",1366,G__Dict_734_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nHCALTowers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setnECALTowers",1363,G__Dict_734_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nECALTowers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChargedMultiplicity",2307,G__Dict_734_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - chargedMultiplicity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_734_0_40, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootCaloJet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_734_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootCaloJet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_734_0_42, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootCaloJet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_734_0_43, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootCaloJet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_734_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_734_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootCaloJet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_734_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootCaloJet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_734_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootCaloJet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_734_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootCaloJet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootCaloJet", 1304, G__Dict_734_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_734_0_53, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloJet), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootCaloJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootCaloMET(void) {
   /* TopTree::TRootCaloMET */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET));
   G__memfunc_setup("TRootCaloMET",1117,G__Dict_735_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloMET",1117,G__Dict_735_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootCaloMET' - 11 - met", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloMET",1117,G__Dict_735_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootMET' - 11 - met", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloMET",1117,G__Dict_735_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloMET",1117,G__Dict_735_0_5, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloMET",1117,G__Dict_735_0_6, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloMET",1117,G__Dict_735_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootCaloMET",1117,G__Dict_735_0_8, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET), -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxEtInEmTowers",1516,G__Dict_735_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxEtInHadTowers",1607,G__Dict_735_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadEtInHO",820,G__Dict_735_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadEtInHB",807,G__Dict_735_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadEtInHF",811,G__Dict_735_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadEtInHE",810,G__Dict_735_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("emEtInEB",713,G__Dict_735_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("emEtInEE",716,G__Dict_735_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("emEtInHF",720,G__Dict_735_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("etFractionHadronic",1847,G__Dict_735_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("etFractionEm",1217,G__Dict_735_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("metSignificance",1545,G__Dict_735_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("caloMETInpHF",1082,G__Dict_735_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("caloMETInmHF",1079,G__Dict_735_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("caloSETInpHF",1088,G__Dict_735_0_23, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("caloSETInmHF",1085,G__Dict_735_0_24, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("caloMETPhiInpHF",1371,G__Dict_735_0_25, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("caloMETPhiInmHF",1368,G__Dict_735_0_26, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setMaxEtInEmTowers",1816,G__Dict_735_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - maxEtInEmTowers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxEtInHadTowers",1907,G__Dict_735_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - maxEtInHadTowers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadEtInHO",1120,G__Dict_735_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - hadEtInHO", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadEtInHB",1107,G__Dict_735_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - hadEtInHB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadEtInHF",1111,G__Dict_735_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - hadEtInHF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadEtInHE",1110,G__Dict_735_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - hadEtInHE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEmEtInEB",1013,G__Dict_735_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - emEtInEB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEmEtInEE",1016,G__Dict_735_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - emEtInEE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEmEtInHF",1020,G__Dict_735_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - emEtInHF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEtFractionHadronic",2147,G__Dict_735_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - etFractionHadronic", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEtFractionEm",1517,G__Dict_735_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - etFractionEm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMETSignificance",1781,G__Dict_735_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - metSignificance", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCaloMETInpHF",1382,G__Dict_735_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - caloMETInpHF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCaloMETInmHF",1379,G__Dict_735_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - caloMETInmHF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCaloSETInpHF",1388,G__Dict_735_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - caloSETInpHF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCaloSETInmHF",1385,G__Dict_735_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - caloSETInmHF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCaloMETPhiInpHF",1671,G__Dict_735_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - caloMETPhiInpHF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCaloMETPhiInmHF",1668,G__Dict_735_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - caloMETPhiInmHF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCaloMETFraction",1767,G__Dict_735_0_46, 121, -1, -1, 0, 18, 1, 1, 0, 
"f - 'Float_t' 0 - maxEtInEmTowers f - 'Float_t' 0 - maxEtInHadTowers "
"f - 'Float_t' 0 - hadEtInHO f - 'Float_t' 0 - hadEtInHB "
"f - 'Float_t' 0 - hadEtInHF f - 'Float_t' 0 - hadEtInHE "
"f - 'Float_t' 0 - emEtInEB f - 'Float_t' 0 - emEtInEE "
"f - 'Float_t' 0 - emEtInHF f - 'Float_t' 0 - etFractionHadronic "
"f - 'Float_t' 0 - etFractionEm f - 'Float_t' 0 - metSignificance "
"f - 'Float_t' 0 - caloMETInpHF f - 'Float_t' 0 - caloMETInmHF "
"f - 'Float_t' 0 - caloSETInpHF f - 'Float_t' 0 - caloSETInmHF "
"f - 'Float_t' 0 - caloMETPhiInpHF f - 'Float_t' 0 - caloMETPhiInmHF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_735_0_47, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootCaloMET::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_735_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootCaloMET::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_735_0_49, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootCaloMET::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_735_0_50, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootCaloMET::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_735_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_735_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootCaloMET::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_735_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootCaloMET::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_735_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootCaloMET::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_735_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootCaloMET::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootCaloMET", 1243, G__Dict_735_0_59, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_735_0_60, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootCaloMET), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootCaloMET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootElectron(void) {
   /* TopTree::TRootElectron */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron));
   G__memfunc_setup("TRootElectron",1332,G__Dict_736_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootElectron",1332,G__Dict_736_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootElectron' - 11 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootElectron",1332,G__Dict_736_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootElectron",1332,G__Dict_736_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootElectron",1332,G__Dict_736_0_5, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"i - 'Int_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootElectron",1332,G__Dict_736_0_6, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootElectron",1332,G__Dict_736_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron), -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isEcalDrivenSeed",1594,G__Dict_736_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTrackerDrivenSeed",1937,G__Dict_736_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ecalDrivenMomentum",1871,G__Dict_736_0_11, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eScOverP",775,G__Dict_736_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eEleClusterOverPout",1953,G__Dict_736_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eSeedClusterOverPout",2060,G__Dict_736_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deltaEtaIn",987,G__Dict_736_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deltaEtaOut",1116,G__Dict_736_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deltaPhiIn",994,G__Dict_736_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deltaPhiOut",1123,G__Dict_736_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deltaPhiScTrkOut",1610,G__Dict_736_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deltaEtaScTrkOut",1603,G__Dict_736_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ioEmIoP",658,G__Dict_736_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ioEmIoPgsf",978,G__Dict_736_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackPixelLayersWithMeasurement",3241,G__Dict_736_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackStripLayersWithMeasurement",3257,G__Dict_736_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackerLayersWithMeasurement",2942,G__Dict_736_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackNValidHits",1515,G__Dict_736_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ip3d",368,G__Dict_736_0_27, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ip3dError",890,G__Dict_736_0_28, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("d0",148,G__Dict_736_0_29, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("d0Error",670,G__Dict_736_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dz",222,G__Dict_736_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("missingHits",1170,G__Dict_736_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackNormalizedChi2",1904,G__Dict_736_0_33, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gsfTrackNormalizedChi2",2192,G__Dict_736_0_34, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("superClusterRawEnergy",2213,G__Dict_736_0_35, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("superClusterEta",1579,G__Dict_736_0_36, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("preshowerEnergy",1609,G__Dict_736_0_37, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaIEtaIEta",1239,G__Dict_736_0_38, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaIPhiIPhi",1253,G__Dict_736_0_39, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaIEtaIPhi",1246,G__Dict_736_0_40, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e1x5",323,G__Dict_736_0_41, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e5x5",327,G__Dict_736_0_42, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadronicOverEm",1430,G__Dict_736_0_43, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadronicDepth1OverEm",1980,G__Dict_736_0_44, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadronicDepth2OverEm",1981,G__Dict_736_0_45, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("etaWidth",826,G__Dict_736_0_46, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phiWidth",833,G__Dict_736_0_47, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("r9",171,G__Dict_736_0_48, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ecalIso",704,G__Dict_736_0_49, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "h - - 0 - cone", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hcalIso",707,G__Dict_736_0_50, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "h - - 0 - cone", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hcalIso_Dept1",1248,G__Dict_736_0_51, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "h - - 0 - cone", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hcalIso_Dept2",1249,G__Dict_736_0_52, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "h - - 0 - cone", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("caloIso",714,G__Dict_736_0_53, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "h - - 0 - cone", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackerIso",1047,G__Dict_736_0_54, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "h - - 0 - cone", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("combinedIso",1132,G__Dict_736_0_55, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 8, 
"h - - 0 - tkcone h - - 0 - ecalcone "
"h - - 0 - hcalcone", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargedHadronIso",1621,G__Dict_736_0_56, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("puChargedHadronIso",1818,G__Dict_736_0_57, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("photonIso",963,G__Dict_736_0_58, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("neutralHadronIso",1666,G__Dict_736_0_59, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("relativePfIso",1341,G__Dict_736_0_60, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fbrem",524,G__Dict_736_0_61, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfBrems",1335,G__Dict_736_0_62, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dist",404,G__Dict_736_0_63, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DCot",362,G__Dict_736_0_64, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("passConversion",1501,G__Dict_736_0_65, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mvaTrigId",903,G__Dict_736_0_66, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mvaNonTrigId",1202,G__Dict_736_0_67, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEcalSeeding",1408,G__Dict_736_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - isEcal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEcalDrivenMomentum",2171,G__Dict_736_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - ecalDrivenMomentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackerSeeding",1751,G__Dict_736_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - isTracker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDeltaEtaIn",1287,G__Dict_736_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - deltaEtaIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDeltaEtaOut",1416,G__Dict_736_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - deltaEtaOut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDeltaEtaSuperClusterTrackAtCalo",3434,G__Dict_736_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDeltaPhiIn",1294,G__Dict_736_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - deltaPhiIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDeltaPhiOut",1423,G__Dict_736_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - deltaPhiOut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDeltaPhiSuperClusterTrackAtCalo",3441,G__Dict_736_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergySuperClusterOverP",2707,G__Dict_736_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergyEleClusterOverPout",2802,G__Dict_736_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergySeedClusterOverPout",2909,G__Dict_736_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIoEmIoP",958,G__Dict_736_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIoEmIoPgsf",1278,G__Dict_736_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIp3d",668,G__Dict_736_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIp3dError",1190,G__Dict_736_0_83, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setD0",448,G__Dict_736_0_84, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setD0Error",970,G__Dict_736_0_85, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - d0Error", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDz",522,G__Dict_736_0_86, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackMissingHits",1971,G__Dict_736_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackNormalizedChi2",2204,G__Dict_736_0_88, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setGsfTrackNormalizedChi2",2492,G__Dict_736_0_89, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPixelLayersWithMeasurement",3040,G__Dict_736_0_90, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStripLayersWithMeasurement",3056,G__Dict_736_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - stripLayersWithMeasurement", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNValidHits",1314,G__Dict_736_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nHits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPreshowerEnergy",1909,G__Dict_736_0_93, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSuperClusterRawEnergy",2513,G__Dict_736_0_94, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSuperClusterEta",1879,G__Dict_736_0_95, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setE1x5",623,G__Dict_736_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - e1x5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setE5x5",627,G__Dict_736_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - e5x5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHoverEDepth1",1467,G__Dict_736_0_98, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - HoE1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHoverEDepth2",1468,G__Dict_736_0_99, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - HoE2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigmaIetaIeta",1603,G__Dict_736_0_100, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - sieie", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigmaIphiIphi",1617,G__Dict_736_0_101, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - sipip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigmaIetaIphi",1610,G__Dict_736_0_102, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - sieip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEtaWidth",1126,G__Dict_736_0_103, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - etaWidth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhiWidth",1133,G__Dict_736_0_104, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - phiWidth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setR9",471,G__Dict_736_0_105, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - r9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsoR03_emEt",1302,G__Dict_736_0_106, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - isoR03_emEt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsoR03_Depth1HadEt",1911,G__Dict_736_0_107, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - isoR03_hadEt1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsoR03_Depth2HadEt",1912,G__Dict_736_0_108, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - isoR03_hadEt2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsoR03_sumPt",1444,G__Dict_736_0_109, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - isoR03_sumPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsoR04_emEt",1303,G__Dict_736_0_110, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - isoR04_emEt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsoR04_Depth1HadEt",1912,G__Dict_736_0_111, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - isoR04_hadEt1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsoR04_Depth2HadEt",1913,G__Dict_736_0_112, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - isoR04_hadEt2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsoR04_sumPt",1445,G__Dict_736_0_113, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - isoR04_sumPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChargedHadronIso",1921,G__Dict_736_0_114, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - chargedHadronIso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPuChargedHadronIso",2118,G__Dict_736_0_115, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - iso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhotonIso",1263,G__Dict_736_0_116, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - photonIso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNeutralHadronIso",1966,G__Dict_736_0_117, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - neutralHadronIso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFbrem",824,G__Dict_736_0_118, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNBrems",915,G__Dict_736_0_119, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDist",736,G__Dict_736_0_120, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - dist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDCot",694,G__Dict_736_0_121, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - dcot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPassConversion",1801,G__Dict_736_0_122, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - pass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMvaTrigId",1203,G__Dict_736_0_123, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMvaNonTrigId",1502,G__Dict_736_0_124, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_736_0_125, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootElectron::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_736_0_126, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootElectron::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_736_0_127, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootElectron::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_736_0_128, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootElectron::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_736_0_132, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_736_0_133, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootElectron::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_736_0_134, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootElectron::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_736_0_135, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootElectron::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_736_0_136, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootElectron::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootElectron", 1458, G__Dict_736_0_137, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_736_0_138, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootElectron), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootElectron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLtriggeredObject(void) {
   /* TopTree::triggeredObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLtriggeredObject));
   G__memfunc_setup("triggeredObject",1556,G__Dict_737_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLtriggeredObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_737_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::triggeredObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_737_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::triggeredObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_737_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::triggeredObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_737_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::triggeredObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__Dict_737_0_6, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__Dict_737_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__Dict_737_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_737_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_737_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::triggeredObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_737_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::triggeredObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_737_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::triggeredObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_737_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::triggeredObject::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("triggeredObject", 1556, G__Dict_737_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLtriggeredObject), -1, 0, 1, 1, 1, 0, "u 'TopTree::triggeredObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~triggeredObject", 1682, G__Dict_737_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_737_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLtriggeredObject), -1, 1, 1, 1, 1, 0, "u 'TopTree::triggeredObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootEvent(void) {
   /* TopTree::TRootEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootEvent));
   G__memfunc_setup("TRootEvent",1018,G__Dict_738_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nb",208,G__Dict_738_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventId",719,G__Dict_738_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runId",514,G__Dict_738_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lumiBlockId",1103,G__Dict_738_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flavorHistoryPath",1801,G__Dict_738_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kt6PFJets_rho",1257,G__Dict_738_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kt6PFJetsForIsolation_rho",2498,G__Dict_738_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nTracks",726,G__Dict_738_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHighPurityTracks",1763,G__Dict_738_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPu",307,G__Dict_738_0_11, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nBX", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nTruePU",691,G__Dict_738_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("passGlobalHLT",1264,G__Dict_738_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHLTPaths",854,G__Dict_738_0_14, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trigHLT",670,G__Dict_738_0_15, 117, G__get_linked_tagnum(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<Bool_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trigHLT",670,G__Dict_738_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idParton1",882,G__Dict_738_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xParton1",797,G__Dict_738_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idParton2",883,G__Dict_738_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xParton2",798,G__Dict_738_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("factorizationScale",1893,G__Dict_738_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTriggerFilters",1773,G__Dict_738_0_22, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRsPgRsPgRsPgR), G__defined_typename("map<std::string,std::vector<TopTree::triggeredObject> >"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNb",508,G__Dict_738_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventId",1019,G__Dict_738_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - eventId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunId",814,G__Dict_738_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLumiBlockId",1403,G__Dict_738_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - lumiBlockId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setflavorHistoryPath",2133,G__Dict_738_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - flavHistPath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setKt6PFJets_rho",1557,G__Dict_738_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - kt6PFJets_rho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setKt6PFJetsForIsolation_rho",2798,G__Dict_738_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - kt6PFJetsForIsolation_rho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNTracks",1026,G__Dict_738_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nTracks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPu",607,G__Dict_738_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nBX i - 'Int_t' 0 - nPu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNTruePU",991,G__Dict_738_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - nTruePU", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNHighPurityTracks",2063,G__Dict_738_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nHighPurityTracks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setGlobalHLT",1157,G__Dict_738_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - passGlobalHLT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrigHLT",970,G__Dict_738_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<bool,allocator<bool> >' 'vector<Bool_t>' 0 - trigHLT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIdParton1",1182,G__Dict_738_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idParton1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXParton1",1097,G__Dict_738_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xParton1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIdParton2",1183,G__Dict_738_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idParton2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXParton2",1098,G__Dict_738_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xParton2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFactorizationScale",2193,G__Dict_738_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - factorizationScale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTriggerObject",1588,G__Dict_738_0_41, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - path i - 'Int_t' 0 - id "
"f - 'Float_t' 0 - pt f - 'Float_t' 0 - eta "
"f - 'Float_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_738_0_42, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_738_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_738_0_44, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_738_0_45, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_738_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_738_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_738_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_738_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_738_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TRootEvent", 1018, G__Dict_738_0_54, (int) ('i'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootEvent), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootEvent", 1144, G__Dict_738_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_738_0_56, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootEvent), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootGenJet(void) {
   /* TopTree::TRootGenJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet));
   G__memfunc_setup("TRootGenJet",1077,G__Dict_750_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootGenJet",1077,G__Dict_750_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootGenJet' - 11 - genJet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootGenJet",1077,G__Dict_750_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootGenJet",1077,G__Dict_750_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootGenJet",1077,G__Dict_750_0_5, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootGenJet",1077,G__Dict_750_0_6, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootGenJet",1077,G__Dict_750_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet), -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("etaetaMoment",1252,G__Dict_750_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phiphiMoment",1266,G__Dict_750_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("emEnergy",828,G__Dict_750_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadEnergy",919,G__Dict_750_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("invisibleEnergy",1583,G__Dict_750_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("n90",215,G__Dict_750_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("n60",212,G__Dict_750_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nConstituents",1409,G__Dict_750_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxDistance",1137,G__Dict_750_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setetaetaMoment",1584,G__Dict_750_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - etaetaMoment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setphiphiMoment",1598,G__Dict_750_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - phiphiMoment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEMEnergy",1096,G__Dict_750_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - emEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadEnergy",1219,G__Dict_750_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - hadEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInvisibleEnergy",1883,G__Dict_750_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - invisibleEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setN90",515,G__Dict_750_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n90", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setN60",512,G__Dict_750_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n60", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNConstituents",1709,G__Dict_750_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nConstituents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxDistance",1437,G__Dict_750_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - maxDistance", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_750_0_27, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootGenJet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_750_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootGenJet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_750_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootGenJet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_750_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootGenJet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_750_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_750_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootGenJet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_750_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootGenJet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_750_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootGenJet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_750_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootGenJet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootGenJet", 1203, G__Dict_750_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_750_0_40, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootGenJet), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootGenJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootHLTInfo(void) {
   /* TopTree::TRootHLTInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootHLTInfo));
   G__memfunc_setup("TRootHLTInfo",1132,G__Dict_751_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootHLTInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootHLTInfo",1132,G__Dict_751_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootHLTInfo), -1, 0, 5, 1, 1, 0, 
"h - 'UInt_t' 0 - RunID u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - hltNames "
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 0 - hltWasRun u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 0 - hltErrors "
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 0 - hltAccept", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hltNames",828,G__Dict_751_0_3, 117, G__get_linked_tagnum(&G__DictLN_string), -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - trigId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hltWasRun",936,G__Dict_751_0_4, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - trigId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hltAccept",920,G__Dict_751_0_5, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - trigId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hltErrors",965,G__Dict_751_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - trigId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunID",450,G__Dict_751_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHLTPaths",854,G__Dict_751_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hltPath",725,G__Dict_751_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "u 'string' - 0 - hltName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sethltWasRun",1268,G__Dict_751_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - trigId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sethltAccept",1252,G__Dict_751_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - trigId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sethltErrors",1297,G__Dict_751_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - trigId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_751_0_13, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootHLTInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_751_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootHLTInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_751_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootHLTInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_751_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootHLTInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_751_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_751_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootHLTInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_751_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootHLTInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_751_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootHLTInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_751_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootHLTInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TRootHLTInfo", 1132, G__Dict_751_0_25, (int) ('i'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootHLTInfo), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootHLTInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootHLTInfo", 1258, G__Dict_751_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_751_0_27, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootHLTInfo), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootHLTInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootJPTJet(void) {
   /* TopTree::TRootJPTJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet));
   G__memfunc_setup("TRootJPTJet",1033,G__Dict_752_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootJPTJet",1033,G__Dict_752_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootJPTJet' - 11 - jet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootJPTJet",1033,G__Dict_752_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootJet' - 11 - jet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootJPTJet",1033,G__Dict_752_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootJPTJet",1033,G__Dict_752_0_5, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootJPTJet",1033,G__Dict_752_0_6, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootJPTJet",1033,G__Dict_752_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootJPTJet",1033,G__Dict_752_0_8, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet), -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("etaetaMoment",1252,G__Dict_752_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phiphiMoment",1266,G__Dict_752_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ecalEnergyFraction",1845,G__Dict_752_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hcalEnergyFraction",1848,G__Dict_752_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxEInEmTowers",1400,G__Dict_752_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxEInHadTowers",1491,G__Dict_752_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("towersArea",1053,G__Dict_752_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("n90",215,G__Dict_752_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("n60",212,G__Dict_752_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fHPD",322,G__Dict_752_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fRBX",338,G__Dict_752_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("n90Hits",623,G__Dict_752_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHCALTowers",1034,G__Dict_752_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nECALTowers",1031,G__Dict_752_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargedMultiplicity",2007,G__Dict_752_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargedHadronEnergyFraction",2762,G__Dict_752_0_24, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setetaetaMoment",1584,G__Dict_752_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - etaetaMoment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setphiphiMoment",1598,G__Dict_752_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - phiphiMoment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEcalEnergyFraction",2145,G__Dict_752_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - ecalEnergyFraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHcalEnergyFraction",2148,G__Dict_752_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - hcalEnergyFraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxEInEmTowers",1700,G__Dict_752_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - maxEInEmTowers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxEInHadTowers",1791,G__Dict_752_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - maxEInHadTowers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTowersArea",1353,G__Dict_752_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - towersArea", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setN90",515,G__Dict_752_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n90", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setN60",512,G__Dict_752_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n60", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setfHPD",654,G__Dict_752_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - fHPD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setfRBX",670,G__Dict_752_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - fRBX", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setn90Hits",955,G__Dict_752_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - n90Hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setnHCALTowers",1366,G__Dict_752_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nHCALTowers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setnECALTowers",1363,G__Dict_752_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nECALTowers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChargedMultiplicity",2307,G__Dict_752_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - chargedMultiplicity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setchargedHadronEnergyFraction",3094,G__Dict_752_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - chargedHadronEnergyFraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_752_0_42, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootJPTJet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_752_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootJPTJet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_752_0_44, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootJPTJet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_752_0_45, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootJPTJet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_752_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_752_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootJPTJet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_752_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootJPTJet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_752_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootJPTJet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_752_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootJPTJet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootJPTJet", 1159, G__Dict_752_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_752_0_55, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootJPTJet), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootJPTJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootPFJet(void) {
   /* TopTree::TRootPFJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet));
   G__memfunc_setup("TRootPFJet",945,G__Dict_753_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFJet",945,G__Dict_753_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootPFJet' - 11 - jet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFJet",945,G__Dict_753_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootJet' - 11 - jet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFJet",945,G__Dict_753_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFJet",945,G__Dict_753_0_5, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFJet",945,G__Dict_753_0_6, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFJet",945,G__Dict_753_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFJet",945,G__Dict_753_0_8, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet), -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargedHadronEnergyFraction",2762,G__Dict_753_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("neutralHadronEnergyFraction",2807,G__Dict_753_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargedEmEnergyFraction",2336,G__Dict_753_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargedMuEnergyFraction",2352,G__Dict_753_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("neutralEmEnergyFraction",2381,G__Dict_753_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargedMultiplicity",2007,G__Dict_753_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("neutralMultiplicity",2052,G__Dict_753_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muonMultiplicity",1736,G__Dict_753_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setChargedHadronEnergyFraction",3062,G__Dict_753_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - chargedHadronEnergyFraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNeutralHadronEnergyFraction",3107,G__Dict_753_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - neutralHadronEnergyFraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChargedEmEnergyFraction",2636,G__Dict_753_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - chargedEmEnergyFraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChargedMuEnergyFraction",2652,G__Dict_753_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - chargedMuEnergyFraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNeutralEmEnergyFraction",2681,G__Dict_753_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - neutralEmEnergyFraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChargedMultiplicity",2307,G__Dict_753_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - chargedMultiplicity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNeutralMultiplicity",2352,G__Dict_753_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - neutralMultiplicity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMuonMultiplicity",2036,G__Dict_753_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - muonMultiplicity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_753_0_26, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootPFJet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_753_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootPFJet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_753_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootPFJet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_753_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootPFJet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_753_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_753_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootPFJet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_753_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootPFJet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_753_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootPFJet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_753_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootPFJet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootPFJet", 1071, G__Dict_753_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_753_0_39, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFJet), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootPFJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootPFMET(void) {
   /* TopTree::TRootPFMET */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET));
   G__memfunc_setup("TRootPFMET",884,G__Dict_754_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFMET",884,G__Dict_754_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootPFMET' - 11 - met", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFMET",884,G__Dict_754_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootMET' - 11 - met", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFMET",884,G__Dict_754_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFMET",884,G__Dict_754_0_5, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFMET",884,G__Dict_754_0_6, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFMET",884,G__Dict_754_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootPFMET",884,G__Dict_754_0_8, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET), -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NeutralEMFraction",1699,G__Dict_754_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NeutralHadEtFraction",2007,G__Dict_754_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChargedEMEtFraction",1839,G__Dict_754_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChargedHadEtFraction",1962,G__Dict_754_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MuonEtFraction",1422,G__Dict_754_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Type6EtFraction",1479,G__Dict_754_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Type7EtFraction",1480,G__Dict_754_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setPFMETFraction",1534,G__Dict_754_0_17, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - NeutralEMFraction d - 'Double_t' 0 - NeutralHadEtFraction "
"d - 'Double_t' 0 - ChargedEMEtFraction d - 'Double_t' 0 - ChargedHadEtFraction "
"d - 'Double_t' 0 - MuonEtFraction d - 'Double_t' 0 - Type6EtFraction "
"d - 'Double_t' 0 - Type7EtFraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_754_0_18, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootPFMET::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_754_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootPFMET::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_754_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootPFMET::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_754_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootPFMET::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_754_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_754_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootPFMET::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_754_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootPFMET::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_754_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootPFMET::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_754_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootPFMET::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootPFMET", 1010, G__Dict_754_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_754_0_31, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootPFMET), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootPFMET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootRun(void) {
   /* TopTree::TRootRun */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootRun));
   G__memfunc_setup("TRootRun",813,G__Dict_755_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHLTEvents",971,G__Dict_755_0_2, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHLTWasRun",950,G__Dict_755_0_3, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHLTAccept",934,G__Dict_755_0_4, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHLTErrors",979,G__Dict_755_0_5, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hltInputTag",1140,G__Dict_755_0_6, 117, G__get_linked_tagnum(&G__DictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHLTInputTag",1376,G__Dict_755_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - hltInputTag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNHLTEvents",1271,G__Dict_755_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nHLTEvents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNHLTWasRun",1250,G__Dict_755_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nHLTWasRun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNHLTAccept",1234,G__Dict_755_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nHLTAccept", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNHLTErrors",1279,G__Dict_755_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nHLTErrors", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHLTinfos",1107,G__Dict_755_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TopTree::TRootHLTInfo,allocator<TopTree::TRootHLTInfo> >' 'vector<TopTree::TRootHLTInfo>' 0 - hltInfos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHLTinfo",980,G__Dict_755_0_13, 117, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootHLTInfo), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - RunID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyHLTinfos",1218,G__Dict_755_0_14, 117, G__get_linked_tagnum(&G__DictLN_vectorlETopTreecLcLTRootHLTInfocOallocatorlETopTreecLcLTRootHLTInfogRsPgR), G__defined_typename("vector<TopTree::TRootHLTInfo>"), 0, 0, 1, 1, 8, "", "for the skimmer", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_755_0_15, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootRun::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_755_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootRun::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_755_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootRun::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_755_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootRun::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_755_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_755_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootRun::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_755_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootRun::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_755_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootRun::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_755_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootRun::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TRootRun", 813, G__Dict_755_0_27, (int) ('i'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootRun), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootRun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRootRun", 939, G__Dict_755_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_755_0_29, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootRun), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootRun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootSpinCorrGen(void) {
   /* TopTree::TRootSpinCorrGen */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootSpinCorrGen));
   G__memfunc_setup("TRootSpinCorrGen",1602,G__Dict_760_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootSpinCorrGen), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootSpinCorrGen",1602,G__Dict_760_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootSpinCorrGen), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootSpinCorrGen' - 11 - gevt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosThetaTLHel",1268,G__Dict_760_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosThetaTBHel",1258,G__Dict_760_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosThetaTQHel",1273,G__Dict_760_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosPhi",614,G__Dict_760_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("topsZMFMass",1095,G__Dict_760_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setcosThetaTLHel",1600,G__Dict_760_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - cosThetaTLHel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setcosThetaTBHel",1590,G__Dict_760_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - cosThetaTBHel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setcosThetaTQHel",1605,G__Dict_760_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - cosThetaTQHel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setcosPhi",946,G__Dict_760_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - cosPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("settopsZMFMass",1427,G__Dict_760_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - topsZMFMass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,G__Dict_760_0_13, 117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__Dict_760_0_14, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootSpinCorrGen::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_760_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootSpinCorrGen::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_760_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootSpinCorrGen::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_760_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootSpinCorrGen::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_760_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_760_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootSpinCorrGen::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_760_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootSpinCorrGen::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_760_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootSpinCorrGen::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_760_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootSpinCorrGen::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootSpinCorrGen", 1728, G__Dict_760_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_760_0_27, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootSpinCorrGen), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootSpinCorrGen' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootTrackMET(void) {
   /* TopTree::TRootTrackMET */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET));
   G__memfunc_setup("TRootTrackMET",1235,G__Dict_761_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootTrackMET",1235,G__Dict_761_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootTrackMET' - 11 - met", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootTrackMET",1235,G__Dict_761_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootMET' - 11 - met", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootTrackMET",1235,G__Dict_761_0_4, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootTrackMET",1235,G__Dict_761_0_5, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootTrackMET",1235,G__Dict_761_0_6, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - vtx_x d - 'Double_t' 0 - vtx_y "
"d - 'Double_t' 0 - vtx_z i - 'Int_t' 0 - type "
"f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootTrackMET",1235,G__Dict_761_0_7, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootTrackMET",1235,G__Dict_761_0_8, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET), -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - momentum u 'TVector3' - 11 - vertex "
"i - 'Int_t' 0 - type f - 'Float_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("typeName",835,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__Dict_761_0_10, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootTrackMET::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_761_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootTrackMET::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_761_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootTrackMET::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_761_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootTrackMET::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_761_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_761_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootTrackMET::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_761_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootTrackMET::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_761_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootTrackMET::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_761_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootTrackMET::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootTrackMET", 1361, G__Dict_761_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_761_0_23, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootTrackMET), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootTrackMET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTopTreecLcLTRootVertex(void) {
   /* TopTree::TRootVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootVertex));
   G__memfunc_setup("TRootVertex",1142,G__Dict_762_0_1, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootVertex",1142,G__Dict_762_0_2, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootVertex), -1, 0, 1, 1, 1, 0, "u 'TopTree::TRootVertex' - 11 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRootVertex",1142,G__Dict_762_0_3, 105, G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootVertex), -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isValid",716,G__Dict_762_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isFake",595,G__Dict_762_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chi2",358,G__Dict_762_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ndof",423,G__Dict_762_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("normalizedChi2",1403,G__Dict_762_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tracksSize",1059,G__Dict_762_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xError",642,G__Dict_762_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("yError",643,G__Dict_762_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zError",644,G__Dict_762_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsValid",1016,G__Dict_762_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - isValid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsFake",895,G__Dict_762_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - isFake", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChi2",658,G__Dict_762_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNdof",723,G__Dict_762_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - ndof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTracksSize",1359,G__Dict_762_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tracksSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXError",942,G__Dict_762_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xError", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setYError",943,G__Dict_762_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - yError", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZError",944,G__Dict_762_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - zError", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_762_0_21, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TopTree::TRootVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_762_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_762_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TopTree::TRootVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_762_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TopTree::TRootVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_762_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_762_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_762_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_762_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TopTree::TRootVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_762_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TopTree::TRootVertex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRootVertex", 1268, G__Dict_762_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_762_0_34, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TopTreecLcLTRootVertex), -1, 1, 1, 1, 1, 0, "u 'TopTree::TRootVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLightMonster(void) {
   /* LightMonster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_LightMonster));
   G__memfunc_setup("LightMonster",1248,G__Dict_770_0_1, 105, G__get_linked_tagnum(&G__DictLN_LightMonster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventID",687,G__Dict_770_0_2, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runID",482,G__Dict_770_0_3, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lumiBlockID",1071,G__Dict_770_0_4, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idParton1",882,G__Dict_770_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xParton1",797,G__Dict_770_0_6, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idParton2",883,G__Dict_770_0_7, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xParton2",798,G__Dict_770_0_8, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("factorizationScale",1893,G__Dict_770_0_9, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPV",276,G__Dict_770_0_10, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPUBXm1",587,G__Dict_770_0_11, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPU",275,G__Dict_770_0_12, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPUBXp1",590,G__Dict_770_0_13, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nTruePU",691,G__Dict_770_0_14, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("topMass",743,G__Dict_770_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("antiTopMass",1139,G__Dict_770_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectedSemiMu",1433,G__Dict_770_0_17, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("semiMuDecay",1110,G__Dict_770_0_18, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("semiElDecay",1093,G__Dict_770_0_19, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("topDecayedLept",1431,G__Dict_770_0_20, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("all4JetsMCMatched",1609,G__Dict_770_0_21, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allHadronicJetsMCMatched",2365,G__Dict_770_0_22, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mvaVals",730,G__Dict_770_0_23, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mvaVal",615,G__Dict_770_0_24, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mvaResult",963,G__Dict_770_0_25, 72, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventWeight",1162,G__Dict_770_0_26, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mTopFit",707,G__Dict_770_0_27, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaMTopFit",1204,G__Dict_770_0_28, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chi2MTopFit",1033,G__Dict_770_0_29, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadrBJet",772,G__Dict_770_0_30, 105, -1, -1, 0, 0, 1, 1, 8, "", "index, according to MC", (void*) NULL, 0);
   G__memfunc_setup("hadrLJet1",831,G__Dict_770_0_31, 105, -1, -1, 0, 0, 1, 1, 8, "", "index, according to MC", (void*) NULL, 0);
   G__memfunc_setup("hadrLJet2",832,G__Dict_770_0_32, 105, -1, -1, 0, 0, 1, 1, 8, "", "index, according to MC", (void*) NULL, 0);
   G__memfunc_setup("leptBJet",794,G__Dict_770_0_33, 105, -1, -1, 0, 0, 1, 1, 8, "", "index, according to MC", (void*) NULL, 0);
   G__memfunc_setup("met",326,G__Dict_770_0_34, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectedJets",1247,G__Dict_770_0_35, 117, G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectedJet",1132,G__Dict_770_0_36, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bTagCSV",618,G__Dict_770_0_37, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lepton",658,G__Dict_770_0_38, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("leptonCharge",1244,G__Dict_770_0_39, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("leptonPFRelIso",1398,G__Dict_770_0_40, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadrBQuark",997,G__Dict_770_0_41, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadrLQuark1",1056,G__Dict_770_0_42, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadrLQuark2",1057,G__Dict_770_0_43, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("leptBQuark",1019,G__Dict_770_0_44, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventID",987,G__Dict_770_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - eventID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunID",782,G__Dict_770_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - runID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLumiBlockID",1371,G__Dict_770_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - lumiBlockID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIdParton1",1182,G__Dict_770_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - Id1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXParton1",1097,G__Dict_770_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIdParton2",1183,G__Dict_770_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - Id2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXParton2",1098,G__Dict_770_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFactorizationScale",2193,G__Dict_770_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPV",576,G__Dict_770_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - nPV", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPUBXm1",887,G__Dict_770_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - nPUBXm1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPU",575,G__Dict_770_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - nPU", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPUBXp1",890,G__Dict_770_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - nPUBXp1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNTruePU",991,G__Dict_770_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - nTruePU", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTopMass",1043,G__Dict_770_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - topMass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAntiTopMass",1439,G__Dict_770_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - antiTopMass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedSemiMu",1733,G__Dict_770_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - selectedSemiMu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSemiMuDecay",1410,G__Dict_770_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - semiMuDecay", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSemiElDecay",1393,G__Dict_770_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - semiElDecay", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTopDecayedLept",1731,G__Dict_770_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - topDecayedLept", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAll4JetsMCMatched",1909,G__Dict_770_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - all4JetsMCMatched", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAllHadronicJetsMCMatched",2665,G__Dict_770_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - allHadronicJetsMCMatched", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMvaVals",1030,G__Dict_770_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 0 - mvaVals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMvaResults",1378,G__Dict_770_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >' 'vector<vector<unsigned int> >' 0 - mvaResults", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventWeight",1462,G__Dict_770_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - eventWeight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMTopFitResults",1761,G__Dict_770_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' 'vector<vector<float> >' 0 - mTopFitResults", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadrBJet",1072,G__Dict_770_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - hadrBJet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadrLJet1",1131,G__Dict_770_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - hadrLJet1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadrLJet2",1132,G__Dict_770_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - hadrLJet2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLeptBJet",1094,G__Dict_770_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - leptBJet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMET",562,G__Dict_770_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - MET", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedJets",1547,G__Dict_770_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - selectedJets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBTagCSV",918,G__Dict_770_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 0 - bTagCSV", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLepton",958,G__Dict_770_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - lepton", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLeptonCharge",1544,G__Dict_770_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - leptonCharge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLeptonPFRelIso",1698,G__Dict_770_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - leptonPFRelIso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadrBQuark",1297,G__Dict_770_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - hadrBQuark", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadrLQuark1",1356,G__Dict_770_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - hadrLQuark1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadrLQuark2",1357,G__Dict_770_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - hadrLQuark2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLeptBQuark",1319,G__Dict_770_0_83, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - leptBQuark", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_770_0_84, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LightMonster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_770_0_85, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LightMonster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_770_0_86, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LightMonster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_770_0_87, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LightMonster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_770_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_770_0_92, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LightMonster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_770_0_93, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LightMonster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_770_0_94, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LightMonster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_770_0_95, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LightMonster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LightMonster", 1248, G__Dict_770_0_96, (int) ('i'), G__get_linked_tagnum(&G__DictLN_LightMonster), -1, 0, 1, 1, 1, 0, "u 'LightMonster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LightMonster", 1374, G__Dict_770_0_97, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_770_0_98, (int) ('u'), G__get_linked_tagnum(&G__DictLN_LightMonster), -1, 1, 1, 1, 1, 0, "u 'LightMonster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWTree(void) {
   /* WTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_WTree));
   G__memfunc_setup("WTree",487,G__Dict_775_0_1, 105, G__get_linked_tagnum(&G__DictLN_WTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventID",687,G__Dict_775_0_2, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runID",482,G__Dict_775_0_3, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lumiBlockID",1071,G__Dict_775_0_4, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPV",276,G__Dict_775_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPUBXm1",587,G__Dict_775_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPU",275,G__Dict_775_0_7, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPUBXp1",590,G__Dict_775_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventWeight",1162,G__Dict_775_0_9, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chi2KinFit",939,G__Dict_775_0_10, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedLepton",1266,G__Dict_775_0_11, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedNeutrino",1492,G__Dict_775_0_12, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedLeptB",1111,G__Dict_775_0_13, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedHadrB",1089,G__Dict_775_0_14, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedLight1",1193,G__Dict_775_0_15, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedLight2",1194,G__Dict_775_0_16, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chi2FullKinFit",1342,G__Dict_775_0_17, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedFullLepton",1669,G__Dict_775_0_18, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedFullNeutrino",1895,G__Dict_775_0_19, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedFullLeptB",1514,G__Dict_775_0_20, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedFullHadrB",1492,G__Dict_775_0_21, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedFullLight1",1596,G__Dict_775_0_22, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedFullLight2",1597,G__Dict_775_0_23, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chi2KinFitMassFit",1634,G__Dict_775_0_24, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedLeptonMassFit",1961,G__Dict_775_0_25, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedNeutrinoMassFit",2187,G__Dict_775_0_26, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedLeptBMassFit",1806,G__Dict_775_0_27, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedHadrBMassFit",1784,G__Dict_775_0_28, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedLight1MassFit",1888,G__Dict_775_0_29, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedLight2MassFit",1889,G__Dict_775_0_30, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chi2FullKinFitMassFit",2037,G__Dict_775_0_31, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedFullLeptonMassFit",2364,G__Dict_775_0_32, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedFullNeutrinoMassFit",2590,G__Dict_775_0_33, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedFullLeptBMassFit",2209,G__Dict_775_0_34, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedFullHadrBMassFit",2187,G__Dict_775_0_35, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedFullLight1MassFit",2291,G__Dict_775_0_36, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fittedFullLight2MassFit",2292,G__Dict_775_0_37, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - - 0 - iCombi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadrBJet",772,G__Dict_775_0_38, 105, -1, -1, 0, 0, 1, 1, 8, "", "index, according to MC", (void*) NULL, 0);
   G__memfunc_setup("hadrLJet1",831,G__Dict_775_0_39, 105, -1, -1, 0, 0, 1, 1, 8, "", "index, according to MC", (void*) NULL, 0);
   G__memfunc_setup("hadrLJet2",832,G__Dict_775_0_40, 105, -1, -1, 0, 0, 1, 1, 8, "", "index, according to MC", (void*) NULL, 0);
   G__memfunc_setup("leptBJet",794,G__Dict_775_0_41, 105, -1, -1, 0, 0, 1, 1, 8, "", "index, according to MC", (void*) NULL, 0);
   G__memfunc_setup("met",326,G__Dict_775_0_42, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectedJets",1247,G__Dict_775_0_43, 117, G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectedJet",1132,G__Dict_775_0_44, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bTagTCHE",674,G__Dict_775_0_45, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bTagTCHP",685,G__Dict_775_0_46, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bTagSSVHE",775,G__Dict_775_0_47, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bTagSSVHP",786,G__Dict_775_0_48, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bTagCSV",618,G__Dict_775_0_49, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muon",447,G__Dict_775_0_50, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadrBQuark",997,G__Dict_775_0_51, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadrLQuark1",1056,G__Dict_775_0_52, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadrLQuark2",1057,G__Dict_775_0_53, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("leptBQuark",1019,G__Dict_775_0_54, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("standardCosTheta",1644,G__Dict_775_0_55, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("standardNeutrino",1701,G__Dict_775_0_56, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("standardLepton",1475,G__Dict_775_0_57, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventID",987,G__Dict_775_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - eventID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunID",782,G__Dict_775_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - runID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLumiBlockID",1371,G__Dict_775_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - lumiBlockID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPV",576,G__Dict_775_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - nPV", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPUBXm1",887,G__Dict_775_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - nPUBXm1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPU",575,G__Dict_775_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - nPU", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPUBXp1",890,G__Dict_775_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - nPUBXp1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventWeight",1462,G__Dict_775_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - eventWeight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setKinFitResults",1667,G__Dict_775_0_66, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - Chi2KinFitResults u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedLepton "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedNeutrino u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedLeptB "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedHadrB u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedLight1 "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedLight2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFullKinFitResults",2070,G__Dict_775_0_67, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - Chi2FullKinFitResults u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedFullLepton "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedFullNeutrino u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedFullLeptB "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedFullHadrB u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedFullLight1 "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedFullLight2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setKinFitResultsMassFit",2362,G__Dict_775_0_68, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - Chi2KinFitResultsMassFit u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedLeptonMassFit "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedNeutrinoMassFit u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedLeptBMassFit "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedHadrBMassFit u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedLight1MassFit "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedLight2MassFit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFullKinFitResultsMassFit",2765,G__Dict_775_0_69, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 0 - Chi2FullKinFitResultsMassFit u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedFullLeptonMassFit "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedFullNeutrinoMassFit u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedFullLeptBMassFit "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedFullHadrBMassFit u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedFullLight1MassFit "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - FittedFullLight2MassFit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadrBJet",1072,G__Dict_775_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - hadrBJet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadrLJet1",1131,G__Dict_775_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - hadrLJet1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadrLJet2",1132,G__Dict_775_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - hadrLJet2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLeptBJet",1094,G__Dict_775_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - leptBJet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMET",562,G__Dict_775_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - MET", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedJets",1547,G__Dict_775_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - selectedJets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBTagTCHE",974,G__Dict_775_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 0 - bTagTCHE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBTagTCHP",985,G__Dict_775_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 0 - bTagTCHP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBTagSSVHE",1075,G__Dict_775_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 0 - bTagSSVHE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBTagSSVHP",1086,G__Dict_775_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 0 - bTagSSVHP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBTagCSV",918,G__Dict_775_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 0 - bTagCSV", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMuon",747,G__Dict_775_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - muon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadrBQuark",1297,G__Dict_775_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - hadrBQuark", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadrLQuark1",1356,G__Dict_775_0_83, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - hadrLQuark1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadrLQuark2",1357,G__Dict_775_0_84, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - hadrLQuark2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLeptBQuark",1319,G__Dict_775_0_85, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - leptBQuark", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStandardCosTheta",1944,G__Dict_775_0_86, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - standardCosTheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStandardNeutrino",2001,G__Dict_775_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - standardNeutrino", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStandardLepton",1775,G__Dict_775_0_88, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - standardLepton", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_775_0_89, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_775_0_90, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_775_0_91, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_775_0_92, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_775_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_775_0_97, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_775_0_98, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_775_0_99, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_775_0_100, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WTree", 487, G__Dict_775_0_101, (int) ('i'), G__get_linked_tagnum(&G__DictLN_WTree), -1, 0, 1, 1, 1, 0, "u 'WTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WTree", 613, G__Dict_775_0_102, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_775_0_103, (int) ('u'), G__get_linked_tagnum(&G__DictLN_WTree), -1, 1, 1, 1, 1, 0, "u 'WTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncInclFourthGenTree(void) {
   /* InclFourthGenTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_InclFourthGenTree));
   G__memfunc_setup("InclFourthGenTree",1704,G__Dict_776_0_1, 105, G__get_linked_tagnum(&G__DictLN_InclFourthGenTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventID",687,G__Dict_776_0_2, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runID",482,G__Dict_776_0_3, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lumiBlockID",1071,G__Dict_776_0_4, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPV",276,G__Dict_776_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPUBXm1",587,G__Dict_776_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPU",275,G__Dict_776_0_7, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPUBXp1",590,G__Dict_776_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flavorHistoryPath",1801,G__Dict_776_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectedSingleLepton",2045,G__Dict_776_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectedSingleMu",1613,G__Dict_776_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectedSingleEl",1596,G__Dict_776_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectedSSLepton",1601,G__Dict_776_0_13, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectedSSMu",1169,G__Dict_776_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectedSSEl",1152,G__Dict_776_0_15, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectedSSMuEl",1346,G__Dict_776_0_16, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectedTriLepton",1738,G__Dict_776_0_17, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectedMuMuMu",1391,G__Dict_776_0_18, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectedMuMuEl",1374,G__Dict_776_0_19, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectedMuElEl",1357,G__Dict_776_0_20, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectedElElEl",1340,G__Dict_776_0_21, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isEE",358,G__Dict_776_0_22, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isEB",355,G__Dict_776_0_23, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isEEEE",496,G__Dict_776_0_24, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isEBEE",493,G__Dict_776_0_25, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isEBEB",490,G__Dict_776_0_26, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("semiMuDecay",1110,G__Dict_776_0_27, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("semiElDecay",1093,G__Dict_776_0_28, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Wbosonpartonsmatched",2133,G__Dict_776_0_29, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WMassmatched",1217,G__Dict_776_0_30, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventWeight",1162,G__Dict_776_0_31, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("met",326,G__Dict_776_0_32, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectedJets",1247,G__Dict_776_0_33, 117, G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectedJet",1132,G__Dict_776_0_34, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bTagTCHE",674,G__Dict_776_0_35, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bTagTCHP",685,G__Dict_776_0_36, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("partonFlavourJet",1686,G__Dict_776_0_37, 117, G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectedForwardJets",1972,G__Dict_776_0_38, 117, G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitJets",810,G__Dict_776_0_39, 117, G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitJetsbTagTCHE",1484,G__Dict_776_0_40, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitJetsbTagTCHP",1495,G__Dict_776_0_41, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectedMuons",1371,G__Dict_776_0_42, 117, G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectedElectrons",1784,G__Dict_776_0_43, 117, G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectedMuonsRelIso",1961,G__Dict_776_0_44, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectedElectronsRelIso",2374,G__Dict_776_0_45, 117, G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mcQuarksForMatching",1945,G__Dict_776_0_46, 117, G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargeMisIdRateBarrel",2084,G__Dict_776_0_47, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargeMisIdRateEndcap",2071,G__Dict_776_0_48, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("quarksFromW",1154,G__Dict_776_0_49, 117, G__get_linked_tagnum(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventID",987,G__Dict_776_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - eventID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunID",782,G__Dict_776_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - runID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLumiBlockID",1371,G__Dict_776_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - lumiBlockID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPV",576,G__Dict_776_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - nPV", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPUBXm1",887,G__Dict_776_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - nPUBXm1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPU",575,G__Dict_776_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - nPU", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPUBXp1",890,G__Dict_776_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - nPUBXp1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFlavorHistoryPath",2101,G__Dict_776_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - flavorHistoryPath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedSingleLepton",2377,G__Dict_776_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - SelectedSingleLepton", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedSingleMu",1945,G__Dict_776_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - SelectedSingleMu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedSingleEl",1928,G__Dict_776_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - SelectedSingleEl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedSSLepton",1933,G__Dict_776_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - SelectedSSLepton", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedSSMu",1501,G__Dict_776_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - SelectedSSMu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedSSEl",1484,G__Dict_776_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - SelectedSSEl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedSSMuEl",1678,G__Dict_776_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - SelectedSSMuEl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedTriLepton",2070,G__Dict_776_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - SelectedTriLepton", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedMuMuMu",1723,G__Dict_776_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - SelectedMuMuMu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedMuMuEl",1706,G__Dict_776_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - SelectedMuMuEl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedMuElEl",1689,G__Dict_776_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - SelectedMuElEl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedElElEl",1672,G__Dict_776_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - SelectedElElEl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedEE",1279,G__Dict_776_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - isEE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedEB",1276,G__Dict_776_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - isEB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedEEEE",1417,G__Dict_776_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - isEEEE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedEBEE",1414,G__Dict_776_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - isEBEE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedEBEB",1411,G__Dict_776_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - isEBEB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSemiMuDecay",1410,G__Dict_776_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - semiMuDecay", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSemiElDecay",1393,G__Dict_776_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - semiElDecay", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWbosonpartonsmatched",2465,G__Dict_776_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - Wbosonpartonsmatched", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWMassmatched",1549,G__Dict_776_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - WMassmatched", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventWeight",1462,G__Dict_776_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - eventWeight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMET",562,G__Dict_776_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - MET", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedJets",1547,G__Dict_776_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - selectedJets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBTagTCHE",974,G__Dict_776_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 0 - bTagTCHE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBTagTCHP",985,G__Dict_776_0_83, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 0 - bTagTCHP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setpartonFlavourJet",2018,G__Dict_776_0_84, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 0 - partonFlavourJet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSelectedForwardJets",2272,G__Dict_776_0_85, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - selectedForwardJets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitJets",1142,G__Dict_776_0_86, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - InitJets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitJetsBTagTCHE",1784,G__Dict_776_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 0 - InitJetsbTagTCHE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitJetsBTagTCHP",1795,G__Dict_776_0_88, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 0 - InitJetsbTagTCHP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMuons",862,G__Dict_776_0_89, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - selectedMuons", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setElectrons",1275,G__Dict_776_0_90, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - selectedElectrons", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMuonsRelIso",1452,G__Dict_776_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 0 - selectedMuonsRelIso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setElectronsRelIso",1865,G__Dict_776_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 0 - selectedElectronsRelIso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setmcQuarksForMatching",2277,G__Dict_776_0_93, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - mcQuarksForMatching", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChargeMisIdRateBarrel",2384,G__Dict_776_0_94, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - chargeMisIdRateBarrel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChargeMisIdRateEndcap",2371,G__Dict_776_0_95, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - chargeMisIdRateEndcap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setQuarksFromW",1454,G__Dict_776_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 0 - quarksFromW", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_776_0_97, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&InclFourthGenTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_776_0_98, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&InclFourthGenTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_776_0_99, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&InclFourthGenTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_776_0_100, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&InclFourthGenTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_776_0_104, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_776_0_105, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&InclFourthGenTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_776_0_106, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&InclFourthGenTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_776_0_107, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&InclFourthGenTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_776_0_108, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&InclFourthGenTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("InclFourthGenTree", 1704, G__Dict_776_0_109, (int) ('i'), G__get_linked_tagnum(&G__DictLN_InclFourthGenTree), -1, 0, 1, 1, 1, 0, "u 'InclFourthGenTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~InclFourthGenTree", 1830, G__Dict_776_0_110, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_776_0_111, (int) ('u'), G__get_linked_tagnum(&G__DictLN_InclFourthGenTree), -1, 1, 1, 1, 1, 0, "u 'InclFourthGenTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncVJetEstimation(void) {
   /* VJetEstimation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_VJetEstimation));
   G__memfunc_setup("VJetEstimation",1430,G__Dict_1366_0_1, 105, G__get_linked_tagnum(&G__DictLN_VJetEstimation), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VJetEstimation",1430,G__Dict_1366_0_2, 105, G__get_linked_tagnum(&G__DictLN_VJetEstimation), -1, 0, 8, 1, 1, 0, 
"h - 'UInt_t' 0 - NofBtagWorkingPoint F - 'Float_t' 0 - BtagWorkingPoint "
"h - 'UInt_t' 0 - NofJets h - 'UInt_t' 0 - NofJetBins "
"u 'vector<Dataset,allocator<Dataset> >' 'vector<Dataset>' 0 - datasets u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - ttLikeDatasetNames "
"u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - vLikeDatasetNames u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - vblikeDatasetNames", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VJetEstimation",1430,G__Dict_1366_0_3, 105, G__get_linked_tagnum(&G__DictLN_VJetEstimation), -1, 0, 9, 1, 1, 0, 
"h - 'UInt_t' 0 - NofBtagWorkingPoint F - 'Float_t' 0 - BtagWorkingPoint "
"h - 'UInt_t' 0 - NofJets h - 'UInt_t' 0 - NofJetBins "
"D - 'Double_t' 2 - EffXbq h - 'UInt_t' 0 - NofDatasets "
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - iDTTLike u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - iDVLike "
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - iDVbLike", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VJetEstimation",1430,G__Dict_1366_0_4, 105, G__get_linked_tagnum(&G__DictLN_VJetEstimation), -1, 0, 1, 1, 1, 0, "u 'VJetEstimation' - 11 - vjet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__Dict_1366_0_5, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<TopTree::TRootJet*,allocator<TopTree::TRootJet*> >' 'vector<TopTree::TRootJet*>' 1 - SelectedJets h - 'UInt_t' 0 - idx "
"1 - 'Double_t (*)(TopTree::TRootJet*)' 0 - btag_algo d - 'Double_t' 0 '1.' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillInputs",1034,G__Dict_1366_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >,allocator<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > > > >' 'vector<vector<vector<vector<Double_t> > > >' 0 - Inputs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillInputs",1034,G__Dict_1366_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >,allocator<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > > > >' 'vector<vector<vector<vector<Double_t> > > >' 0 - Inputs u 'vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >' 'vector<vector<vector<Double_t> > >' 0 - Multijet_est_nj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReScaleInputs",1314,G__Dict_1366_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - idx f - 'Float_t' 0 - Ntot "
"d - 'Double_t' 0 - factor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WilsonScoreIntervalLow",2287,G__Dict_1366_0_9, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - Non f - 'Float_t' 0 - Ntot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WilsonScoreIntervalHigh",2365,G__Dict_1366_0_10, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - Non f - 'Float_t' 0 - Ntot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WilsonScoreIntervalMean",2366,G__Dict_1366_0_11, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - Non f - 'Float_t' 0 - Ntot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProcesses",1251,G__Dict_1366_0_12, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<bool,allocator<bool> >' 'vector<Bool_t>' 0 - processMask u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - ttLikeDatasetNames "
"u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - vLikeDatasetNames u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - vbLikeDatasetNames", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SumOverAllInputs",1645,G__Dict_1366_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeEffbqFromMC",1765,G__Dict_1366_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeEffFromMC",1554,G__Dict_1366_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillSummaryHistos",1775,G__Dict_1366_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BckgdSubstraction",1756,G__Dict_1366_0_17, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<MCObsExpectation*,allocator<MCObsExpectation*> >' 'vector<MCObsExpectation*>' 1 - hists u 'vector<string,allocator<string> >' 'vector<string>' 1 - name "
"f - 'Float_t' 0 - lumi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialValues_Nttlike",2464,G__Dict_1366_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialValues_Nttlike",2464,G__Dict_1366_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - njets d - 'Double_t' 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitialValues_Nttlike",2452,G__Dict_1366_0_20, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialValues_Nvlike",2350,G__Dict_1366_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialValues_Nvlike",2350,G__Dict_1366_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - njets d - 'Double_t' 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitialValues_Nvlike",2338,G__Dict_1366_0_23, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialValues_Eb",1900,G__Dict_1366_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' 'vector<vector<Double_t> >' 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialValues_Eb",1900,G__Dict_1366_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - njets u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialValues_Eb",1900,G__Dict_1366_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - njets h - 'UInt_t' 0 - btagIdx "
"d - 'Double_t' 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitialValues_Eb",1888,G__Dict_1366_0_27, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - njets h - 'UInt_t' 0 - btagIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialValues_Eudsc",2233,G__Dict_1366_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' 'vector<vector<Double_t> >' 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialValues_Eudsc",2233,G__Dict_1366_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - njets u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialValues_Eudsc",2233,G__Dict_1366_0_30, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - njets h - 'UInt_t' 0 - btagIdx "
"d - 'Double_t' 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitialValues_Eudsc",2221,G__Dict_1366_0_31, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - njets h - 'UInt_t' 0 - btagIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialValues_Euds",2134,G__Dict_1366_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' 'vector<vector<Double_t> >' 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialValues_Euds",2134,G__Dict_1366_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - njets u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialValues_Euds",2134,G__Dict_1366_0_34, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - njets h - 'UInt_t' 0 - btagIdx "
"d - 'Double_t' 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinnedMaximumLikelihoodEst",2849,G__Dict_1366_0_35, 121, -1, -1, 0, 6, 1, 1, 0, 
"h - 'UInt_t' 0 - btag_wp_idx h - 'UInt_t' 0 - njets "
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 1 - FixedVarIdx g - - 0 - doMinos "
"g - - 0 - doWS g - - 0 - Verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinnedMaximumLikelihoodEst",2849,G__Dict_1366_0_36, 121, -1, -1, 0, 5, 1, 1, 0, 
"h - 'UInt_t' 0 - njets u 'vector<int,allocator<int> >' 'vector<Int_t>' 1 - FixedVarIdx "
"g - - 0 - doMinos g - - 0 - doWS "
"g - - 0 - Verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinnedMaximumLikelihoodEst",2849,G__Dict_1366_0_37, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 1 - FixedVarIdx g - - 0 - doMinos "
"g - - 0 - doWS g - - 0 - Verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinnedMaximumJointWPLikelihoodEst",3532,G__Dict_1366_0_38, 121, -1, -1, 0, 5, 1, 1, 0, 
"h - 'UInt_t' 0 - njets u 'vector<int,allocator<int> >' 'vector<Int_t>' 1 - FixedVarIdx "
"g - - 0 - doMinos g - - 0 - doWS "
"g - - 0 - Verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinnedMaximumJointWPLikelihoodEst",3532,G__Dict_1366_0_39, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 1 - FixedVarIdx g - - 0 - doMinos "
"g - - 0 - doWS g - - 0 - Verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintInputs",1168,G__Dict_1366_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintInputs",1168,G__Dict_1366_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintResults",1279,G__Dict_1366_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintResults",1279,G__Dict_1366_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintResults_LatexFormat",2501,G__Dict_1366_0_44, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - ofile i - 'Int_t' 0 '3' Eff_prec "
"i - 'Int_t' 0 '1' N_prec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintResults_LatexFormat",2501,G__Dict_1366_0_45, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '3' Eff_prec i - 'Int_t' 0 '1' N_prec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEstimation",1531,G__Dict_1366_0_46, 103, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - threshold", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEstimation",1531,G__Dict_1366_0_47, 103, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - threshold h - 'UInt_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEstimationLinearity",2476,G__Dict_1366_0_48, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 1 - FixedVarIdx g - - 0 - doMinos "
"i - 'Int_t' 0 - nbOfRescaleFact D - 'Double_t' 2 - RescaleFact "
"i - 'Int_t' 0 - Idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfBtagWorkingPoint",2286,G__Dict_1366_0_49, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfDatasets",1470,G__Dict_1366_0_50, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfBJetsBins",1513,G__Dict_1366_0_51, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfJetsBins",1447,G__Dict_1366_0_52, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNjets",804,G__Dict_1366_0_53, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - jetidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDatasets",1113,G__Dict_1366_0_54, 117, G__get_linked_tagnum(&G__DictLN_vectorlEDatasetcOallocatorlEDatasetgRsPgR), G__defined_typename("vector<Dataset>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetiDatasetsTTLike",1775,G__Dict_1366_0_55, 117, G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetiDatasetsVLike",1693,G__Dict_1366_0_56, 117, G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetiDatasetsVbLike",1791,G__Dict_1366_0_57, 117, G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetN",366,G__Dict_1366_0_58, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgR), G__defined_typename("vector<vector<vector<vector<Double_t> > > >"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetN",366,G__Dict_1366_0_59, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR), G__defined_typename("vector<vector<vector<Double_t> > >"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetN",366,G__Dict_1366_0_60, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), G__defined_typename("vector<vector<Double_t> >"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - wp h - 'UInt_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetN",366,G__Dict_1366_0_61, 117, G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 3, 1, 1, 8, 
"h - 'UInt_t' 0 - wp h - 'UInt_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetN",366,G__Dict_1366_0_62, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 8, 
"h - 'UInt_t' 0 - wp h - 'UInt_t' 0 - njets "
"i - 'Int_t' 0 - nbjets i - 'Int_t' 0 - dataset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbjets",902,G__Dict_1366_0_63, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR), G__defined_typename("vector<vector<vector<Double_t> > >"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbjets",902,G__Dict_1366_0_64, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), G__defined_typename("vector<vector<Double_t> >"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbjets",902,G__Dict_1366_0_65, 117, G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - wp h - 'UInt_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbjets",902,G__Dict_1366_0_66, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"h - 'UInt_t' 0 - wp h - 'UInt_t' 0 - njets "
"h - 'UInt_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinLL",732,G__Dict_1366_0_67, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredEb",850,G__Dict_1366_0_68, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredEb",850,G__Dict_1366_0_69, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredEbErr",1147,G__Dict_1366_0_70, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredEbErr",1147,G__Dict_1366_0_71, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPredEb",862,G__Dict_1366_0_72, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredEudsc",1183,G__Dict_1366_0_73, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredEudsc",1183,G__Dict_1366_0_74, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredEudscErr",1480,G__Dict_1366_0_75, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredEudscErr",1480,G__Dict_1366_0_76, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPredEudsc",1195,G__Dict_1366_0_77, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredEuds",1084,G__Dict_1366_0_78, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredEuds",1084,G__Dict_1366_0_79, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredEudsErr",1381,G__Dict_1366_0_80, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredEudsErr",1381,G__Dict_1366_0_81, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPredEuds",1096,G__Dict_1366_0_82, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNv",879,G__Dict_1366_0_83, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNv",879,G__Dict_1366_0_84, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNv",879,G__Dict_1366_0_85, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNvErr",1176,G__Dict_1366_0_86, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNvErr",1176,G__Dict_1366_0_87, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNvErr",1176,G__Dict_1366_0_88, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNvb",977,G__Dict_1366_0_89, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNvb",977,G__Dict_1366_0_90, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNvb",977,G__Dict_1366_0_91, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNvbErr",1274,G__Dict_1366_0_92, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNvbErr",1274,G__Dict_1366_0_93, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNvbErr",1274,G__Dict_1366_0_94, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNtt",993,G__Dict_1366_0_95, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNtt",993,G__Dict_1366_0_96, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNtt",993,G__Dict_1366_0_97, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNttErr",1290,G__Dict_1366_0_98, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNttErr",1290,G__Dict_1366_0_99, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNttErr",1290,G__Dict_1366_0_100, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNtotal",1309,G__Dict_1366_0_101, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNtotal",1309,G__Dict_1366_0_102, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredNtotal",1309,G__Dict_1366_0_103, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredN",761,G__Dict_1366_0_104, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPredN",761,G__Dict_1366_0_105, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - idx i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEb",755,G__Dict_1366_0_106, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEb",755,G__Dict_1366_0_107, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEbErr",1052,G__Dict_1366_0_108, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEbErr",1052,G__Dict_1366_0_109, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEbErrHigh",1436,G__Dict_1366_0_110, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEbErrLow",1358,G__Dict_1366_0_111, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEudsc",1088,G__Dict_1366_0_112, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEudsc",1088,G__Dict_1366_0_113, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEudscErr",1385,G__Dict_1366_0_114, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEudscErr",1385,G__Dict_1366_0_115, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEudscErrHigh",1769,G__Dict_1366_0_116, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEudscErrLow",1691,G__Dict_1366_0_117, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEuds",989,G__Dict_1366_0_118, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEuds",989,G__Dict_1366_0_119, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEudsErr",1286,G__Dict_1366_0_120, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEudsErr",1286,G__Dict_1366_0_121, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEudsErrHigh",1670,G__Dict_1366_0_122, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEudsErrLow",1592,G__Dict_1366_0_123, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNv",784,G__Dict_1366_0_124, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNv",784,G__Dict_1366_0_125, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNv",784,G__Dict_1366_0_126, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNvErr",1081,G__Dict_1366_0_127, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNvErr",1081,G__Dict_1366_0_128, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNvErrUp",1278,G__Dict_1366_0_129, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNvErrDown",1489,G__Dict_1366_0_130, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNvErr",1081,G__Dict_1366_0_131, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNvb",882,G__Dict_1366_0_132, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNvb",882,G__Dict_1366_0_133, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNvb",882,G__Dict_1366_0_134, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNvbErr",1179,G__Dict_1366_0_135, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNvbErr",1179,G__Dict_1366_0_136, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNvbErr",1179,G__Dict_1366_0_137, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNtt",898,G__Dict_1366_0_138, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNtt",898,G__Dict_1366_0_139, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNtt",898,G__Dict_1366_0_140, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNttErr",1195,G__Dict_1366_0_141, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNttErr",1195,G__Dict_1366_0_142, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNttErrUp",1392,G__Dict_1366_0_143, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNttErrDown",1603,G__Dict_1366_0_144, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNttErr",1195,G__Dict_1366_0_145, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNtotal",1214,G__Dict_1366_0_146, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNtotal",1214,G__Dict_1366_0_147, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstNtotal",1214,G__Dict_1366_0_148, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wp i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTTEff2bq",990,G__Dict_1366_0_149, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTTEff2bq",1002,G__Dict_1366_0_150, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - njets d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTTEff1bq",989,G__Dict_1366_0_151, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTTEff1bq",1001,G__Dict_1366_0_152, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - njets d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTTEff0bq",988,G__Dict_1366_0_153, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - njets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTTEff0bq",1000,G__Dict_1366_0_154, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - njets d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBtagWorkingPoint",1929,G__Dict_1366_0_155, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBtagWorkingPoint",1941,G__Dict_1366_0_156, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - idx d - 'Double_t' 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nbjets",614,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 8, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - Nv "
"d - 'Double_t' 0 - Nvb d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - eudsc d - 'Double_t' 0 - euds "
"i - 'Int_t' 0 - njets i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ntt_bjets",941,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - eudsc i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nvb_bjets",925,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 4, 8, 
"d - 'Double_t' 0 - Nvb d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - euds i - 'Int_t' 0 - njets "
"i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nv_bjets",827,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 4, 8, 
"d - 'Double_t' 0 - Nv d - 'Double_t' 0 - euds "
"i - 'Int_t' 0 - njets i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ntt_err_bjets",1365,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 8, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - Ntt_err "
"d - 'Double_t' 0 - eb d - 'Double_t' 0 - eb_err "
"d - 'Double_t' 0 - eudsc d - 'Double_t' 0 - eudsc_err "
"i - 'Int_t' 0 - njets i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nv_err_bjets",1251,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 4, 8, 
"d - 'Double_t' 0 - Nv d - 'Double_t' 0 - Nv_err "
"d - 'Double_t' 0 - euds d - 'Double_t' 0 - euds_err "
"i - 'Int_t' 0 - njets i - 'Int_t' 0 - nbjets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N0bjet",547,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - Nv "
"d - 'Double_t' 0 - Nvb d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - eudsc d - 'Double_t' 0 - euds "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ntt_0bjet",874,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - eudsc i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nvb_0bjet",858,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 4, 8, 
"d - 'Double_t' 0 - Nvb d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - euds i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nv_0bjet",760,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 4, 8, 
"d - 'Double_t' 0 - Nv d - 'Double_t' 0 - euds "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ntt_err_0bjet",1298,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - Ntt_err "
"d - 'Double_t' 0 - eb d - 'Double_t' 0 - eb_err "
"d - 'Double_t' 0 - eudsc d - 'Double_t' 0 - eudsc_err "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nv_err_0bjet",1184,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 4, 8, 
"d - 'Double_t' 0 - Nv d - 'Double_t' 0 - Nv_err "
"d - 'Double_t' 0 - euds d - 'Double_t' 0 - euds_err "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N1bjet",548,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - Nv "
"d - 'Double_t' 0 - Nvb d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - eudsc d - 'Double_t' 0 - euds "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ntt_1bjet",875,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - eudsc i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nvb_1bjet",859,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 4, 8, 
"d - 'Double_t' 0 - Nvb d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - euds i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nv_1bjet",761,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 4, 8, 
"d - 'Double_t' 0 - Nv d - 'Double_t' 0 - euds "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ntt_err_1bjet",1299,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - Ntt_err "
"d - 'Double_t' 0 - eb d - 'Double_t' 0 - eb_err "
"d - 'Double_t' 0 - eudsc d - 'Double_t' 0 - eudsc_err "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nv_err_1bjet",1185,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 4, 8, 
"d - 'Double_t' 0 - Nv d - 'Double_t' 0 - Nv_err "
"d - 'Double_t' 0 - euds d - 'Double_t' 0 - euds_err "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N2bjets",664,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - Nv "
"d - 'Double_t' 0 - Nvb d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - eudsc d - 'Double_t' 0 - euds "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ntt_2bjets",991,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - eudsc i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nvb_2bjets",975,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 4, 8, 
"d - 'Double_t' 0 - Nvb d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - euds i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nv_2bjets",877,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 4, 8, 
"d - 'Double_t' 0 - Nv d - 'Double_t' 0 - euds "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ntt_err_2bjets",1415,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - Ntt_err "
"d - 'Double_t' 0 - eb d - 'Double_t' 0 - eb_err "
"d - 'Double_t' 0 - eudsc d - 'Double_t' 0 - eudsc_err "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nv_err_2bjets",1301,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 4, 8, 
"d - 'Double_t' 0 - Nv d - 'Double_t' 0 - Nv_err "
"d - 'Double_t' 0 - euds d - 'Double_t' 0 - euds_err "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N3bjets",665,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - Nv "
"d - 'Double_t' 0 - Nvb d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - eudsc d - 'Double_t' 0 - euds "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ntt_3bjets",992,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - eudsc i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nvb_3bjets",976,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 4, 8, 
"d - 'Double_t' 0 - Nvb d - 'Double_t' 0 - eb "
"d - 'Double_t' 0 - euds i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nv_3bjets",878,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 4, 8, 
"d - 'Double_t' 0 - Nv d - 'Double_t' 0 - euds "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ntt_err_3bjets",1416,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 8, 
"d - 'Double_t' 0 - Ntt d - 'Double_t' 0 - Ntt_err "
"d - 'Double_t' 0 - eb d - 'Double_t' 0 - eb_err "
"d - 'Double_t' 0 - eudsc d - 'Double_t' 0 - eudsc_err "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nv_err_3bjets",1302,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 4, 8, 
"d - 'Double_t' 0 - Nv d - 'Double_t' 0 - Nv_err "
"d - 'Double_t' 0 - euds d - 'Double_t' 0 - euds_err "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_1366_0_187, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&VJetEstimation::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_1366_0_188, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VJetEstimation::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_1366_0_189, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&VJetEstimation::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_1366_0_190, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&VJetEstimation::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_1366_0_194, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_1366_0_195, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VJetEstimation::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_1366_0_196, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&VJetEstimation::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_1366_0_197, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VJetEstimation::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_1366_0_198, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&VJetEstimation::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~VJetEstimation", 1556, G__Dict_1366_0_199, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_1366_0_200, (int) ('u'), G__get_linked_tagnum(&G__DictLN_VJetEstimation), -1, 1, 1, 1, 1, 0, "u 'VJetEstimation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {
}

static void G__cpp_setup_func40() {
}

static void G__cpp_setup_func41() {
}

static void G__cpp_setup_func42() {
}

static void G__cpp_setup_func43() {
}

static void G__cpp_setup_func44() {
}

static void G__cpp_setup_func45() {
}

static void G__cpp_setup_func46() {
}

static void G__cpp_setup_func47() {
}

static void G__cpp_setup_func48() {
}

static void G__cpp_setup_func49() {
}

static void G__cpp_setup_func50() {
}

static void G__cpp_setup_func51() {
}

static void G__cpp_setup_func52() {
}

static void G__cpp_setup_func53() {
}

static void G__cpp_setup_func54() {
}

static void G__cpp_setup_func55() {
}

static void G__cpp_setup_func56() {
}

static void G__cpp_setup_func57() {
}

static void G__cpp_setup_func58() {
}

static void G__cpp_setup_func59() {
}

static void G__cpp_setup_func60() {
}

static void G__cpp_setup_func61() {
}

static void G__cpp_setup_func62() {
}

static void G__cpp_setup_func63() {
}

static void G__cpp_setup_func64() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
  G__cpp_setup_func40();
  G__cpp_setup_func41();
  G__cpp_setup_func42();
  G__cpp_setup_func43();
  G__cpp_setup_func44();
  G__cpp_setup_func45();
  G__cpp_setup_func46();
  G__cpp_setup_func47();
  G__cpp_setup_func48();
  G__cpp_setup_func49();
  G__cpp_setup_func50();
  G__cpp_setup_func51();
  G__cpp_setup_func52();
  G__cpp_setup_func53();
  G__cpp_setup_func54();
  G__cpp_setup_func55();
  G__cpp_setup_func56();
  G__cpp_setup_func57();
  G__cpp_setup_func58();
  G__cpp_setup_func59();
  G__cpp_setup_func60();
  G__cpp_setup_func61();
  G__cpp_setup_func62();
  G__cpp_setup_func63();
  G__cpp_setup_func64();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__DictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__DictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTree = { "TopTree" , 110 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootParticle = { "TopTree::TRootParticle" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR = { "map<string,float,less<string>,allocator<pair<const string,float> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootJet = { "TopTree::TRootJet" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootMuon = { "TopTree::TRootMuon" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootGenEvent = { "TopTree::TRootGenEvent" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootGenEventcLcLLeptonType = { "TopTree::TRootGenEvent::LeptonType" , 101 , -1 };
G__linked_taginfo G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR = { "vector<TLorentzVector,allocator<TLorentzVector> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TLorentzVector,allocator<TLorentzVector> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootMCParticle = { "TopTree::TRootMCParticle" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootGenTop = { "TopTree::TRootGenTop" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootNPGenEvent = { "TopTree::TRootNPGenEvent" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgR = { "vector<TopTree::TRootGenTop,allocator<TopTree::TRootGenTop> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TopTree::TRootGenTop,allocator<TopTree::TRootGenTop> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR = { "vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TopTree::TRootMCParticle,allocator<TopTree::TRootMCParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootMET = { "TopTree::TRootMET" , 99 , -1 };
G__linked_taginfo G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_Observables = { "Observables" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETopTreecLcLTRootJetcOallocatorlETopTreecLcLTRootJetgRsPgR = { "vector<TopTree::TRootJet,allocator<TopTree::TRootJet> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootJetcOallocatorlETopTreecLcLTRootJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TopTree::TRootJet,allocator<TopTree::TRootJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETopTreecLcLTRootJetmUcOallocatorlETopTreecLcLTRootJetmUgRsPgR = { "vector<TopTree::TRootJet*,allocator<TopTree::TRootJet*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootJetmUcOallocatorlETopTreecLcLTRootJetmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TopTree::TRootJet*,allocator<TopTree::TRootJet*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_pairlEfloatcOfloatgR = { "pair<float,float>" , 115 , -1 };
G__linked_taginfo G__DictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR = { "vector<pair<string,float>,allocator<pair<string,float> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<string,float>,allocator<pair<string,float> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR = { "vector<pair<float,float>,allocator<pair<float,float> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<float,float>,allocator<pair<float,float> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_AnalysisEnvironment = { "AnalysisEnvironment" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >,allocator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >,allocator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TAxis = { "TAxis" , 99 , -1 };
G__linked_taginfo G__DictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__DictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__DictLN_TMap = { "TMap" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_BinningFirstGuess = { "BinningFirstGuess" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOTAxismUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTAxismUgRsPgRsPgR = { "map<string,TAxis*,less<string>,allocator<pair<const string,TAxis*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__DictLN_Container = { "Container" , 99 , -1 };
G__linked_taginfo G__DictLN_Dataset = { "Dataset" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_MCExpectation = { "MCExpectation" , 99 , -1 };
G__linked_taginfo G__DictLN_THStack = { "THStack" , 99 , -1 };
G__linked_taginfo G__DictLN_TLegend = { "TLegend" , 99 , -1 };
G__linked_taginfo G__DictLN_MCObsExpectation = { "MCObsExpectation" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEDatasetmUcOallocatorlEDatasetmUgRsPgR = { "vector<Dataset*,allocator<Dataset*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEDatasetmUcOallocatorlEDatasetmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Dataset*,allocator<Dataset*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootCaloJet = { "TopTree::TRootCaloJet" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootCaloMET = { "TopTree::TRootCaloMET" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootElectron = { "TopTree::TRootElectron" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLtriggeredObject = { "TopTree::triggeredObject" , 115 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootEvent = { "TopTree::TRootEvent" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgR = { "vector<TopTree::triggeredObject,allocator<TopTree::triggeredObject> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TopTree::triggeredObject,allocator<TopTree::triggeredObject> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRsPgRsPgRsPgR = { "map<string,vector<TopTree::triggeredObject,allocator<TopTree::triggeredObject> >,less<string>,allocator<pair<const string,vector<TopTree::triggeredObject,allocator<TopTree::triggeredObject> > > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootGenJet = { "TopTree::TRootGenJet" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootHLTInfo = { "TopTree::TRootHLTInfo" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootJPTJet = { "TopTree::TRootJPTJet" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootPFJet = { "TopTree::TRootPFJet" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootPFMET = { "TopTree::TRootPFMET" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootRun = { "TopTree::TRootRun" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETopTreecLcLTRootHLTInfocOallocatorlETopTreecLcLTRootHLTInfogRsPgR = { "vector<TopTree::TRootHLTInfo,allocator<TopTree::TRootHLTInfo> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootHLTInfocOallocatorlETopTreecLcLTRootHLTInfogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TopTree::TRootHLTInfo,allocator<TopTree::TRootHLTInfo> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootSpinCorrGen = { "TopTree::TRootSpinCorrGen" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootTrackMET = { "TopTree::TRootTrackMET" , 99 , -1 };
G__linked_taginfo G__DictLN_TopTreecLcLTRootVertex = { "TopTree::TRootVertex" , 99 , -1 };
G__linked_taginfo G__DictLN_LightMonster = { "LightMonster" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR = { "vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_WTree = { "WTree" , 99 , -1 };
G__linked_taginfo G__DictLN_InclFourthGenTree = { "InclFourthGenTree" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR = { "vector<complex<double>,allocator<complex<double> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<complex<double>,allocator<complex<double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_auto_ptrlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR = { "auto_ptr<ROOT::Math::IBaseFunctionMultiDim>" , 99 , -1 };
G__linked_taginfo G__DictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR = { "vector<pair<double,double>,allocator<pair<double,double> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<double,double>,allocator<pair<double,double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TGraphErrors = { "TGraphErrors" , 99 , -1 };
G__linked_taginfo G__DictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR = { "set<string,less<string>,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR = { "set<pair<RooAbsArg*,RooAbsArg*>,less<pair<RooAbsArg*,RooAbsArg*> >,allocator<pair<RooAbsArg*,RooAbsArg*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR = { "deque<RooAbsCache*,allocator<RooAbsCache*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_listlEdoublecOallocatorlEdoublegRsPgR = { "list<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DictLN_listlEstringcOallocatorlEstringgRsPgR = { "list<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR = { "vector<RooCurve*,allocator<RooCurve*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooCurve*,allocator<RooCurve*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR = { "map<string,TH1*,less<string>,allocator<pair<const string,TH1*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR = { "map<string,RooDataHist*,less<string>,allocator<pair<const string,RooDataHist*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR = { "map<string,RooDataSet*,less<string>,allocator<pair<const string,RooDataSet*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR = { "map<string,RooAbsData*,less<string>,allocator<pair<const string,RooAbsData*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR = { "list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> >" , 99 , -1 };
G__linked_taginfo G__DictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR = { "pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >" , 115 , -1 };
G__linked_taginfo G__DictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR = { "map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >,less<const RooAbsArg*>,allocator<pair<const RooAbsArg* const,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > > > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR = { "map<int,string,less<int>,allocator<pair<const int,string> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR = { "vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR = { "deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,allocator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR = { "stack<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,allocator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR = { "map<string,basic_ostream<char,char_traits<char> >*,less<string>,allocator<pair<const string,basic_ostream<char,char_traits<char> >*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_listlERooArgSetmUcOallocatorlERooArgSetmUgRsPgR = { "list<RooArgSet*,allocator<RooArgSet*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_listlERooDataSetmUcOallocatorlERooDataSetmUgRsPgR = { "list<RooDataSet*,allocator<RooDataSet*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcORooAbsPdfmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsPdfmUgRsPgRsPgR = { "map<string,RooAbsPdf*,less<string>,allocator<pair<const string,RooAbsPdf*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR = { "map<TString,double,less<TString>,allocator<pair<const TString,double> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR = { "map<TString,int,less<TString>,allocator<pair<const TString,int> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplETStringcORooExpensiveObjectCachecLcLExpensiveObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooExpensiveObjectCachecLcLExpensiveObjectmUgRsPgRsPgR = { "map<TString,RooExpensiveObjectCache::ExpensiveObject*,less<TString>,allocator<pair<const TString,RooExpensiveObjectCache::ExpensiveObject*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_listlERooAbsDatamUcOallocatorlERooAbsDatamUgRsPgR = { "list<RooAbsData*,allocator<RooAbsData*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_listlETObjectmUcOallocatorlETObjectmUgRsPgR = { "list<TObject*,allocator<TObject*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplETStringcORooWorkspacecLcLCodeRepocLcLClassRelInfocOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooWorkspacecLcLCodeRepocLcLClassRelInfogRsPgRsPgR = { "map<TString,RooWorkspace::CodeRepo::ClassRelInfo,less<TString>,allocator<pair<const TString,RooWorkspace::CodeRepo::ClassRelInfo> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplETStringcORooWorkspacecLcLCodeRepocLcLClassFilescOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooWorkspacecLcLCodeRepocLcLClassFilesgRsPgRsPgR = { "map<TString,RooWorkspace::CodeRepo::ClassFiles,less<TString>,allocator<pair<const TString,RooWorkspace::CodeRepo::ClassFiles> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcORooArgSetcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooArgSetgRsPgRsPgR = { "map<string,RooArgSet,less<string>,allocator<pair<const string,RooArgSet> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_listlERooAbsMCStudyModulemUcOallocatorlERooAbsMCStudyModulemUgRsPgR = { "list<RooAbsMCStudyModule*,allocator<RooAbsMCStudyModule*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR = { "vector<ROOT::Fit::ParameterSettings,allocator<ROOT::Fit::ParameterSettings> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::Fit::ParameterSettings,allocator<ROOT::Fit::ParameterSettings> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR = { "map<unsigned int,pair<double,double>,less<unsigned int>,allocator<pair<const unsigned int,pair<double,double> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_VJetEstimation = { "VJetEstimation" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEDatasetcOallocatorlEDatasetgRsPgR = { "vector<Dataset,allocator<Dataset> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEDatasetcOallocatorlEDatasetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Dataset,allocator<Dataset> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >,allocator<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >,allocator<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEMCObsExpectationmUcOallocatorlEMCObsExpectationmUgRsPgR = { "vector<MCObsExpectation*,allocator<MCObsExpectation*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEMCObsExpectationmUcOallocatorlEMCObsExpectationmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MCObsExpectation*,allocator<MCObsExpectation*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETH1FcOallocatorlETH1FgRsPgR = { "vector<TH1F,allocator<TH1F> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH1F,allocator<TH1F> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgR = { "vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETH3FcOallocatorlETH3FgRsPgR = { "vector<TH3F,allocator<TH3F> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETH3FcOallocatorlETH3FgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH3F,allocator<TH3F> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgR = { "vector<vector<TH3F,allocator<TH3F> >,allocator<vector<TH3F,allocator<TH3F> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TH3F,allocator<TH3F> >,allocator<vector<TH3F,allocator<TH3F> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgR = { "vector<TEfficiency*,allocator<TEfficiency*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TEfficiency*,allocator<TEfficiency*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgR = { "vector<vector<TEfficiency*,allocator<TEfficiency*> >,allocator<vector<TEfficiency*,allocator<TEfficiency*> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TEfficiency*,allocator<TEfficiency*> >,allocator<vector<TEfficiency*,allocator<TEfficiency*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgR = { "vector<TGraphAsymmErrors*,allocator<TGraphAsymmErrors*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGraphAsymmErrors*,allocator<TGraphAsymmErrors*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >,allocator<vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > >,allocator<vector<vector<TH1F,allocator<TH1F> >,allocator<vector<TH1F,allocator<TH1F> > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETHStackmUcOallocatorlETHStackmUgRsPgR = { "vector<THStack*,allocator<THStack*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<THStack*,allocator<THStack*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgR = { "vector<vector<THStack*,allocator<THStack*> >,allocator<vector<THStack*,allocator<THStack*> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<THStack*,allocator<THStack*> >,allocator<vector<THStack*,allocator<THStack*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR = { "vector<TCanvas*,allocator<TCanvas*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TCanvas*,allocator<TCanvas*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgR = { "vector<vector<TCanvas*,allocator<TCanvas*> >,allocator<vector<TCanvas*,allocator<TCanvas*> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TCanvas*,allocator<TCanvas*> >,allocator<vector<TCanvas*,allocator<TCanvas*> > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDict() {
  G__DictLN_TClass.tagnum = -1 ;
  G__DictLN_TBuffer.tagnum = -1 ;
  G__DictLN_TMemberInspector.tagnum = -1 ;
  G__DictLN_TObject.tagnum = -1 ;
  G__DictLN_TString.tagnum = -1 ;
  G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__DictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__DictLN_string.tagnum = -1 ;
  G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TObjArray.tagnum = -1 ;
  G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__DictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__DictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__DictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__DictLN_TVector3.tagnum = -1 ;
  G__DictLN_TLorentzVector.tagnum = -1 ;
  G__DictLN_TopTree.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootParticle.tagnum = -1 ;
  G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootJet.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootMuon.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootGenEvent.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootGenEventcLcLLeptonType.tagnum = -1 ;
  G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootMCParticle.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootGenTop.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootNPGenEvent.tagnum = -1 ;
  G__DictLN_vectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootMET.tagnum = -1 ;
  G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__DictLN_Observables.tagnum = -1 ;
  G__DictLN_vectorlETopTreecLcLTRootJetcOallocatorlETopTreecLcLTRootJetgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootJetcOallocatorlETopTreecLcLTRootJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETopTreecLcLTRootJetmUcOallocatorlETopTreecLcLTRootJetmUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootJetmUcOallocatorlETopTreecLcLTRootJetmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_pairlEfloatcOfloatgR.tagnum = -1 ;
  G__DictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_AnalysisEnvironment.tagnum = -1 ;
  G__DictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TAxis.tagnum = -1 ;
  G__DictLN_TH1D.tagnum = -1 ;
  G__DictLN_TH1F.tagnum = -1 ;
  G__DictLN_TMap.tagnum = -1 ;
  G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_BinningFirstGuess.tagnum = -1 ;
  G__DictLN_maplEstringcOTAxismUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTAxismUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_TChain.tagnum = -1 ;
  G__DictLN_Container.tagnum = -1 ;
  G__DictLN_Dataset.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_MCExpectation.tagnum = -1 ;
  G__DictLN_THStack.tagnum = -1 ;
  G__DictLN_TLegend.tagnum = -1 ;
  G__DictLN_MCObsExpectation.tagnum = -1 ;
  G__DictLN_vectorlEDatasetmUcOallocatorlEDatasetmUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEDatasetmUcOallocatorlEDatasetmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootCaloJet.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootCaloMET.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootElectron.tagnum = -1 ;
  G__DictLN_TopTreecLcLtriggeredObject.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootEvent.tagnum = -1 ;
  G__DictLN_vectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_maplEstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootGenJet.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootHLTInfo.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootJPTJet.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootPFJet.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootPFMET.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootRun.tagnum = -1 ;
  G__DictLN_vectorlETopTreecLcLTRootHLTInfocOallocatorlETopTreecLcLTRootHLTInfogRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootHLTInfocOallocatorlETopTreecLcLTRootHLTInfogRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootSpinCorrGen.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootTrackMET.tagnum = -1 ;
  G__DictLN_TopTreecLcLTRootVertex.tagnum = -1 ;
  G__DictLN_LightMonster.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_WTree.tagnum = -1 ;
  G__DictLN_InclFourthGenTree.tagnum = -1 ;
  G__DictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_auto_ptrlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR.tagnum = -1 ;
  G__DictLN_TCanvas.tagnum = -1 ;
  G__DictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TGraphErrors.tagnum = -1 ;
  G__DictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR.tagnum = -1 ;
  G__DictLN_listlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DictLN_listlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR.tagnum = -1 ;
  G__DictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_listlERooArgSetmUcOallocatorlERooArgSetmUgRsPgR.tagnum = -1 ;
  G__DictLN_listlERooDataSetmUcOallocatorlERooDataSetmUgRsPgR.tagnum = -1 ;
  G__DictLN_maplEstringcORooAbsPdfmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsPdfmUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplETStringcORooExpensiveObjectCachecLcLExpensiveObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooExpensiveObjectCachecLcLExpensiveObjectmUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_listlERooAbsDatamUcOallocatorlERooAbsDatamUgRsPgR.tagnum = -1 ;
  G__DictLN_listlETObjectmUcOallocatorlETObjectmUgRsPgR.tagnum = -1 ;
  G__DictLN_maplETStringcORooWorkspacecLcLCodeRepocLcLClassRelInfocOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooWorkspacecLcLCodeRepocLcLClassRelInfogRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplETStringcORooWorkspacecLcLCodeRepocLcLClassFilescOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooWorkspacecLcLCodeRepocLcLClassFilesgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplEstringcORooArgSetcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooArgSetgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_listlERooAbsMCStudyModulemUcOallocatorlERooAbsMCStudyModulemUgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_VJetEstimation.tagnum = -1 ;
  G__DictLN_vectorlEDatasetcOallocatorlEDatasetgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEDatasetcOallocatorlEDatasetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEMCObsExpectationmUcOallocatorlEMCObsExpectationmUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEMCObsExpectationmUcOallocatorlEMCObsExpectationmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETH1FcOallocatorlETH1FgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETH3FcOallocatorlETH3FgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETH3FcOallocatorlETH3FgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETHStackmUcOallocatorlETHStackmUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DictLN_TObject);
   G__get_linked_tagnum_fwd(&G__DictLN_TString);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_string);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__DictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__DictLN_TopTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootParticle),sizeof(TopTree::TRootParticle),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootParticle,G__setup_memfuncTopTreecLcLTRootParticle);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_pairlEdoublecOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootJet),sizeof(TopTree::TRootJet),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootJet,G__setup_memfuncTopTreecLcLTRootJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootMuon),sizeof(TopTree::TRootMuon),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootMuon,G__setup_memfuncTopTreecLcLTRootMuon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootGenEvent),sizeof(TopTree::TRootGenEvent),-1,30464,(char*)NULL,G__setup_memvarTopTreecLcLTRootGenEvent,G__setup_memfuncTopTreecLcLTRootGenEvent);
   G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootGenEventcLcLLeptonType);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootMCParticle),sizeof(TopTree::TRootMCParticle),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootMCParticle,G__setup_memfuncTopTreecLcLTRootMCParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootGenTop),sizeof(TopTree::TRootGenTop),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootGenTop,G__setup_memfuncTopTreecLcLTRootGenTop);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootNPGenEvent),sizeof(TopTree::TRootNPGenEvent),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootNPGenEvent,G__setup_memfuncTopTreecLcLTRootNPGenEvent);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootGenTopcOallocatorlETopTreecLcLTRootGenTopgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootMCParticlecOallocatorlETopTreecLcLTRootMCParticlegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootMET),sizeof(TopTree::TRootMET),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootMET,G__setup_memfuncTopTreecLcLTRootMET);
   G__get_linked_tagnum_fwd(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_Observables);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETopTreecLcLTRootJetcOallocatorlETopTreecLcLTRootJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootJetcOallocatorlETopTreecLcLTRootJetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETopTreecLcLTRootJetmUcOallocatorlETopTreecLcLTRootJetmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootJetmUcOallocatorlETopTreecLcLTRootJetmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_pairlEfloatcOfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_AnalysisEnvironment),sizeof(AnalysisEnvironment),-1,30464,"was 2...",G__setup_memvarAnalysisEnvironment,G__setup_memfuncAnalysisEnvironment);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TAxis);
   G__get_linked_tagnum_fwd(&G__DictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__DictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__DictLN_TMap);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_BinningFirstGuess),sizeof(BinningFirstGuess),-1,65280,(char*)NULL,G__setup_memvarBinningFirstGuess,G__setup_memfuncBinningFirstGuess);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOTAxismUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTAxismUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_Container),sizeof(Container),-1,30464,(char*)NULL,G__setup_memvarContainer,G__setup_memfuncContainer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_Dataset),sizeof(Dataset),-1,63232,"was 1...",G__setup_memvarDataset,G__setup_memfuncDataset);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_MCExpectation),sizeof(MCExpectation),-1,63232,(char*)NULL,G__setup_memvarMCExpectation,G__setup_memfuncMCExpectation);
   G__get_linked_tagnum_fwd(&G__DictLN_THStack);
   G__get_linked_tagnum_fwd(&G__DictLN_TLegend);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_MCObsExpectation),sizeof(MCObsExpectation),-1,63232,"was 4...",G__setup_memvarMCObsExpectation,G__setup_memfuncMCObsExpectation);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEDatasetmUcOallocatorlEDatasetmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEDatasetmUcOallocatorlEDatasetmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootCaloJet),sizeof(TopTree::TRootCaloJet),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootCaloJet,G__setup_memfuncTopTreecLcLTRootCaloJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootCaloMET),sizeof(TopTree::TRootCaloMET),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootCaloMET,G__setup_memfuncTopTreecLcLTRootCaloMET);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootElectron),sizeof(TopTree::TRootElectron),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootElectron,G__setup_memfuncTopTreecLcLTRootElectron);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLtriggeredObject),sizeof(TopTree::triggeredObject),-1,256,(char*)NULL,G__setup_memvarTopTreecLcLtriggeredObject,G__setup_memfuncTopTreecLcLtriggeredObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootEvent),sizeof(TopTree::TRootEvent),-1,29952,(char*)NULL,G__setup_memvarTopTreecLcLTRootEvent,G__setup_memfuncTopTreecLcLTRootEvent);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETopTreecLcLtriggeredObjectcOallocatorlETopTreecLcLtriggeredObjectgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootGenJet),sizeof(TopTree::TRootGenJet),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootGenJet,G__setup_memfuncTopTreecLcLTRootGenJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootHLTInfo),sizeof(TopTree::TRootHLTInfo),-1,61696,(char*)NULL,G__setup_memvarTopTreecLcLTRootHLTInfo,G__setup_memfuncTopTreecLcLTRootHLTInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootJPTJet),sizeof(TopTree::TRootJPTJet),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootJPTJet,G__setup_memfuncTopTreecLcLTRootJPTJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootPFJet),sizeof(TopTree::TRootPFJet),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootPFJet,G__setup_memfuncTopTreecLcLTRootPFJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootPFMET),sizeof(TopTree::TRootPFMET),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootPFMET,G__setup_memfuncTopTreecLcLTRootPFMET);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootRun),sizeof(TopTree::TRootRun),-1,29952,(char*)NULL,G__setup_memvarTopTreecLcLTRootRun,G__setup_memfuncTopTreecLcLTRootRun);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETopTreecLcLTRootHLTInfocOallocatorlETopTreecLcLTRootHLTInfogRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETopTreecLcLTRootHLTInfocOallocatorlETopTreecLcLTRootHLTInfogRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootSpinCorrGen),sizeof(TopTree::TRootSpinCorrGen),-1,30464,(char*)NULL,G__setup_memvarTopTreecLcLTRootSpinCorrGen,G__setup_memfuncTopTreecLcLTRootSpinCorrGen);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootTrackMET),sizeof(TopTree::TRootTrackMET),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootTrackMET,G__setup_memfuncTopTreecLcLTRootTrackMET);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TopTreecLcLTRootVertex),sizeof(TopTree::TRootVertex),-1,63232,(char*)NULL,G__setup_memvarTopTreecLcLTRootVertex,G__setup_memfuncTopTreecLcLTRootVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_LightMonster),sizeof(LightMonster),-1,29952,(char*)NULL,G__setup_memvarLightMonster,G__setup_memfuncLightMonster);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_WTree),sizeof(WTree),-1,29952,(char*)NULL,G__setup_memvarWTree,G__setup_memfuncWTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_InclFourthGenTree),sizeof(InclFourthGenTree),-1,29952,(char*)NULL,G__setup_memvarInclFourthGenTree,G__setup_memfuncInclFourthGenTree);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_auto_ptrlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TGraphErrors);
   G__get_linked_tagnum_fwd(&G__DictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_listlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_listlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_listlERooArgSetmUcOallocatorlERooArgSetmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_listlERooDataSetmUcOallocatorlERooDataSetmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcORooAbsPdfmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsPdfmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplETStringcORooExpensiveObjectCachecLcLExpensiveObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooExpensiveObjectCachecLcLExpensiveObjectmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_listlERooAbsDatamUcOallocatorlERooAbsDatamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_listlETObjectmUcOallocatorlETObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplETStringcORooWorkspacecLcLCodeRepocLcLClassRelInfocOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooWorkspacecLcLCodeRepocLcLClassRelInfogRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplETStringcORooWorkspacecLcLCodeRepocLcLClassFilescOlesslETStringgRcOallocatorlEpairlEconstsPTStringcORooWorkspacecLcLCodeRepocLcLClassFilesgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcORooArgSetcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooArgSetgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_listlERooAbsMCStudyModulemUcOallocatorlERooAbsMCStudyModulemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_VJetEstimation),sizeof(VJetEstimation),-1,63232,(char*)NULL,G__setup_memvarVJetEstimation,G__setup_memfuncVJetEstimation);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEDatasetcOallocatorlEDatasetgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEDatasetcOallocatorlEDatasetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEMCObsExpectationmUcOallocatorlEMCObsExpectationmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEMCObsExpectationmUcOallocatorlEMCObsExpectationmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETH1FcOallocatorlETH1FgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETH3FcOallocatorlETH3FgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETH3FcOallocatorlETH3FgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlETH3FcOallocatorlETH3FgRsPgRcOallocatorlEvectorlETH3FcOallocatorlETH3FgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRcOallocatorlEvectorlETEfficiencymUcOallocatorlETEfficiencymUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETGraphAsymmErrorsmUcOallocatorlETGraphAsymmErrorsmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETH1FcOallocatorlETH1FgRsPgRcOallocatorlEvectorlETH1FcOallocatorlETH1FgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETHStackmUcOallocatorlETHStackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRcOallocatorlEvectorlETHStackmUcOallocatorlETHStackmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETCanvasmUcOallocatorlETCanvasmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRcOallocatorlEvectorlETCanvasmUcOallocatorlETCanvasmUgRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDict()");
  G__set_cpp_environmentDict();
  G__cpp_setup_tagtableDict();

  G__cpp_setup_inheritanceDict();

  G__cpp_setup_typetableDict();

  G__cpp_setup_memvarDict();

  G__cpp_setup_memfuncDict();
  G__cpp_setup_globalDict();
  G__cpp_setup_funcDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDict();
  return;
}
class G__cpp_setup_initDict {
  public:
    G__cpp_setup_initDict() { G__add_setup_func("Dict",(G__incsetup)(&G__cpp_setupDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDict() { G__remove_setup_func("Dict"); }
};
G__cpp_setup_initDict G__cpp_setup_initializerDict;

